import { w as withConfigTransport } from './withConfigTransport.js';
import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, createElementVNode, renderSlot, createCommentVNode } from 'vue';
import './global-config.js';
import './usePopover.js';
import './global-utils.js';
import { u as useColors } from './useColors.js';
import { u as useTextColor } from './useTextColor.js';
import './VaConfig.js';
import './global-properties.js';
import './isSymbol.js';
import './ssr-utils.js';
import 'colortranslator';

var script$1 = defineComponent({
    name: 'VaNavbar',
    props: {
        color: { type: String, default: 'secondary' },
        textColor: { type: String },
        shape: { type: Boolean, default: false },
    },
    setup(props) {
        const { getColor, shiftHSLAColor } = useColors();
        const { textColorComputed } = useTextColor();
        const color = computed(() => getColor(props.color));
        const shapeStyleComputed = computed(() => ({
            borderTopColor: shiftHSLAColor(color.value, { h: -1, s: -11, l: 10 }),
        }));
        const computedStyle = computed(() => ({
            backgroundColor: color.value,
            color: textColorComputed.value,
            fill: textColorComputed.value,
        }));
        return {
            computedStyle,
            shapeStyleComputed,
        };
    },
});

const _hoisted_1$1 = { class: "va-navbar__content" };
const _hoisted_2 = {
  key: 0,
  class: "va-navbar__left"
};
const _hoisted_3 = {
  key: 1,
  class: "va-navbar__center"
};
const _hoisted_4 = {
  key: 2,
  class: "va-navbar__right"
};

function render$1(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("header", {
    class: "va-navbar",
    style: normalizeStyle(_ctx.computedStyle)
  }, [
    createElementVNode("div", _hoisted_1$1, [
      (_ctx.$slots.left)
        ? (openBlock(), createElementBlock("div", _hoisted_2, [
            renderSlot(_ctx.$slots, "left")
          ]))
        : createCommentVNode("v-if", true),
      (_ctx.$slots.center)
        ? (openBlock(), createElementBlock("div", _hoisted_3, [
            renderSlot(_ctx.$slots, "center")
          ]))
        : createCommentVNode("v-if", true),
      (_ctx.$slots.right)
        ? (openBlock(), createElementBlock("div", _hoisted_4, [
            renderSlot(_ctx.$slots, "right")
          ]))
        : createCommentVNode("v-if", true)
    ]),
    (_ctx.shape)
      ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: "va-navbar__background-shape",
          style: normalizeStyle(_ctx.shapeStyleComputed)
        }, null, 4 /* STYLE */))
      : createCommentVNode("v-if", true)
  ], 4 /* STYLE */))
}

script$1.render = render$1;
script$1.__file = "src/components/va-navbar/VaNavbar.vue";

var script = defineComponent({
  name: 'VaNavbarItem',
});

const _hoisted_1 = { class: "va-navbar__item" };

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("div", _hoisted_1, [
    renderSlot(_ctx.$slots, "default")
  ]))
}

script.render = render;
script.__file = "src/components/va-navbar/VaNavbarItem/VaNavbarItem.vue";

const VaNavbar = withConfigTransport(script$1);
const VaNavbarItem = withConfigTransport(script);

export { VaNavbar, VaNavbarItem };
//# sourceMappingURL=index37.js.map
