{"version":3,"file":"useColors.js","sources":["../../src/services/color-config/color-functions.ts","../../src/composables/useColors.ts"],"sourcesContent":["// import colortranslator, { ColorTranslator as CTClass } from 'colortranslator'\nimport { ColorTranslator } from 'colortranslator'\nimport { HSLObject, ColorInput } from 'colortranslator/dist/@types'\n\n/** This is a hack for cjs and esm build when we can transpile colortranslator */\n// const ColorTranslator = CTClass || colortranslator.ColorTranslator\n\nexport const colorToRgba = (color: ColorInput, opacity: number) => {\n  return new ColorTranslator(color).setA(opacity).RGBA\n}\n\nexport const getTextColor = (color: ColorInput, darkColor = 'dark', lightColor = 'white') => {\n  const { R, G, B } = new ColorTranslator(color)\n  const isLightBackground = Math.sqrt(R * R * 0.241 + G * G * 0.691 + B * B * 0.068) > 130\n  return isLightBackground ? darkColor : lightColor\n}\n\nexport const getBoxShadowColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.4).RGBA\n}\n\nexport const getHoverColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.2).RGBA\n}\n\nexport const getFocusColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.3).RGBA\n}\n\nexport const shiftHSLAColor = (color: ColorInput, offset: { h?: number; s?: number; l?: number; a?: number }) => {\n  const result = new ColorTranslator(color)\n\n  if (offset.h) { result.setH(result.H + offset.h) }\n\n  if (offset.s) { result.setS(result.S + offset.s) }\n\n  if (offset.l) { result.setL(result.L + offset.l) }\n\n  if (offset.a) { result.setA(result.A + offset.a) }\n\n  return result.HSLA\n}\n\nexport const setHSLAColor = (color: ColorInput, newColor: { h?: number; s?: number; l?: number; a?: number }) => {\n  const result = new ColorTranslator(color)\n\n  if (newColor.h !== undefined) { result.setH(newColor.h) }\n\n  if (newColor.s !== undefined) { result.setS(newColor.s) }\n\n  if (newColor.l !== undefined) { result.setL(newColor.l) }\n\n  if (newColor.a !== undefined) { result.setA(newColor.a) }\n\n  return result.HSLA\n}\n\n/**\n * This method guesses second color for gradient based on first one.\n * Calculation method should differ for different colors, so we split color circle\n * in zones.\n *\n * @param color\n */\nexport const shiftGradientColor = (color: ColorInput): string => {\n  const newColor = ColorTranslator.toHSLA(color, false) as HSLObject\n\n  // Gray\n  if (newColor.s < 10) {\n    return shiftHSLAColor(newColor, { h: 2, s: 5, l: 10 })\n  }\n  // Unsaturated (too pale, gray-ish, monotone)\n  // For unsaturated color, hue change does nothing.\n  if (newColor.s < 30) {\n    return shiftHSLAColor(newColor, { s: -14, l: 11 })\n  }\n  // Red\n  if ((newColor.h >= 0 && newColor.h < 44) || (newColor.h >= 285)) {\n    return shiftHSLAColor(newColor, { h: 11, s: 27, l: 8 })\n  }\n  // Yellow\n  if (newColor.h >= 44 && newColor.h < 85) {\n    return shiftHSLAColor(newColor, { h: 3, l: 9 })\n  }\n  // Green\n  if (newColor.h >= 85 && newColor.h < 165) {\n    return shiftHSLAColor(newColor, { h: 16, l: 14 })\n  }\n  // Blue\n  if (newColor.h >= 165 && newColor.h < 285) {\n    return shiftHSLAColor(newColor, { h: -15, s: 3, l: 2 })\n  }\n\n  throw new Error('This method should handle all colors. But it didn\\'t for some reason.')\n}\n\nexport const getGradientBackground = (color: string) => {\n  const colorLeft = shiftGradientColor(color)\n  const colorRight = ColorTranslator.toHSLA(color)\n\n  return `linear-gradient(to right, ${colorLeft}, ${colorRight})`\n}\n\n/**\n * Check if color is valid hsl, hsla, rga, rgba or hex color\n * Taken from https://www.regextester.com/103656\n * Check options <or> isCSSVariable(prop) <or> CSS.supports('color', prop) deleted due to problems with SSR and opacity\n * Details are in the discussion: https://github.com/epicmaxco/vuestic-ui/pull/1589\n * @param strColor\n */\nexport const isColor = (strColor: string): boolean => {\n  // Need to use Regex instead of DOM methods because we support SSR\n  const cssColorRegex = /^#([\\da-f]{3}){1,2}$|^#([\\da-f]{4}){1,2}$|(rgb|hsl)a?\\((\\s*-?\\d+%?\\s*,){2}(\\s*-?\\d+%?\\s*,?\\s*\\)?)(,\\s*(0?\\.\\d+)?|1)?\\)/\n\n  return cssColorRegex.test(strColor.toLocaleLowerCase())\n}\n\nexport const isCSSVariable = (strColor: string): boolean => /var\\(--.+\\)/.test(strColor)\n","import { GlobalConfig, useGlobalConfigSafe } from '../services/global-config/global-config'\nimport {\n  getBoxShadowColor,\n  getHoverColor,\n  getFocusColor,\n  getGradientBackground,\n  isColor,\n  getTextColor,\n  shiftHSLAColor,\n  setHSLAColor,\n  isCSSVariable,\n} from '../services/color-config/color-functions'\n\nexport type CssColor = string\nexport type ColorConfig = { [colorName: string]: CssColor }\n\n/**\n * You can add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useColorProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning to make sure that component own props will be used instead in case of collision.\n */\nexport const useColorProps = {\n  color: {\n    type: String,\n    default: '',\n  },\n}\n\nexport const useColors = () => {\n  const globalConfig = useGlobalConfigSafe()\n\n  if (!globalConfig) {\n    throw new Error('useColors must be used in setup function or Vuestic GlobalConfigPlugin is not registered!')\n  }\n\n  const { setGlobalConfig, getGlobalConfig } = globalConfig\n\n  const setColors = (colors: ColorConfig): void => {\n    setGlobalConfig((config: GlobalConfig) => ({\n      ...config,\n      colors: { ...config.colors, ...colors },\n    }))\n  }\n\n  const getColors = (): ColorConfig => {\n    return getGlobalConfig().colors || {}\n  }\n\n  /**\n   * Returns color from config by name or return prop if color is a valid hex, hsl, hsla, rgb or rgba color.\n   * @param prop - should be color name or color in hex, hsl, hsla, rgb or rgba format.\n   * @param preferVariables - function should return (if possible) CSS variable instead of hex (hex is needed to set opacity).\n   * @param defaultColor - this color will be used if prop is invalid.\n   */\n  const getColor = (prop?: string, defaultColor?: string, preferVariables?: boolean): CssColor => {\n    if (!defaultColor) {\n      /**\n       * Most default color - fallback when nothing else is found.\n       */\n      defaultColor = getColors().primary\n    }\n\n    const colors = getColors()\n\n    if (!prop) {\n      prop = defaultColor\n    }\n\n    if (colors[prop]) {\n      return preferVariables ? `var(--va-${prop})` : colors[prop]\n    }\n\n    if (isColor(prop)) {\n      return prop\n    }\n\n    if (preferVariables && isCSSVariable(prop)) {\n      return prop\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`'${prop}' is not a proper color! Use HEX or default color themes\n      names (https://vuestic.dev/en/styles/colors#default-color-themes)`)\n    }\n\n    return defaultColor\n  }\n\n  const colorsToCSSVariable = (colors: { [colorName: string]: string | undefined }, prefix = 'va') => {\n    return Object\n      .keys(colors)\n      .filter((key) => colors[key] !== undefined)\n      .reduce((acc: Record<string, any>, colorName: string) => {\n        acc[`--${prefix}-${colorName}`] = getColor(colors[colorName], undefined, true)\n        return acc\n      }, {})\n  }\n\n  return {\n    setColors,\n    getColors,\n    getColor,\n    getBoxShadowColor,\n    getHoverColor,\n    getFocusColor,\n    getGradientBackground,\n    getTextColor,\n    shiftHSLAColor,\n    setHSLAColor,\n    colorsToCSSVariable,\n  }\n}\n"],"names":[],"mappings":"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"}