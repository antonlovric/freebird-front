{"version":3,"file":"index24.js","sources":["../../src/composables/useParsable.ts","../../src/components/va-date-picker/hooks/sync-prop.ts","../../../../node_modules/lodash/isNil.js","../../src/components/va-date-input/hooks/input-text-parser.ts","../../src/components/va-date-input/hooks/model-value-parser.ts","../../src/components/va-date-input/hooks/range-model-value-guard.ts","../../src/components/va-date-input/VaDateInput.vue","../../src/components/va-date-input/VaDateInput.vue?vue&type=template&id=139365e2&lang.js","../../src/components/va-date-input/index.ts"],"sourcesContent":["import { computed, Ref } from 'vue'\n\ntype Not<P, N> = P extends N ? never : P\n\nexport const useParsable = <Text extends string | number, Original, Value extends Not<Original, Text>>(\n  parsable: Ref<Original>,\n  parse: (t: Text) => Value,\n  format: (v: Value) => Text,\n) => {\n  const text = computed({\n    get () {\n      const value = parsable.value\n      if (typeof value === 'string') {\n        return value as any\n      }\n      return format(value as Value)\n    },\n    set (v: Text) {\n      if (typeof parsable.value === 'string') {\n        parsable.value = v as any\n      } else {\n        parsable.value = parse(v)\n      }\n    },\n  })\n\n  const value = computed<Value>({\n    get () {\n      if (typeof parsable.value === 'string') {\n        return parse(parsable.value as any)\n      }\n\n      return parsable.value as Value\n    },\n    set (v: Value) {\n      if (typeof parsable.value === 'string') {\n        parsable.value = format(v as any) as any\n      } else {\n        parsable.value = v\n      }\n    },\n  })\n\n  return {\n    text,\n    value,\n  }\n}\n","import { ref, computed, Ref, UnwrapRef } from 'vue'\n\nexport function useSyncProp<T, PropName extends string> (propRef: Ref<T> | undefined, propName: PropName, emit: (event: any, newValue: T) => any, defaultValue?: T) {\n  if (defaultValue === undefined) {\n    return {\n      syncProp: computed({\n        set (value: T) {\n          emit(`update:${propName}`, value)\n        },\n        get (): T {\n          return propRef!.value\n        },\n      }),\n    }\n  }\n\n  const statefulValue = ref<T>(defaultValue)\n\n  return {\n    syncProp: computed<NonNullable<T>>({\n      set (value: NonNullable<T>) {\n        statefulValue.value = value as UnwrapRef<NonNullable<T>>\n        emit(`update:${propName}`, value)\n      },\n      get (): NonNullable<T> {\n        return (propRef?.value === undefined ? (statefulValue.value) : propRef.value) as NonNullable<T>\n      },\n    }),\n  }\n}\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","import { DateInputRange, DateInputValue } from './../types'\nimport { Ref, ref } from 'vue'\nimport isDate from 'lodash/isDate.js'\n\nexport const defaultParseDateFunction = (text: string) => new Date(Date.parse(text))\n\nconst isValidDate = (d: Date) => isDate(d) && !isNaN(d.getTime())\n\nexport const useDateParser = (props: {\n  parse?: (input: string, isValidRef?: Ref<boolean>) => DateInputValue,\n  parseDate?: (input: string) => Date,\n  delimiter: string,\n  rangeDelimiter: string,\n}) => {\n  const isMultipleDates = (text: string) => text.includes(props.delimiter)\n  const isRange = (text: string) => text.includes(props.rangeDelimiter)\n\n  const isValid = ref(true)\n\n  const parseDate = (text: string) => {\n    const date = (props.parseDate || defaultParseDateFunction)(text)\n\n    isValid.value = isValidDate(date)\n\n    return date\n  }\n\n  const parseDateInputValue = (text: string) => {\n    isValid.value = true\n\n    if (props.parse) {\n      return props.parse(text, isValid)\n    }\n\n    if (isMultipleDates(text)) {\n      return text.split(props.delimiter).map(parseDate)\n    }\n\n    if (isRange(text)) {\n      const [start, end] = text.split(props.rangeDelimiter).map(parseDate)\n      return { start, end }\n    }\n\n    return parseDate(text)\n  }\n\n  return {\n    parseDateInputValue,\n    isValid,\n  }\n}\n","import isNil from 'lodash/isNil'\n\nimport { DatePickerModelValue } from '../../va-date-picker/types'\nimport { defaultParseDateFunction } from './input-text-parser'\nimport { DateInputRange, DateInputModelValue, DateInputDate } from '../types'\n\nexport const isRange = (date: DateInputModelValue): date is DateInputRange<DateInputDate> => {\n  return typeof date === 'object' && ('start' in date || 'end' in date)\n}\n\nexport const parseSingleDate = (date: DateInputDate) => typeof date === 'string'\n  ? defaultParseDateFunction(date)\n  : new Date(date)\n\nexport const parseModelValue = (date: DateInputModelValue): DatePickerModelValue => {\n  if (Array.isArray(date)) {\n    return date.map(parseSingleDate)\n  }\n\n  if (isRange(date)) {\n    return {\n      start: isNil(date.start) ? date.start : parseSingleDate(date.start),\n      end: isNil(date.end) ? date.end : parseSingleDate(date.end),\n    }\n  }\n\n  return parseSingleDate(date!)\n}\n","import { computed, Ref, ref, watch } from 'vue'\n\nimport { parseModelValue, isRange } from './model-value-parser'\nimport { DateInputModelValue } from '../types'\n\n/**\n * This guard is used to prevent updating modelValue if range end is not specified.\n * This guard provides reset method, that allow us to reset VaDateInput value if dropdown is closed.\n */\nexport const useRangeModelValueGuard = (\n  modelValue: Ref<DateInputModelValue>,\n  disabled: Ref<boolean>,\n  parseValue = parseModelValue,\n) => {\n  const bufferValue = ref<DateInputModelValue>(modelValue.value && parseValue(modelValue.value))\n\n  const valueComputed = computed({\n    get: () => bufferValue.value,\n    set: (value) => {\n      if (disabled.value) {\n        modelValue.value = value\n      }\n\n      if (!value) {\n        modelValue.value = value\n        return\n      }\n\n      if (isRange(value)) {\n        if (value.end !== null) {\n          modelValue.value = value\n        }\n      } else {\n        modelValue.value = value\n      }\n\n      bufferValue.value = value\n    },\n  })\n\n  watch(modelValue, (newValue) => {\n    bufferValue.value = newValue\n  })\n\n  const reset = () => {\n    if (bufferValue.value && isRange(bufferValue.value)) {\n      bufferValue.value = modelValue.value && parseValue(modelValue.value)\n    }\n  }\n\n  return {\n    valueComputed,\n    reset,\n  }\n}\n","<template>\n  <div class=\"va-date-input\">\n    <va-dropdown\n      v-model=\"isOpenSync\"\n      trigger=\"none\"\n      anchorSelector=\".va-input-wrapper__field\"\n      :offset=\"[2, 0]\"\n      :close-on-content-click=\"false\"\n      :stateful=\"false\"\n      :disabled=\"disabled\"\n    >\n      <template #anchor>\n        <slot name=\"input\" v-bind=\"{ valueText, inputProps, inputListeners }\">\n          <va-input\n            ref=\"input\"\n            class=\"va-date-input__input\"\n            v-bind=\"inputProps\"\n            v-on=\"inputListeners\"\n            :model-value=\"valueText\"\n            aria-label=\"selected date\"\n            @change=\"onInputTextChanged\"\n            @click=\"toggleDropdown()\"\n            @keydown.enter.stop=\"showAndFocus\"\n            @keydown.space.stop=\"showAndFocus\"\n          >\n            <template\n              v-for=\"name in filterSlots\"\n              :key=\"name\"\n              v-slot:[name]=\"slotScope\"\n            >\n              <slot :name=\"name\" v-bind=\"slotScope\" />\n            </template>\n\n            <template #prependInner=\"slotScope\">\n              <slot name=\"prependInner\" v-bind=\"slotScope\" />\n              <va-icon\n                v-if=\"$props.leftIcon\"\n                v-bind=\"iconProps\"\n              />\n            </template>\n\n            <template #icon>\n              <va-icon\n                v-if=\"canBeCleared\"\n                aria-hiden=\"false\"\n                role=\"button\"\n                aria-label=\"reset\"\n                tabindex=\"0\"\n                class=\"va-date-input__clear-icon\"\n                v-bind=\"clearIconProps\"\n                @click=\"reset()\"\n                @keydown.enter.stop=\"reset()\"\n                @keydown.space.stop=\"reset()\"\n              />\n              <va-icon\n                v-else-if=\"!$props.leftIcon\"\n                v-bind=\"iconProps\"\n                tabindex=\"0\"\n                @keydown.enter.stop=\"showDropdown\"\n                @keydown.space.stop=\"showDropdown\"\n              />\n            </template>\n          </va-input>\n        </slot>\n      </template>\n\n      <va-dropdown-content\n        @keydown.esc.stop.prevent=\"hideAndFocus()\"\n      >\n        <va-date-picker\n            ref=\"datePicker\"\n            v-bind=\"datePickerProps\"\n            v-model=\"valueWithoutText\"\n            @click:day=\"$emit('click:day', $event)\"\n            @click:month=\"$emit('click:month', $event)\"\n            @click:year=\"$emit('click:year', $event)\"\n            @hover:day=\"$emit('hover:day', $event)\"\n            @hover:month=\"$emit('hover:month', $event)\"\n            @hover:year=\"$emit('hover:year', $event)\"\n            @update:view=\"$emit('update:view', $event)\"\n        >\n          <template\n            v-for=\"(_, name) in $slots\"\n            :key=\"name\"\n            v-slot:[name]=\"bind\"\n          >\n            <slot :name=\"name\" v-bind=\"bind\" />\n          </template>\n        </va-date-picker>\n      </va-dropdown-content>\n    </va-dropdown>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch, ref, nextTick } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport {\n  useClearable, useClearableEmits,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useStateful, useStatefulEmits,\n  useParsable,\n} from '../../composables'\nimport { useSyncProp } from '../va-date-picker/hooks/sync-prop'\nimport { isRange, isSingleDate, isDates } from '../va-date-picker/utils/date-utils'\nimport { useRangeModelValueGuard } from './hooks/range-model-value-guard'\nimport { useDateParser } from './hooks/input-text-parser'\nimport { parseModelValue } from './hooks/model-value-parser'\n\nimport { DateInputModelValue, DateInputValue } from './types'\n\nimport VaDatePicker from '../va-date-picker/VaDatePicker.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaInput } from '../va-input'\nimport { VaIcon } from '../va-icon'\n\nconst VaInputProps = extractComponentProps(VaInput, [\n  'mask', 'returnRaw', 'autosize', 'minRows', 'maxRows', 'type', 'inputmode', 'counter', 'maxLength',\n])\nconst VaDatePickerProps = extractComponentProps(VaDatePicker)\n\nexport default defineComponent({\n  name: 'VaDateInput',\n\n  components: {\n    VaDropdown,\n    VaDropdownContent,\n    VaDatePicker,\n    VaInput,\n    VaIcon,\n  },\n\n  props: {\n    ...VaInputProps,\n    ...VaDatePickerProps,\n    ...useValidationProps as ValidationProps<DateInputModelValue>,\n\n    clearValue: { type: Date as PropType<DateInputModelValue>, default: undefined },\n    modelValue: { type: [Date, Array, Object, String, Number] as PropType<DateInputModelValue> },\n\n    resetOnClose: { type: Boolean, default: true },\n    isOpen: { type: Boolean, default: undefined },\n\n    format: { type: Function as PropType<(date: DateInputModelValue) => string> },\n    formatDate: { type: Function as PropType<(date: Date) => string>, default: (d: Date) => d.toLocaleDateString() },\n    parse: { type: Function as PropType<(input: string) => DateInputValue> },\n    parseDate: { type: Function as PropType<(input: string) => Date> },\n    parseValue: { type: Function as PropType<typeof parseModelValue> },\n\n    delimiter: { type: String, default: ', ' },\n    rangeDelimiter: { type: String, default: ' ~ ' },\n    manualInput: { type: Boolean, default: false },\n\n    color: { type: String, default: 'primary' },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'calendar_today' },\n  },\n\n  emits: [\n    ...extractComponentEmits(VaDatePicker),\n    ...useClearableEmits,\n    ...useValidationEmits,\n    ...useStatefulEmits,\n    'update:is-open',\n    'update:text',\n  ],\n\n  setup (props, { emit, slots }) {\n    const input = ref<typeof VaInput>()\n    const datePicker = ref<typeof VaDatePicker>()\n\n    const { isOpen, resetOnClose } = toRefs(props)\n    const { valueComputed: statefulValue } = useStateful<DateInputModelValue>(props, emit)\n    const { syncProp: isOpenSync } = useSyncProp(isOpen, 'is-open', emit, false)\n\n    const isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value)\n\n    const {\n      valueComputed,\n      reset: resetInvalidRange,\n    } = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled, props.parseValue)\n\n    watch(isOpenSync, (isOpened) => {\n      if (!isOpened && !isRangeModelValueGuardDisabled.value) { resetInvalidRange() }\n    })\n\n    const dateOrNothing = (date: Date | undefined | null) => date ? props.formatDate(date) : '...'\n\n    const { parseDateInputValue, isValid } = useDateParser(props)\n\n    watch(valueComputed, () => {\n      isValid.value = true\n    })\n\n    const modelValueToString = (value: DateInputModelValue): string => {\n      if (props.format) {\n        return props.format(valueComputed.value)\n      }\n\n      if (isDates(value)) {\n        return value.map((d) => props.formatDate(d)).join(props.delimiter)\n      }\n      if (isSingleDate(value)) {\n        return props.formatDate(value)\n      }\n      if (isRange(value)) {\n        return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end)\n      }\n\n      throw new Error('VaDatePicker: Invalid model value. Value should be Date, Date[] or { start: Date, end: Date | null }')\n    }\n\n    const {\n      text,\n      value: valueWithoutText,\n    } = useParsable(valueComputed, parseDateInputValue, modelValueToString)\n\n    const valueText = computed(() => {\n      if (!isValid.value) {\n        return ''\n      }\n\n      if (!valueComputed.value) {\n        if (!props.clearValue) { return '' }\n        return modelValueToString(props.clearValue)\n      }\n\n      return text.value\n    })\n\n    const onInputTextChanged = ({ target } : Event) => {\n      const parsedValue = parseDateInputValue((target as HTMLInputElement).value)\n\n      if (isValid.value) {\n        valueComputed.value = parsedValue\n      }\n    }\n\n    const reset = (): void => {\n      statefulValue.value = props.clearValue\n      emit('clear')\n    }\n\n    const focus = (): void => {\n      input.value?.focus()\n    }\n\n    const hideAndFocus = (): void => {\n      isOpenSync.value = false\n      focus()\n    }\n\n    const focusDatePicker = (): void => {\n      nextTick(() => datePicker.value?.focusCurrentPicker())\n    }\n\n    const focusInputOrPicker = (): void => {\n      isOpenSync.value ? focusDatePicker() : focus()\n    }\n\n    const showDropdown = () => {\n      isOpenSync.value = true\n      nextTick(focusInputOrPicker)\n    }\n\n    const toggleDropdown = () => {\n      isOpenSync.value = !isOpenSync.value\n      nextTick(focusInputOrPicker)\n    }\n\n    const showAndFocus = (event: Event): void => {\n      if (props.manualInput) { return }\n\n      isOpenSync.value = true\n      focusDatePicker()\n      event.preventDefault()\n    }\n\n    const blur = (): void => {\n      input.value?.blur()\n    }\n\n    const { computedError, computedErrorMessages, listeners } = useValidation(props, emit, reset, focus)\n\n    const hasError = computed(() => (!isValid.value && valueComputed.value !== props.clearValue) || computedError.value)\n\n    const filterSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const iconProps = computed(() => ({\n      name: props.icon,\n      color: props.color,\n      size: 'small',\n      class: 'va-date-input__icon',\n    }))\n\n    const computedInputProps = computed(() => ({\n      ...filterComponentProps(props, VaInputProps).value,\n      clearable: false,\n      rules: [],\n      error: hasError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    return {\n      datePicker,\n      valueText,\n      valueWithoutText,\n      valueComputed,\n      isOpenSync,\n      onInputTextChanged,\n\n      input,\n      inputProps: computedInputProps,\n      inputListeners: computedInputListeners,\n      datePickerProps: filterComponentProps(props, extractComponentProps(VaDatePicker)),\n\n      filterSlots,\n      canBeCleared,\n      clearIconProps,\n      iconProps,\n\n      hideAndFocus,\n      showAndFocus,\n      toggleDropdown,\n      showDropdown,\n      focusInputOrPicker,\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-date-input {\n  display: flex;\n  font-family: var(--va-font-family);\n\n  &__icon {\n    cursor: pointer;\n  }\n\n  &__clear-icon {\n    &:focus {\n      @include focus-outline;\n    }\n  }\n\n  &__input.va-input_readonly {\n    cursor: pointer;\n  }\n\n  --va-date-picker-cell-size: 28px;\n\n  .va-dropdown {\n    width: 100%;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-input\">\n    <va-dropdown\n      v-model=\"isOpenSync\"\n      trigger=\"none\"\n      anchorSelector=\".va-input-wrapper__field\"\n      :offset=\"[2, 0]\"\n      :close-on-content-click=\"false\"\n      :stateful=\"false\"\n      :disabled=\"disabled\"\n    >\n      <template #anchor>\n        <slot name=\"input\" v-bind=\"{ valueText, inputProps, inputListeners }\">\n          <va-input\n            ref=\"input\"\n            class=\"va-date-input__input\"\n            v-bind=\"inputProps\"\n            v-on=\"inputListeners\"\n            :model-value=\"valueText\"\n            aria-label=\"selected date\"\n            @change=\"onInputTextChanged\"\n            @click=\"toggleDropdown()\"\n            @keydown.enter.stop=\"showAndFocus\"\n            @keydown.space.stop=\"showAndFocus\"\n          >\n            <template\n              v-for=\"name in filterSlots\"\n              :key=\"name\"\n              v-slot:[name]=\"slotScope\"\n            >\n              <slot :name=\"name\" v-bind=\"slotScope\" />\n            </template>\n\n            <template #prependInner=\"slotScope\">\n              <slot name=\"prependInner\" v-bind=\"slotScope\" />\n              <va-icon\n                v-if=\"$props.leftIcon\"\n                v-bind=\"iconProps\"\n              />\n            </template>\n\n            <template #icon>\n              <va-icon\n                v-if=\"canBeCleared\"\n                aria-hiden=\"false\"\n                role=\"button\"\n                aria-label=\"reset\"\n                tabindex=\"0\"\n                class=\"va-date-input__clear-icon\"\n                v-bind=\"clearIconProps\"\n                @click=\"reset()\"\n                @keydown.enter.stop=\"reset()\"\n                @keydown.space.stop=\"reset()\"\n              />\n              <va-icon\n                v-else-if=\"!$props.leftIcon\"\n                v-bind=\"iconProps\"\n                tabindex=\"0\"\n                @keydown.enter.stop=\"showDropdown\"\n                @keydown.space.stop=\"showDropdown\"\n              />\n            </template>\n          </va-input>\n        </slot>\n      </template>\n\n      <va-dropdown-content\n        @keydown.esc.stop.prevent=\"hideAndFocus()\"\n      >\n        <va-date-picker\n            ref=\"datePicker\"\n            v-bind=\"datePickerProps\"\n            v-model=\"valueWithoutText\"\n            @click:day=\"$emit('click:day', $event)\"\n            @click:month=\"$emit('click:month', $event)\"\n            @click:year=\"$emit('click:year', $event)\"\n            @hover:day=\"$emit('hover:day', $event)\"\n            @hover:month=\"$emit('hover:month', $event)\"\n            @hover:year=\"$emit('hover:year', $event)\"\n            @update:view=\"$emit('update:view', $event)\"\n        >\n          <template\n            v-for=\"(_, name) in $slots\"\n            :key=\"name\"\n            v-slot:[name]=\"bind\"\n          >\n            <slot :name=\"name\" v-bind=\"bind\" />\n          </template>\n        </va-date-picker>\n      </va-dropdown-content>\n    </va-dropdown>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch, ref, nextTick } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport {\n  useClearable, useClearableEmits,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useStateful, useStatefulEmits,\n  useParsable,\n} from '../../composables'\nimport { useSyncProp } from '../va-date-picker/hooks/sync-prop'\nimport { isRange, isSingleDate, isDates } from '../va-date-picker/utils/date-utils'\nimport { useRangeModelValueGuard } from './hooks/range-model-value-guard'\nimport { useDateParser } from './hooks/input-text-parser'\nimport { parseModelValue } from './hooks/model-value-parser'\n\nimport { DateInputModelValue, DateInputValue } from './types'\n\nimport VaDatePicker from '../va-date-picker/VaDatePicker.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaInput } from '../va-input'\nimport { VaIcon } from '../va-icon'\n\nconst VaInputProps = extractComponentProps(VaInput, [\n  'mask', 'returnRaw', 'autosize', 'minRows', 'maxRows', 'type', 'inputmode', 'counter', 'maxLength',\n])\nconst VaDatePickerProps = extractComponentProps(VaDatePicker)\n\nexport default defineComponent({\n  name: 'VaDateInput',\n\n  components: {\n    VaDropdown,\n    VaDropdownContent,\n    VaDatePicker,\n    VaInput,\n    VaIcon,\n  },\n\n  props: {\n    ...VaInputProps,\n    ...VaDatePickerProps,\n    ...useValidationProps as ValidationProps<DateInputModelValue>,\n\n    clearValue: { type: Date as PropType<DateInputModelValue>, default: undefined },\n    modelValue: { type: [Date, Array, Object, String, Number] as PropType<DateInputModelValue> },\n\n    resetOnClose: { type: Boolean, default: true },\n    isOpen: { type: Boolean, default: undefined },\n\n    format: { type: Function as PropType<(date: DateInputModelValue) => string> },\n    formatDate: { type: Function as PropType<(date: Date) => string>, default: (d: Date) => d.toLocaleDateString() },\n    parse: { type: Function as PropType<(input: string) => DateInputValue> },\n    parseDate: { type: Function as PropType<(input: string) => Date> },\n    parseValue: { type: Function as PropType<typeof parseModelValue> },\n\n    delimiter: { type: String, default: ', ' },\n    rangeDelimiter: { type: String, default: ' ~ ' },\n    manualInput: { type: Boolean, default: false },\n\n    color: { type: String, default: 'primary' },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'calendar_today' },\n  },\n\n  emits: [\n    ...extractComponentEmits(VaDatePicker),\n    ...useClearableEmits,\n    ...useValidationEmits,\n    ...useStatefulEmits,\n    'update:is-open',\n    'update:text',\n  ],\n\n  setup (props, { emit, slots }) {\n    const input = ref<typeof VaInput>()\n    const datePicker = ref<typeof VaDatePicker>()\n\n    const { isOpen, resetOnClose } = toRefs(props)\n    const { valueComputed: statefulValue } = useStateful<DateInputModelValue>(props, emit)\n    const { syncProp: isOpenSync } = useSyncProp(isOpen, 'is-open', emit, false)\n\n    const isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value)\n\n    const {\n      valueComputed,\n      reset: resetInvalidRange,\n    } = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled, props.parseValue)\n\n    watch(isOpenSync, (isOpened) => {\n      if (!isOpened && !isRangeModelValueGuardDisabled.value) { resetInvalidRange() }\n    })\n\n    const dateOrNothing = (date: Date | undefined | null) => date ? props.formatDate(date) : '...'\n\n    const { parseDateInputValue, isValid } = useDateParser(props)\n\n    watch(valueComputed, () => {\n      isValid.value = true\n    })\n\n    const modelValueToString = (value: DateInputModelValue): string => {\n      if (props.format) {\n        return props.format(valueComputed.value)\n      }\n\n      if (isDates(value)) {\n        return value.map((d) => props.formatDate(d)).join(props.delimiter)\n      }\n      if (isSingleDate(value)) {\n        return props.formatDate(value)\n      }\n      if (isRange(value)) {\n        return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end)\n      }\n\n      throw new Error('VaDatePicker: Invalid model value. Value should be Date, Date[] or { start: Date, end: Date | null }')\n    }\n\n    const {\n      text,\n      value: valueWithoutText,\n    } = useParsable(valueComputed, parseDateInputValue, modelValueToString)\n\n    const valueText = computed(() => {\n      if (!isValid.value) {\n        return ''\n      }\n\n      if (!valueComputed.value) {\n        if (!props.clearValue) { return '' }\n        return modelValueToString(props.clearValue)\n      }\n\n      return text.value\n    })\n\n    const onInputTextChanged = ({ target } : Event) => {\n      const parsedValue = parseDateInputValue((target as HTMLInputElement).value)\n\n      if (isValid.value) {\n        valueComputed.value = parsedValue\n      }\n    }\n\n    const reset = (): void => {\n      statefulValue.value = props.clearValue\n      emit('clear')\n    }\n\n    const focus = (): void => {\n      input.value?.focus()\n    }\n\n    const hideAndFocus = (): void => {\n      isOpenSync.value = false\n      focus()\n    }\n\n    const focusDatePicker = (): void => {\n      nextTick(() => datePicker.value?.focusCurrentPicker())\n    }\n\n    const focusInputOrPicker = (): void => {\n      isOpenSync.value ? focusDatePicker() : focus()\n    }\n\n    const showDropdown = () => {\n      isOpenSync.value = true\n      nextTick(focusInputOrPicker)\n    }\n\n    const toggleDropdown = () => {\n      isOpenSync.value = !isOpenSync.value\n      nextTick(focusInputOrPicker)\n    }\n\n    const showAndFocus = (event: Event): void => {\n      if (props.manualInput) { return }\n\n      isOpenSync.value = true\n      focusDatePicker()\n      event.preventDefault()\n    }\n\n    const blur = (): void => {\n      input.value?.blur()\n    }\n\n    const { computedError, computedErrorMessages, listeners } = useValidation(props, emit, reset, focus)\n\n    const hasError = computed(() => (!isValid.value && valueComputed.value !== props.clearValue) || computedError.value)\n\n    const filterSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const iconProps = computed(() => ({\n      name: props.icon,\n      color: props.color,\n      size: 'small',\n      class: 'va-date-input__icon',\n    }))\n\n    const computedInputProps = computed(() => ({\n      ...filterComponentProps(props, VaInputProps).value,\n      clearable: false,\n      rules: [],\n      error: hasError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    return {\n      datePicker,\n      valueText,\n      valueWithoutText,\n      valueComputed,\n      isOpenSync,\n      onInputTextChanged,\n\n      input,\n      inputProps: computedInputProps,\n      inputListeners: computedInputListeners,\n      datePickerProps: filterComponentProps(props, extractComponentProps(VaDatePicker)),\n\n      filterSlots,\n      canBeCleared,\n      clearIconProps,\n      iconProps,\n\n      hideAndFocus,\n      showAndFocus,\n      toggleDropdown,\n      showDropdown,\n      focusInputOrPicker,\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-date-input {\n  display: flex;\n  font-family: var(--va-font-family);\n\n  &__icon {\n    cursor: pointer;\n  }\n\n  &__clear-icon {\n    &:focus {\n      @include focus-outline;\n    }\n  }\n\n  &__input.va-input_readonly {\n    cursor: pointer;\n  }\n\n  --va-date-picker-cell-size: 28px;\n\n  .va-dropdown {\n    width: 100%;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaDateInput from '../va-date-input/VaDateInput.vue'\n\nexport const VaDateInput = withConfigTransport(_VaDateInput)\n"],"names":["isDate","isNil","VaDatePicker","isRange","_openBlock","_createElementBlock","_createVNode","_renderSlot","_mergeProps","_toHandlers","_withCtx","_createBlock","_renderList","_normalizeProps","_guardReactiveProps","_VaDateInput"],"mappings":"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"}