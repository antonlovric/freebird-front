{"version":3,"file":"index38.js","sources":["../../src/components/va-option-list/VaOptionList.vue","../../src/components/va-option-list/VaOptionList.vue?vue&type=template&id=69ca68d9&lang.js","../../src/components/va-option-list/index.ts"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul class=\"va-option-list__list\">\n      <li\n        v-for=\"option in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot v-bind=\"{ option, selectedValue, isDisabled, getText, getValue }\">\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :option=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-switch\n            v-else\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, onMounted } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport {\n  useSelectableList, useSelectableListProps, SelectableOption,\n  useValidation, useValidationProps,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaRadio } from '../va-radio'\nimport { VaSwitch } from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...useStatefulProps,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean, default: false }),\n    readonly: ({ type: Boolean, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String, default: '' }),\n    color: ({ type: String, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit, props.defaultValue)\n\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const { itemRefs, setItemRef } = useArrayRefs()\n\n    const isRadio = computed(() => props.type === 'radio')\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: SelectableOption) => getTrackBy(option)\n\n    const isDisabled = (option: SelectableOption) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(itemRefs.value) && itemRefs.value.find(el => !(el as HTMLInputElement).disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    const computedProps = computed(() => pick(props, ['name', 'color', 'readonly', 'leftLabel']))\n\n    onMounted(() => {\n      if (__DEV__ && props.type !== 'radio' && !Array.isArray(props.modelValue)) {\n        console.warn(`Prop 'modelValue = ${props.modelValue}' has not a proper type!\\n For component property 'type = ${props.type}' it must be of type 'array'.`)\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n      setItemRef,\n      computedProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul class=\"va-option-list__list\">\n      <li\n        v-for=\"option in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot v-bind=\"{ option, selectedValue, isDisabled, getText, getValue }\">\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :option=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-switch\n            v-else\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, onMounted } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport {\n  useSelectableList, useSelectableListProps, SelectableOption,\n  useValidation, useValidationProps,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaRadio } from '../va-radio'\nimport { VaSwitch } from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...useStatefulProps,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean, default: false }),\n    readonly: ({ type: Boolean, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String, default: '' }),\n    color: ({ type: String, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit, props.defaultValue)\n\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const { itemRefs, setItemRef } = useArrayRefs()\n\n    const isRadio = computed(() => props.type === 'radio')\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: SelectableOption) => getTrackBy(option)\n\n    const isDisabled = (option: SelectableOption) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(itemRefs.value) && itemRefs.value.find(el => !(el as HTMLInputElement).disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    const computedProps = computed(() => pick(props, ['name', 'color', 'readonly', 'leftLabel']))\n\n    onMounted(() => {\n      if (__DEV__ && props.type !== 'radio' && !Array.isArray(props.modelValue)) {\n        console.warn(`Prop 'modelValue = ${props.modelValue}' has not a proper type!\\n For component property 'type = ${props.type}' it must be of type 'array'.`)\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n      setItemRef,\n      computedProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaOptionList from './VaOptionList.vue'\n\nexport const VaOptionList = withConfigTransport(_VaOptionList)\n"],"names":["VaMessageListWrapper","pick","_createBlock","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_renderList","_renderSlot","_normalizeProps","_guardReactiveProps","_mergeProps","_VaOptionList"],"mappings":"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"}