{"version":3,"file":"index39.js","sources":["../../src/components/va-pagination/setPaginationRange.ts","../../src/components/va-pagination/VaPagination.vue","../../src/components/va-pagination/VaPagination.vue?vue&type=template&id=51c93e08&lang.js","../../src/components/va-pagination/index.ts"],"sourcesContent":["export const setPaginationRange = (value = 1, visiblePages: number, pages: number, includeBoundary = false) => {\n  let start = 0\n\n  if (pages === 0) {\n    pages = 1\n  }\n\n  if (visiblePages > pages) {\n    visiblePages = pages\n  }\n  if (visiblePages === 0) {\n    start = 1\n    visiblePages = pages\n  } else {\n    const paginationMiddlePage = visiblePages / 2\n    if (value - paginationMiddlePage <= 0 || value > pages) {\n      start = 1\n    } else {\n      start = value + paginationMiddlePage > pages\n        ? pages - visiblePages + 1\n        : Math.ceil(value - paginationMiddlePage)\n    }\n  }\n\n  const range: Array<'...' | number> = []\n\n  for (let i = 0; i < visiblePages; i++) {\n    range.push(start + i)\n  }\n\n  if (includeBoundary) {\n    start !== 1 && range.splice(0, 2, 1, '...')\n    range[range.length - 1] !== pages && range.splice(-2, 2, '...', pages)\n  }\n\n  return range\n}\n","<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n    @keydown.left.stop=\"onUserInput(currentValue - 1)\"\n    @keydown.right.stop=\"onUserInput(currentValue + 1)\"\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go first page\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go prev page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        v-for=\"(n, i) in paginationRange\"\n        :key=\"i\"\n        class=\"va-pagination__numeric-button\"\n        outline\n        :aria-label=\"`go to ${n} page`\"\n        :aria-current=\"n === currentValue\"\n        :style=\"activeButtonStyle(n)\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{ 'va-button--ellipsis': n === '...'}\"\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      aria-label=\"enter the page number to go\"\n      v-model=\"inputValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      :style=\"inputStyleComputed\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go next page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go last page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, nextTick, shallowRef } from 'vue'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport { useColors, useTextColor, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { setPaginationRange } from './setPaginationRange'\n\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaButton } from '../va-button'\n\nexport default defineComponent({\n  name: 'VaPagination',\n  components: { VaButtonGroup, VaButton },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 1 },\n    visiblePages: { type: Number, default: 0 },\n    pages: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n    boundaryLinks: { type: Boolean, default: true },\n    boundaryNumbers: { type: Boolean, default: false },\n    directionLinks: { type: Boolean, default: true },\n    input: { type: Boolean, default: false },\n    hideOnSinglePage: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    total: { type: Number, default: null },\n    pageSize: { type: Number, default: null },\n    boundaryIconLeft: { type: String, default: 'first_page' },\n    boundaryIconRight: { type: String, default: 'last_page' },\n    directionIconLeft: { type: String, default: 'chevron_left' },\n    directionIconRight: { type: String, default: 'chevron_right' },\n  },\n\n  setup (props, { emit }) {\n    const htmlInput = shallowRef<HTMLInputElement>()\n\n    const inputValue = ref('')\n\n    const usedTotal = computed(() => !!((props.total || props.pageSize === 0) && props.pageSize))\n\n    const { valueComputed } = useStateful<number>(props, emit)\n\n    const { textColorComputed } = useTextColor()\n\n    const currentValue = computed({\n      get: () => usedTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: (value) => { valueComputed.value = value },\n    })\n\n    const paginationRange = computed(() => {\n      const { visiblePages, total, pageSize, boundaryNumbers, pages } = props\n\n      const value = currentValue.value || 1\n      const totalPages = usedTotal.value ? Math.ceil(total / pageSize) : pages\n\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers)\n    })\n\n    const lastPage = computed(() => usedTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : props.pages)\n\n    const IsLstPageNotVisible = computed(() => (!!props.visiblePages && lastPage.value > props.visiblePages))\n\n    const showBoundaryLinks = computed(() => {\n      const { boundaryLinks, boundaryNumbers, input } = props\n\n      return input || (IsLstPageNotVisible.value && boundaryLinks && !boundaryNumbers)\n    })\n\n    const showDirectionLinks = computed(() => props.input || (IsLstPageNotVisible.value && props.directionLinks))\n\n    const showPagination = computed(() => lastPage.value > 1 || (!props.hideOnSinglePage && lastPage.value <= 1))\n\n    const focusInput = () => {\n      inputValue.value = `${currentValue.value}`\n\n      nextTick(() => htmlInput.value?.setSelectionRange(0, htmlInput.value.value.length))\n    }\n\n    const onUserInput = (pageNum: number | '...') => {\n      if (pageNum === '...' || pageNum < 1 || pageNum > lastPage.value) { return }\n\n      currentValue.value = usedTotal.value ? (pageNum - 1) * props.pageSize + 1 : pageNum\n    }\n\n    const resetInput = () => {\n      inputValue.value = ''\n      htmlInput.value?.blur()\n    }\n\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput()\n      }\n\n      if (!inputValue.value.length) { return }\n\n      let pageNum = Number.parseInt(inputValue.value)\n\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1; break\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value; break\n        case isNaN(pageNum):\n          pageNum = currentValue.value; break\n        default: break\n      }\n\n      onUserInput(pageNum)\n      resetInput()\n    }\n\n    const { getColor } = useColors()\n\n    const activeButtonStyle = (buttonValue: number | '...') => {\n      if (buttonValue === currentValue.value) {\n        return {\n          backgroundColor: getColor(props.color),\n          color: textColorComputed.value,\n        }\n      }\n\n      return {\n        color: getColor(props.color),\n      }\n    }\n\n    const inputStyleComputed = computed(() => ({\n      cursor: 'default',\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n    }))\n\n    watch([usedTotal, () => props.pages], () => {\n      if (__DEV__ && usedTotal.value && props.pages) {\n        throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n      }\n    })\n\n    return {\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      activeButtonStyle,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  &__numeric-button {\n    &.va-button {\n      .va-button__content {\n        // Remove paddings from button content\n        padding: 0;\n        justify-content: center;\n      }\n\n      // Add paddings to button content in min-width\n      &--normal {\n        .va-button__content {\n          min-width: calc(var(--va-button-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--small {\n        .va-button__content {\n          min-width: calc(var(--va-button-sm-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--large {\n        .va-button__content {\n          min-width: calc(var(--va-button-lg-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n    @keydown.left.stop=\"onUserInput(currentValue - 1)\"\n    @keydown.right.stop=\"onUserInput(currentValue + 1)\"\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go first page\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go prev page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        v-for=\"(n, i) in paginationRange\"\n        :key=\"i\"\n        class=\"va-pagination__numeric-button\"\n        outline\n        :aria-label=\"`go to ${n} page`\"\n        :aria-current=\"n === currentValue\"\n        :style=\"activeButtonStyle(n)\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{ 'va-button--ellipsis': n === '...'}\"\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      aria-label=\"enter the page number to go\"\n      v-model=\"inputValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      :style=\"inputStyleComputed\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go next page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go last page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, nextTick, shallowRef } from 'vue'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport { useColors, useTextColor, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { setPaginationRange } from './setPaginationRange'\n\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaButton } from '../va-button'\n\nexport default defineComponent({\n  name: 'VaPagination',\n  components: { VaButtonGroup, VaButton },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 1 },\n    visiblePages: { type: Number, default: 0 },\n    pages: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n    boundaryLinks: { type: Boolean, default: true },\n    boundaryNumbers: { type: Boolean, default: false },\n    directionLinks: { type: Boolean, default: true },\n    input: { type: Boolean, default: false },\n    hideOnSinglePage: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    total: { type: Number, default: null },\n    pageSize: { type: Number, default: null },\n    boundaryIconLeft: { type: String, default: 'first_page' },\n    boundaryIconRight: { type: String, default: 'last_page' },\n    directionIconLeft: { type: String, default: 'chevron_left' },\n    directionIconRight: { type: String, default: 'chevron_right' },\n  },\n\n  setup (props, { emit }) {\n    const htmlInput = shallowRef<HTMLInputElement>()\n\n    const inputValue = ref('')\n\n    const usedTotal = computed(() => !!((props.total || props.pageSize === 0) && props.pageSize))\n\n    const { valueComputed } = useStateful<number>(props, emit)\n\n    const { textColorComputed } = useTextColor()\n\n    const currentValue = computed({\n      get: () => usedTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: (value) => { valueComputed.value = value },\n    })\n\n    const paginationRange = computed(() => {\n      const { visiblePages, total, pageSize, boundaryNumbers, pages } = props\n\n      const value = currentValue.value || 1\n      const totalPages = usedTotal.value ? Math.ceil(total / pageSize) : pages\n\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers)\n    })\n\n    const lastPage = computed(() => usedTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : props.pages)\n\n    const IsLstPageNotVisible = computed(() => (!!props.visiblePages && lastPage.value > props.visiblePages))\n\n    const showBoundaryLinks = computed(() => {\n      const { boundaryLinks, boundaryNumbers, input } = props\n\n      return input || (IsLstPageNotVisible.value && boundaryLinks && !boundaryNumbers)\n    })\n\n    const showDirectionLinks = computed(() => props.input || (IsLstPageNotVisible.value && props.directionLinks))\n\n    const showPagination = computed(() => lastPage.value > 1 || (!props.hideOnSinglePage && lastPage.value <= 1))\n\n    const focusInput = () => {\n      inputValue.value = `${currentValue.value}`\n\n      nextTick(() => htmlInput.value?.setSelectionRange(0, htmlInput.value.value.length))\n    }\n\n    const onUserInput = (pageNum: number | '...') => {\n      if (pageNum === '...' || pageNum < 1 || pageNum > lastPage.value) { return }\n\n      currentValue.value = usedTotal.value ? (pageNum - 1) * props.pageSize + 1 : pageNum\n    }\n\n    const resetInput = () => {\n      inputValue.value = ''\n      htmlInput.value?.blur()\n    }\n\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput()\n      }\n\n      if (!inputValue.value.length) { return }\n\n      let pageNum = Number.parseInt(inputValue.value)\n\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1; break\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value; break\n        case isNaN(pageNum):\n          pageNum = currentValue.value; break\n        default: break\n      }\n\n      onUserInput(pageNum)\n      resetInput()\n    }\n\n    const { getColor } = useColors()\n\n    const activeButtonStyle = (buttonValue: number | '...') => {\n      if (buttonValue === currentValue.value) {\n        return {\n          backgroundColor: getColor(props.color),\n          color: textColorComputed.value,\n        }\n      }\n\n      return {\n        color: getColor(props.color),\n      }\n    }\n\n    const inputStyleComputed = computed(() => ({\n      cursor: 'default',\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n    }))\n\n    watch([usedTotal, () => props.pages], () => {\n      if (__DEV__ && usedTotal.value && props.pages) {\n        throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n      }\n    })\n\n    return {\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      activeButtonStyle,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  &__numeric-button {\n    &.va-button {\n      .va-button__content {\n        // Remove paddings from button content\n        padding: 0;\n        justify-content: center;\n      }\n\n      // Add paddings to button content in min-width\n      &--normal {\n        .va-button__content {\n          min-width: calc(var(--va-button-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--small {\n        .va-button__content {\n          min-width: calc(var(--va-button-sm-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--large {\n        .va-button__content {\n          min-width: calc(var(--va-button-lg-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaPagination from './VaPagination.vue'\n\nexport const VaPagination = withConfigTransport(_VaPagination)\n"],"names":["_createBlock","_withKeys","_withModifiers","_renderSlot","_openBlock","_createElementBlock","_Fragment","_renderList","_normalizeClass","_normalizeStyle","_VaPagination"],"mappings":"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"}