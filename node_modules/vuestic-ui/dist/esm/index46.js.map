{"version":3,"file":"index46.js","sources":["../../src/composables/useMaxSelections.ts","../../src/utils/scroll-to-element.ts","../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue","../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue?vue&type=template&id=59030744&lang.js","../../src/components/va-select/VaSelectOptionList/index.ts","../../src/components/va-select/VaSelect.vue","../../src/components/va-select/VaSelect.vue?vue&type=template&id=ef3afb70&lang.js","../../src/components/va-select/index.ts"],"sourcesContent":["import { Ref } from 'vue'\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useMaxSelectionsProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useMaxSelectionsProps = {\n  maxSelections: {\n    type: [Number, String],\n    default: undefined,\n  },\n}\n\nexport function useMaxSelections (\n  selections: Ref<any[]>,\n  maxSelections: Ref<number | string | undefined>,\n  emit: (event: 'update:modelValue', ...args: any[]) => void,\n) {\n  const exceedsMaxSelections = (): boolean => {\n    if (maxSelections.value === undefined || isNaN(+maxSelections.value)) { return false }\n    return selections.value.length >= maxSelections.value\n  }\n\n  const addOption = (optionToAdd: any): void => {\n    const newSelectedOptions = [...selections.value, optionToAdd]\n    emit('update:modelValue', newSelectedOptions)\n  }\n\n  return {\n    exceedsMaxSelections,\n    addOption,\n  }\n}\n","const getTopCoordinate = (element: HTMLElement) => element.offsetTop\nconst getBottomCoordinate = (element: HTMLElement) => element.offsetTop + element.offsetHeight\nconst getCenterCoordinate = (element: HTMLElement) => element.offsetTop + element.offsetHeight / 2\n\nconst getScrollTop = (element: HTMLElement, scrollTarget: HTMLElement, verticalAlignment?: 'start' | 'end' | 'center' | 'any') => {\n  const viewHeight = scrollTarget.offsetHeight\n  const currentPosition = scrollTarget.scrollTop\n  const top = getTopCoordinate(element) - scrollTarget.offsetTop\n  const center = getCenterCoordinate(element) - scrollTarget.offsetTop\n  const bottom = getBottomCoordinate(element) - scrollTarget.offsetTop\n\n  if (verticalAlignment === 'start') {\n    return top\n  }\n\n  if (verticalAlignment === 'end') {\n    return bottom - viewHeight\n  }\n\n  if (verticalAlignment === 'center') {\n    return center - viewHeight / 2\n  }\n\n  if (verticalAlignment === 'any') {\n    if (top - currentPosition < 0) {\n      return top\n    }\n\n    if (bottom - currentPosition > viewHeight) {\n      return bottom - viewHeight\n    }\n  }\n}\n\n/**\n * @param options.scrollTarget - element that will be scrolled\n */\nexport const scrollToElement = (element: HTMLElement, options: {\n  scrollTarget?: HTMLElement,\n  verticalAlignment?: 'start' | 'end' | 'center' | 'any',\n  smooth?: boolean,\n} = {\n  scrollTarget: element.parentElement!,\n  verticalAlignment: 'any',\n  smooth: false,\n}) => {\n  const scrollTarget = options.scrollTarget || element.parentElement!\n\n  const top = getScrollTop(element, scrollTarget, options.verticalAlignment)\n\n  if (top === undefined) { return }\n\n  scrollTarget.scroll({\n    top: top,\n    behavior: options.smooth ? 'smooth' : 'auto',\n  })\n}\n","<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-select-option-list\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n    @scroll.passive=\"onScroll\"\n  >\n    <template\n      v-for=\"(options, groupName) in optionGroups\"\n      :key=\"groupName\"\n    >\n      <span\n        v-if=\"groupName !== '_noGroup'\"\n        class=\"va-select-option-list__group-name\"\n      >\n        {{ groupName }}\n      </span>\n      <div\n        v-for=\"option in options\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef(option)\"\n        role=\"option\"\n        :aria-selected=\"!!$props.getSelectedState(option)\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"getOptionIcon(option)\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"getOptionIcon(option)\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"getColor($props.color)\"\n        />\n      </div>\n    </template>\n    <div\n      v-if=\"!filteredOptions.length\"\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, watch, ref, computed, ComponentPublicInstance, shallowRef } from 'vue'\n\nimport { scrollToElement } from '../../../utils/scroll-to-element'\nimport { useColors, useColorProps, SelectableOption } from '../../../composables'\n\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n    'scroll-bottom',\n  ],\n  props: {\n    ...useColorProps,\n    options: { type: Array as PropType<SelectableOption[]>, default: () => [] },\n    noOptionsText: { type: String, default: 'Items not found' },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number>, required: true },\n    getGroupBy: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    multiple: { type: Boolean, default: false },\n    search: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    hoveredOption: {\n      type: [String, Number, Object] as PropType<SelectableOption | null>,\n      default: null,\n    },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const rootElement = shallowRef<HTMLElement>()\n    const itemRefs = ref<Record<number, HTMLElement>>({})\n\n    const onScroll = (event: UIEvent) => {\n      const target = event.target as Element\n      if (!target) { return }\n\n      if (target.scrollTop + target.clientHeight === target.scrollHeight) {\n        emit('scroll-bottom')\n      }\n    }\n\n    const beforeUpdate = () => { itemRefs.value = {} }\n\n    const setItemRef = (option: SelectableOption) => (el: Element | null | ComponentPublicInstance) => {\n      if (el) {\n        itemRefs.value[props.getTrackBy(option)] = el as HTMLElement\n      }\n    }\n\n    const hoveredOptionComputed = computed({\n      get: () => props.hoveredOption || null,\n      set: (value: SelectableOption | null) => emit('update:hoveredOption', value),\n    })\n\n    const filteredOptions = computed(() => {\n      if (!props.search) {\n        return props.options\n      }\n\n      return props.options.filter((option: SelectableOption) => {\n        const optionText = props.getText(option).toString().toUpperCase()\n        const search = props.search.toUpperCase()\n        return optionText.includes(search)\n      })\n    })\n\n    const optionGroups = computed(() => filteredOptions.value.reduce((groups: Record<string, SelectableOption[]>, option) => {\n      if (typeof option !== 'object' || !option.group) {\n        groups._noGroup.push(option)\n      } else {\n        const groupBy = props.getGroupBy(option)\n\n        if (!groups[groupBy]) { groups[groupBy] = [] }\n\n        groups[groupBy].push(option)\n      }\n\n      return groups\n    }, { _noGroup: [] }))\n\n    const selectOption = (option: SelectableOption) => emit('select-option', option)\n\n    const getOptionIcon = (option: SelectableOption) => typeof option === 'object' ? (option.icon as string) : undefined\n\n    const getOptionClass = (option: SelectableOption) => ({\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': props.getSelectedState(option),\n    })\n\n    const getOptionStyle = (option: SelectableOption) => ({\n      color: props.getSelectedState(option) ? getColor(props.color) : 'inherit',\n      backgroundColor: isHovered(option) ? getHoverColor(getColor(props.color)) : 'transparent',\n    })\n\n    const isHovered = (option: SelectableOption) => {\n      if (!hoveredOptionComputed.value) { return false }\n      if (typeof option === 'string') { return option === hoveredOptionComputed.value }\n      if (!props.getTrackBy) { return false }\n\n      return props.getTrackBy(hoveredOptionComputed.value) === props.getTrackBy(option)\n    }\n\n    const updateHoveredOption = (option?: SelectableOption) => { hoveredOptionComputed.value = option || null }\n\n    const hoveredOptionIndex = computed(() => filteredOptions.value.findIndex((option) => {\n      return !!hoveredOptionComputed.value && props.getTrackBy(option) === props.getTrackBy(hoveredOptionComputed.value)\n    }))\n\n    const hoverPreviousOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover last option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value.at(-1))\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value - 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value - 1]\n        } else {\n          emit('no-previous-option-to-hover')\n        }\n      }\n    }\n\n    const hoverNextOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover first option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value[0])\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value + 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value + 1]\n        }\n      }\n    }\n\n    const hoverFirstOption = () => {\n      if (filteredOptions.value.length > 0) {\n        updateHoveredOption(filteredOptions.value[0])\n      }\n    }\n\n    const focus = () => {\n      // Prevent scroll since element in dropdown and it cause scrolling to page end.\n      rootElement.value?.focus({ preventScroll: true })\n    }\n\n    const scrollToOption = (option: SelectableOption) => {\n      if (!option) { return }\n\n      const element = itemRefs.value[props.getTrackBy(option)]\n\n      if (element) {\n        scrollToElement(element)\n      }\n    }\n\n    watch(() => props.hoveredOption, (newOption: SelectableOption | null) => newOption && scrollToOption(newOption))\n\n    const publicMethods = {\n      hoverPreviousOption,\n      hoverNextOption,\n      hoverFirstOption,\n      focus,\n      scrollToOption,\n    }\n\n    return {\n      rootElement,\n\n      getColor,\n      filteredOptions,\n      optionGroups,\n      onScroll,\n      beforeUpdate,\n      setItemRef,\n      selectOption,\n      getOptionIcon,\n      getOptionClass,\n      getOptionStyle,\n      updateHoveredOption,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: var(--va-select-option-list-max-height);\n  font-family: var(--va-font-family);\n  overflow: auto;\n\n  @include va-scroll();\n\n  &__group-name {\n    padding: var(--va-select-option-list-group-name-padding);\n    font-size: var(--va-select-option-list-group-name-font-size);\n    color: var(--va-select-option-list-group-name-color);\n    font-weight: var(--va-select-option-list-group-name-font-weight);\n    text-transform: uppercase;\n  }\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n","<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-select-option-list\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n    @scroll.passive=\"onScroll\"\n  >\n    <template\n      v-for=\"(options, groupName) in optionGroups\"\n      :key=\"groupName\"\n    >\n      <span\n        v-if=\"groupName !== '_noGroup'\"\n        class=\"va-select-option-list__group-name\"\n      >\n        {{ groupName }}\n      </span>\n      <div\n        v-for=\"option in options\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef(option)\"\n        role=\"option\"\n        :aria-selected=\"!!$props.getSelectedState(option)\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"getOptionIcon(option)\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"getOptionIcon(option)\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"getColor($props.color)\"\n        />\n      </div>\n    </template>\n    <div\n      v-if=\"!filteredOptions.length\"\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, watch, ref, computed, ComponentPublicInstance, shallowRef } from 'vue'\n\nimport { scrollToElement } from '../../../utils/scroll-to-element'\nimport { useColors, useColorProps, SelectableOption } from '../../../composables'\n\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n    'scroll-bottom',\n  ],\n  props: {\n    ...useColorProps,\n    options: { type: Array as PropType<SelectableOption[]>, default: () => [] },\n    noOptionsText: { type: String, default: 'Items not found' },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number>, required: true },\n    getGroupBy: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    multiple: { type: Boolean, default: false },\n    search: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    hoveredOption: {\n      type: [String, Number, Object] as PropType<SelectableOption | null>,\n      default: null,\n    },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const rootElement = shallowRef<HTMLElement>()\n    const itemRefs = ref<Record<number, HTMLElement>>({})\n\n    const onScroll = (event: UIEvent) => {\n      const target = event.target as Element\n      if (!target) { return }\n\n      if (target.scrollTop + target.clientHeight === target.scrollHeight) {\n        emit('scroll-bottom')\n      }\n    }\n\n    const beforeUpdate = () => { itemRefs.value = {} }\n\n    const setItemRef = (option: SelectableOption) => (el: Element | null | ComponentPublicInstance) => {\n      if (el) {\n        itemRefs.value[props.getTrackBy(option)] = el as HTMLElement\n      }\n    }\n\n    const hoveredOptionComputed = computed({\n      get: () => props.hoveredOption || null,\n      set: (value: SelectableOption | null) => emit('update:hoveredOption', value),\n    })\n\n    const filteredOptions = computed(() => {\n      if (!props.search) {\n        return props.options\n      }\n\n      return props.options.filter((option: SelectableOption) => {\n        const optionText = props.getText(option).toString().toUpperCase()\n        const search = props.search.toUpperCase()\n        return optionText.includes(search)\n      })\n    })\n\n    const optionGroups = computed(() => filteredOptions.value.reduce((groups: Record<string, SelectableOption[]>, option) => {\n      if (typeof option !== 'object' || !option.group) {\n        groups._noGroup.push(option)\n      } else {\n        const groupBy = props.getGroupBy(option)\n\n        if (!groups[groupBy]) { groups[groupBy] = [] }\n\n        groups[groupBy].push(option)\n      }\n\n      return groups\n    }, { _noGroup: [] }))\n\n    const selectOption = (option: SelectableOption) => emit('select-option', option)\n\n    const getOptionIcon = (option: SelectableOption) => typeof option === 'object' ? (option.icon as string) : undefined\n\n    const getOptionClass = (option: SelectableOption) => ({\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': props.getSelectedState(option),\n    })\n\n    const getOptionStyle = (option: SelectableOption) => ({\n      color: props.getSelectedState(option) ? getColor(props.color) : 'inherit',\n      backgroundColor: isHovered(option) ? getHoverColor(getColor(props.color)) : 'transparent',\n    })\n\n    const isHovered = (option: SelectableOption) => {\n      if (!hoveredOptionComputed.value) { return false }\n      if (typeof option === 'string') { return option === hoveredOptionComputed.value }\n      if (!props.getTrackBy) { return false }\n\n      return props.getTrackBy(hoveredOptionComputed.value) === props.getTrackBy(option)\n    }\n\n    const updateHoveredOption = (option?: SelectableOption) => { hoveredOptionComputed.value = option || null }\n\n    const hoveredOptionIndex = computed(() => filteredOptions.value.findIndex((option) => {\n      return !!hoveredOptionComputed.value && props.getTrackBy(option) === props.getTrackBy(hoveredOptionComputed.value)\n    }))\n\n    const hoverPreviousOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover last option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value.at(-1))\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value - 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value - 1]\n        } else {\n          emit('no-previous-option-to-hover')\n        }\n      }\n    }\n\n    const hoverNextOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover first option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value[0])\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value + 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value + 1]\n        }\n      }\n    }\n\n    const hoverFirstOption = () => {\n      if (filteredOptions.value.length > 0) {\n        updateHoveredOption(filteredOptions.value[0])\n      }\n    }\n\n    const focus = () => {\n      // Prevent scroll since element in dropdown and it cause scrolling to page end.\n      rootElement.value?.focus({ preventScroll: true })\n    }\n\n    const scrollToOption = (option: SelectableOption) => {\n      if (!option) { return }\n\n      const element = itemRefs.value[props.getTrackBy(option)]\n\n      if (element) {\n        scrollToElement(element)\n      }\n    }\n\n    watch(() => props.hoveredOption, (newOption: SelectableOption | null) => newOption && scrollToOption(newOption))\n\n    const publicMethods = {\n      hoverPreviousOption,\n      hoverNextOption,\n      hoverFirstOption,\n      focus,\n      scrollToOption,\n    }\n\n    return {\n      rootElement,\n\n      getColor,\n      filteredOptions,\n      optionGroups,\n      onScroll,\n      beforeUpdate,\n      setItemRef,\n      selectOption,\n      getOptionIcon,\n      getOptionClass,\n      getOptionStyle,\n      updateHoveredOption,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: var(--va-select-option-list-max-height);\n  font-family: var(--va-font-family);\n  overflow: auto;\n\n  @include va-scroll();\n\n  &__group-name {\n    padding: var(--va-select-option-list-group-name-padding);\n    font-size: var(--va-select-option-list-group-name-font-size);\n    color: var(--va-select-option-list-group-name-color);\n    font-weight: var(--va-select-option-list-group-name-font-weight);\n    text-transform: uppercase;\n  }\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport _VaSelectOptionList from './VaSelectOptionList.vue'\n\nexport const VaSelectOptionList = withConfigTransport(_VaSelectOptionList)\n","<template>\n  <va-dropdown\n    ref=\"dropdown\"\n    class=\"va-select__dropdown va-select-dropdown\"\n    trigger=\"none\"\n    anchorSelector=\".va-input-wrapper__field\"\n    :placement=\"$props.placement\"\n    :disabled=\"$props.disabled\"\n    :max-height=\"$props.maxHeight\"\n    :fixed=\"$props.fixed\"\n    :close-on-content-click=\"closeOnContentClick\"\n    :stateful=\"false\"\n    :offset=\"[1, 0]\"\n    keep-anchor-width\n    v-model=\"showDropdownContentComputed\"\n    @keydown.up.stop.prevent=\"showDropdown\"\n    @keydown.down.stop.prevent=\"showDropdown\"\n    @keydown.space.stop.prevent=\"showDropdown\"\n    @keydown.enter.stop.prevent=\"showDropdown\"\n    @click.prevent=\"onSelectClick\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        ref=\"input\"\n        class=\"va-select\"\n        aria-label=\"selected option\"\n        :model-value=\"valueComputedString\"\n        :success=\"$props.success\"\n        :error=\"computedError\"\n        :color=\"$props.color\"\n        :label=\"$props.label\"\n        :loading=\"$props.loading\"\n        :disabled=\"$props.disabled\"\n        :outline=\"$props.outline\"\n        :bordered=\"$props.bordered\"\n        :required-mark=\"$props.requiredMark\"\n        :messages=\"$props.messages\"\n        :error-messages=\"computedErrorMessages\"\n        :focused=\"isFocused\"\n        :tabindex=\"tabIndexComputed\"\n        @focus=\"onInputFocus\"\n        @blur=\"onInputBlur\"\n      >\n        <template\n          v-if=\"$slots.prepend\"\n          #prepend\n        >\n          <slot name=\"prepend\" />\n        </template>\n\n        <template\n          v-if=\"$slots.append\"\n          #append\n        >\n          <slot name=\"append\" />\n        </template>\n\n        <template\n          v-if=\"$slots.prependInner\"\n          #prependInner\n        >\n          <slot name=\"prependInner\" />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"showClearIcon\"\n            role=\"button\"\n            aria-hidden=\"false\"\n            aria-label=\"reset\"\n            tabindex=\"0\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n        </template>\n\n        <template #appendInner>\n          <slot\n            v-if=\"$slots.appendInner\"\n            name=\"appendInner\"\n          />\n          <va-icon\n            :color=\"toggleIconColor\"\n            :name=\"toggleIcon\"\n          />\n        </template>\n\n        <template\n          #default\n        >\n          <span\n            v-if=\"isPlaceholder\"\n            class=\"va-select__placeholder\"\n          >\n            {{ $props.placeholder }}\n          </span>\n          <slot\n            v-else\n            name=\"content\"\n            v-bind=\"{\n              valueString: valueComputedString,\n              value: valueComputed,\n              tabindex: tabIndexComputed,\n            }\"\n          >\n            {{ valueComputedString }}\n          </slot>\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <!-- Stop propagation for enter keyup event, to prevent VaDropdown closing -->\n    <va-dropdown-content\n      class=\"va-select-dropdown__content\"\n      :style=\"{ width: $props.width }\"\n      @keyup.enter.stop=\"() => undefined\"\n      @keydown.tab.stop.prevent=\"() => undefined\"\n      @keydown.esc.prevent=\"hideAndFocus\"\n    >\n      <va-input\n        v-if=\"showSearchInput\"\n        ref=\"searchBar\"\n        class=\"va-select__input\"\n        placeholder=\"Search\"\n        aria-label=\"options filter\"\n        :tabindex=\"tabIndexComputed\"\n        :bordered=\"true\"\n        v-model=\"searchInput\"\n        @keydown.up.stop.prevent=\"hoverPreviousOption\"\n        @keydown.left.stop.prevent=\"hoverPreviousOption\"\n        @keydown.down.stop.prevent=\"hoverNextOption\"\n        @keydown.right.stop.prevent=\"hoverNextOption\"\n        @keydown.enter.prevent=\"selectOrAddOption\"\n        @focus=\"hoveredOption = null\"\n      />\n      <div class=\"va-select-dropdown__options-wrapper\">\n        <va-select-option-list\n          ref=\"optionList\"\n          v-model:hoveredOption=\"hoveredOption\"\n          :style=\"{ maxHeight: $props.maxHeight }\"\n          :options=\"filteredOptions\"\n          :selected-value=\"valueComputed\"\n          :get-selected-state=\"checkIsOptionSelected\"\n          :get-text=\"getText\"\n          :get-track-by=\"getTrackBy\"\n          :get-group-by=\"getGroupBy\"\n          :search=\"searchInput\"\n          :no-options-text=\"$props.noOptionsText\"\n          :color=\"$props.color\"\n          :tabindex=\"tabIndexComputed\"\n          @select-option=\"selectOption\"\n          @no-previous-option-to-hover=\"focusSearchBar\"\n          @keydown.enter.stop.prevent=\"selectHoveredOption\"\n          @keydown.space.stop.prevent=\"selectHoveredOption\"\n          @keydown.tab.stop.prevent=\"searchBar && searchBar.focus()\"\n          @keydown=\"onHintedSearch\"\n          @scroll-bottom=\"onScrollBottom\"\n        />\n      </div>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, watch, nextTick, Ref, shallowRef } from 'vue'\n\nimport { warn } from '../../services/utils'\nimport {\n  useSelectableList, useSelectableListProps,\n  useValidation, useValidationProps, useValidationEmits, ValidationProps,\n  useFormProps,\n  useLoadingProps,\n  useColors,\n  useMaxSelections, useMaxSelectionsProps,\n  useClearableProps, useClearable, useClearableEmits,\n  useFocusDeep,\n} from '../../composables'\n\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaIcon } from '../va-icon'\nimport { VaInput, VaInputWrapper } from '../va-input'\nimport { VaSelectOptionList } from './VaSelectOptionList'\n\nimport { SelectDropdownIcon, SelectOption, Placement } from './types'\n\nexport default defineComponent({\n  name: 'VaSelect',\n\n  components: {\n    VaSelectOptionList,\n    VaIcon,\n    VaDropdown,\n    VaDropdownContent,\n    VaInput,\n    VaInputWrapper,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update-search',\n    'create-new',\n    'scroll-bottom',\n    ...useValidationEmits,\n    ...useClearableEmits,\n  ],\n\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps as ValidationProps<SelectOption>,\n    ...useLoadingProps,\n    ...useMaxSelectionsProps,\n    ...useClearableProps,\n    ...useFormProps,\n\n    modelValue: {\n      type: [String, Number, Array, Object] as PropType<SelectOption | SelectOption[]>,\n      default: '',\n    },\n\n    // Dropdown placement\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => ['top', 'bottom'].includes(placement),\n    },\n\n    allowCreate: {\n      type: [Boolean, String] as PropType<boolean | 'unique'>,\n      default: false,\n      validator: (mode: string | boolean) => [true, false, 'unique'].includes(mode),\n    },\n\n    color: { type: String, default: 'primary' },\n    multiple: { type: Boolean, default: false },\n    searchable: { type: Boolean, default: false },\n    separator: { type: String, default: ', ' },\n    width: { type: String, default: '100%' },\n    maxHeight: { type: String, default: '256px' },\n    noOptionsText: { type: String, default: 'Items not found' },\n    fixed: { type: Boolean, default: true },\n    hideSelected: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    dropdownIcon: {\n      type: [String, Object] as PropType<string | SelectDropdownIcon>,\n      default: (): SelectDropdownIcon => ({\n        open: 'expand_more',\n        close: 'expand_less',\n      }),\n      validator: (value: string | SelectDropdownIcon) => {\n        if (typeof value === 'string') { return true }\n        const isOpenIconString = typeof value.open === 'string'\n        const isCloseIconString = typeof value.close === 'string'\n        return isOpenIconString && isCloseIconString\n      },\n    },\n\n    // Input style\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    label: { type: String, default: '' },\n    placeholder: { type: String, default: '' },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const optionList = shallowRef<typeof VaSelectOptionList>()\n    const input = shallowRef<typeof VaInput>()\n    const searchBar = shallowRef<typeof VaInput>()\n\n    const isInputFocused = useFocusDeep()\n    const isFocused = computed(() => isInputFocused.value || showDropdownContent.value)\n\n    const { getHoverColor, getColor } = useColors()\n    const { getOptionByValue, getValue, getText, getTrackBy, getGroupBy } = useSelectableList(props)\n\n    const {\n      validate,\n      computedError,\n      computedErrorMessages,\n    } = useValidation(props, emit, () => reset(), () => focus())\n\n    const colorComputed = computed(() => getColor(props.color))\n    const toggleIconColor = computed(() => props.readonly ? getHoverColor(colorComputed.value) : colorComputed.value)\n\n    const onScrollBottom = () => {\n      emit('scroll-bottom')\n    }\n\n    const searchInput = ref('')\n    const showSearchInput = computed(() => props.searchable || props.allowCreate)\n\n    watch(searchInput, (value) => {\n      emit('update-search', value)\n      hoveredOption.value = null\n    })\n\n    // Select value\n\n    const valueComputed = computed<SelectOption | SelectOption[]>({\n      get () {\n        const value = getOptionByValue(props.modelValue)\n\n        if (props.multiple) {\n          if (!value) {\n            return []\n          }\n\n          if (!Array.isArray(value)) {\n            return [value]\n          }\n\n          return value\n        }\n\n        if (Array.isArray(value)) {\n          warn('Model value should be a string or a number for a single Select.')\n\n          if (value.length) {\n            return value[value.length - 1]\n          }\n        }\n\n        return value\n      },\n\n      set (value: SelectOption | SelectOption[]) {\n        if (Array.isArray(value)) {\n          emit('update:modelValue', value.map(getValue))\n        } else {\n          emit('update:modelValue', getValue(value))\n        }\n      },\n    })\n\n    const valueComputedString = computed<string>(() => {\n      if (!valueComputed.value) { return props.clearValue }\n      if (typeof valueComputed.value === 'string' || typeof valueComputed.value === 'number') { return valueComputed.value }\n      if (Array.isArray(valueComputed.value)) {\n        return valueComputed.value.map((value) => getText(value)).join(props.separator) || props.clearValue\n      }\n\n      return getText(valueComputed.value)\n    })\n\n    const isPlaceholder = computed(() => props.placeholder && !valueComputedString.value)\n\n    // Icons\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const showClearIcon = computed(() => {\n      return props.multiple && Array.isArray(valueComputed.value) ? !!valueComputed.value.length : canBeCleared.value\n    })\n\n    const toggleIcon = computed(() => {\n      if (!props.dropdownIcon) { return '' }\n\n      if (typeof props.dropdownIcon === 'string') {\n        return props.dropdownIcon\n      }\n\n      return showDropdownContent.value ? props.dropdownIcon.close : props.dropdownIcon.open\n    })\n\n    // Options\n\n    const filteredOptions = computed(() => {\n      if (!props.options) { return [] }\n\n      if (props.hideSelected) {\n        return props.options.filter((option) => !checkIsOptionSelected(option))\n      }\n\n      return props.options\n    })\n\n    const checkIsOptionSelected = (option: SelectOption) => {\n      if (!valueComputed.value) { return false }\n\n      if (Array.isArray(valueComputed.value)) {\n        return !!valueComputed.value.find((valueItem) => compareOptions(valueItem, option))\n      }\n\n      return compareOptions(valueComputed.value, option)\n    }\n\n    const compareOptions = (option1: SelectOption, option2: SelectOption) => {\n      const one = getValue(option1)\n      const two = getValue(option2)\n\n      // identity check works nice for strings and exact matches.\n      if (one === two) {\n        return true\n      }\n      if (typeof one === 'string' && typeof two === 'string') {\n        return one === two\n      }\n      if (one === null || two === null) {\n        return false\n      }\n      if (typeof one === 'object' && typeof two === 'object') {\n        return getTrackBy(one) === getTrackBy(two)\n      }\n\n      return false\n    }\n\n    const isValueComputedArray = (v: Ref<SelectOption | SelectOption[]>): v is Ref<SelectOption[]> => Array.isArray(v.value)\n\n    const selectOption = (option: SelectOption) => {\n      if (hoveredOption.value === null) {\n        hideAndFocus()\n        return\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = ''\n      }\n\n      if (props.multiple && isValueComputedArray(valueComputed)) {\n        const { exceedsMaxSelections, addOption } = useMaxSelections(valueComputed, ref(props.maxSelections), emit)\n\n        const isSelected = checkIsOptionSelected(getValue(option))\n\n        if (isSelected) {\n          // Unselect\n          valueComputed.value = valueComputed.value.filter((optionSelected) => !compareOptions(getValue(option), getValue(optionSelected)))\n        } else {\n          if (exceedsMaxSelections()) { return }\n          addOption(getValue(option))\n        }\n      } else {\n        valueComputed.value = typeof option === 'string' || typeof option === 'number' ? option : { ...option }\n        hideAndFocus()\n      }\n    }\n\n    const addNewOption = () => {\n      // Do not emit if option already exist and allow create is `unique`\n      const hasAddedOption = props.options?.some((option: SelectOption) => getText(option) === searchInput.value)\n\n      if (!(props.allowCreate === 'unique' && hasAddedOption)) {\n        emit('create-new', searchInput.value)\n        searchInput.value = ''\n      }\n    }\n\n    // Hovered options\n\n    const hoveredOption = ref<SelectOption | null>(null)\n\n    const selectHoveredOption = () => {\n      if (!hoveredOption.value) { return }\n\n      if (!showDropdownContent.value) {\n        // We can not select options if they are hidden\n        showDropdown()\n        return\n      }\n\n      selectOption(hoveredOption.value)\n    }\n\n    const selectOrAddOption = () => {\n      const allowedToCreate = !!props.allowCreate && searchInput.value !== ''\n\n      if (hoveredOption.value !== null) {\n        selectHoveredOption()\n      } else if (allowedToCreate) {\n        addNewOption()\n      }\n    }\n\n    const hoverPreviousOption = () => {\n      optionList.value?.hoverPreviousOption()\n    }\n\n    const hoverNextOption = () => {\n      optionList.value?.hoverNextOption()\n    }\n\n    // Dropdown content\n\n    const showDropdownContent = ref(false)\n\n    const showDropdownContentComputed = computed({\n      get: () => showDropdownContent.value,\n      set: (show: boolean) => {\n        show ? showDropdown() : hideDropdown()\n      },\n    })\n\n    const closeOnContentClick = computed(() => {\n      return !(props.multiple || props.searchable || props.allowCreate)\n    })\n\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      showDropdownContent.value = true\n      scrollToSelected()\n      focusSearchOrOptions()\n    }\n\n    const hideDropdown = () => {\n      showDropdownContent.value = false\n      searchInput.value = ''\n      validate()\n    }\n\n    const toggleDropdown = () => {\n      if (showDropdownContent.value) {\n        hideAndFocus()\n      } else {\n        showDropdown()\n      }\n    }\n\n    const onSelectClick = () => {\n      if (props.disabled || props.readonly) { return }\n      toggleDropdown()\n    }\n\n    const hideAndFocus = () => {\n      hideDropdown()\n      isInputFocused.value = true\n    }\n\n    const focusSearchBar = () => {\n      searchBar.value?.focus()\n    }\n\n    const focusOptionList = () => {\n      optionList.value?.focus()\n      !props.modelValue && optionList.value?.hoverFirstOption()\n    }\n\n    const focusSearchOrOptions = () => nextTick(() => {\n      if (showSearchInput.value) {\n        focusSearchBar()\n      } else {\n        focusOptionList()\n      }\n    })\n\n    const onInputFocus = () => {\n      isInputFocused.value = true\n      onFocus()\n    }\n\n    const onInputBlur = () => {\n      if (showDropdownContentComputed.value) { return }\n\n      onBlur()\n\n      isInputFocused.value\n        ? isInputFocused.value = false\n        : validate()\n    }\n\n    /** @public */\n    const focus = () => {\n      if (props.disabled) { return }\n      input.value?.focus()\n    }\n\n    /** @public */\n    const blur = () => {\n      if (showDropdownContentComputed.value) {\n        showDropdownContentComputed.value = false\n      }\n\n      nextTick(input.value?.blur)\n    }\n\n    /** @public */\n    const reset = () => {\n      if (props.multiple) {\n        valueComputed.value = Array.isArray(props.clearValue) ? props.clearValue : []\n      } else {\n        valueComputed.value = props.clearValue\n      }\n\n      searchInput.value = ''\n      emit('clear')\n    }\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : props.tabindex)\n\n    const scrollToSelected = () => {\n      const selected = valueComputed.value\n      const nothingSelected = typeof selected !== 'object' && Array.isArray(selected) && !selected.length\n\n      if (nothingSelected) { return }\n\n      const scrollTo = Array.isArray(selected) ? selected[selected.length - 1] : selected\n      hoveredOption.value = scrollTo\n      nextTick(() => optionList.value?.scrollToOption(scrollTo))\n    }\n\n    // Hinted search\n\n    let hintedSearchQuery = ''\n    let hintedSearchQueryTimeoutIndex!: ReturnType<typeof setTimeout>\n    const navigationKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' ']\n\n    // Hinted search - hover option if you typing it's value on select without search-bar\n    const onHintedSearch = (event: KeyboardEvent) => {\n      if (navigationKeys.some(key => key === event.key)) {\n        return\n      }\n\n      const isLetter: boolean = event.key.length === 1\n      const isDeleteKey: boolean = event.key === 'Backspace' || event.key === 'Delete'\n\n      clearTimeout(hintedSearchQueryTimeoutIndex)\n\n      if (isDeleteKey) {\n        // Remove last letter from query\n        hintedSearchQuery = hintedSearchQuery ? hintedSearchQuery.slice(0, -1) : ''\n      } else if (isLetter) {\n        // Add every new letter to the query\n        hintedSearchQuery += event.key\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = hintedSearchQuery\n        return\n      }\n\n      // Search for an option that matches the query\n      if (hintedSearchQuery) {\n        const appropriateOption = props.options.find(option => getText(option).toLowerCase().startsWith(hintedSearchQuery.toLowerCase()))\n        if (appropriateOption) {\n          hoveredOption.value = appropriateOption\n        }\n      }\n\n      hintedSearchQueryTimeoutIndex = setTimeout(() => { hintedSearchQuery = '' }, 1000)\n    }\n\n    return {\n      isFocused,\n\n      input,\n      optionList,\n      searchBar,\n\n      reset,\n      focus,\n      blur,\n\n      onInputFocus,\n      onInputBlur,\n      focusOptionList,\n      onSelectClick,\n      focusSearchBar,\n      searchInput,\n      showSearchInput,\n      hoveredOption,\n      tabIndexComputed,\n      valueComputed,\n      valueComputedString,\n      showClearIcon,\n      toggleIcon,\n      computedErrorMessages,\n      computedError,\n      filteredOptions,\n      checkIsOptionSelected,\n      closeOnContentClick,\n      selectOption,\n      selectOrAddOption,\n      selectHoveredOption,\n      hoverPreviousOption,\n      hoverNextOption,\n      showDropdownContentComputed,\n      showDropdown,\n      hideDropdown,\n      hideAndFocus,\n      toggleDropdown,\n      toggleIconColor,\n      onHintedSearch,\n      getText,\n      getTrackBy,\n      getGroupBy,\n      onScrollBottom,\n      clearIconProps,\n      isPlaceholder,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-select {\n  cursor: var(--va-select-cursor);\n\n  &__placeholder {\n    color: var(--va-input-placeholder-text-color);\n  }\n}\n\n.va-select-dropdown {\n  .va-dropdown__anchor {\n    display: block;\n  }\n\n  &__content {\n    overflow: hidden;\n    border-bottom-right-radius: var(--va-select-dropdown-border-radius);\n    border-bottom-left-radius: var(--va-select-dropdown-border-radius);\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n    box-shadow: var(--va-select-box-shadow);\n    padding: 0;\n  }\n\n  &__options-wrapper {\n    background: var(--va-select-dropdown-background);\n    overflow-y: auto;\n\n    @include va-scroll();\n  }\n}\n</style>\n","<template>\n  <va-dropdown\n    ref=\"dropdown\"\n    class=\"va-select__dropdown va-select-dropdown\"\n    trigger=\"none\"\n    anchorSelector=\".va-input-wrapper__field\"\n    :placement=\"$props.placement\"\n    :disabled=\"$props.disabled\"\n    :max-height=\"$props.maxHeight\"\n    :fixed=\"$props.fixed\"\n    :close-on-content-click=\"closeOnContentClick\"\n    :stateful=\"false\"\n    :offset=\"[1, 0]\"\n    keep-anchor-width\n    v-model=\"showDropdownContentComputed\"\n    @keydown.up.stop.prevent=\"showDropdown\"\n    @keydown.down.stop.prevent=\"showDropdown\"\n    @keydown.space.stop.prevent=\"showDropdown\"\n    @keydown.enter.stop.prevent=\"showDropdown\"\n    @click.prevent=\"onSelectClick\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        ref=\"input\"\n        class=\"va-select\"\n        aria-label=\"selected option\"\n        :model-value=\"valueComputedString\"\n        :success=\"$props.success\"\n        :error=\"computedError\"\n        :color=\"$props.color\"\n        :label=\"$props.label\"\n        :loading=\"$props.loading\"\n        :disabled=\"$props.disabled\"\n        :outline=\"$props.outline\"\n        :bordered=\"$props.bordered\"\n        :required-mark=\"$props.requiredMark\"\n        :messages=\"$props.messages\"\n        :error-messages=\"computedErrorMessages\"\n        :focused=\"isFocused\"\n        :tabindex=\"tabIndexComputed\"\n        @focus=\"onInputFocus\"\n        @blur=\"onInputBlur\"\n      >\n        <template\n          v-if=\"$slots.prepend\"\n          #prepend\n        >\n          <slot name=\"prepend\" />\n        </template>\n\n        <template\n          v-if=\"$slots.append\"\n          #append\n        >\n          <slot name=\"append\" />\n        </template>\n\n        <template\n          v-if=\"$slots.prependInner\"\n          #prependInner\n        >\n          <slot name=\"prependInner\" />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"showClearIcon\"\n            role=\"button\"\n            aria-hidden=\"false\"\n            aria-label=\"reset\"\n            tabindex=\"0\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n        </template>\n\n        <template #appendInner>\n          <slot\n            v-if=\"$slots.appendInner\"\n            name=\"appendInner\"\n          />\n          <va-icon\n            :color=\"toggleIconColor\"\n            :name=\"toggleIcon\"\n          />\n        </template>\n\n        <template\n          #default\n        >\n          <span\n            v-if=\"isPlaceholder\"\n            class=\"va-select__placeholder\"\n          >\n            {{ $props.placeholder }}\n          </span>\n          <slot\n            v-else\n            name=\"content\"\n            v-bind=\"{\n              valueString: valueComputedString,\n              value: valueComputed,\n              tabindex: tabIndexComputed,\n            }\"\n          >\n            {{ valueComputedString }}\n          </slot>\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <!-- Stop propagation for enter keyup event, to prevent VaDropdown closing -->\n    <va-dropdown-content\n      class=\"va-select-dropdown__content\"\n      :style=\"{ width: $props.width }\"\n      @keyup.enter.stop=\"() => undefined\"\n      @keydown.tab.stop.prevent=\"() => undefined\"\n      @keydown.esc.prevent=\"hideAndFocus\"\n    >\n      <va-input\n        v-if=\"showSearchInput\"\n        ref=\"searchBar\"\n        class=\"va-select__input\"\n        placeholder=\"Search\"\n        aria-label=\"options filter\"\n        :tabindex=\"tabIndexComputed\"\n        :bordered=\"true\"\n        v-model=\"searchInput\"\n        @keydown.up.stop.prevent=\"hoverPreviousOption\"\n        @keydown.left.stop.prevent=\"hoverPreviousOption\"\n        @keydown.down.stop.prevent=\"hoverNextOption\"\n        @keydown.right.stop.prevent=\"hoverNextOption\"\n        @keydown.enter.prevent=\"selectOrAddOption\"\n        @focus=\"hoveredOption = null\"\n      />\n      <div class=\"va-select-dropdown__options-wrapper\">\n        <va-select-option-list\n          ref=\"optionList\"\n          v-model:hoveredOption=\"hoveredOption\"\n          :style=\"{ maxHeight: $props.maxHeight }\"\n          :options=\"filteredOptions\"\n          :selected-value=\"valueComputed\"\n          :get-selected-state=\"checkIsOptionSelected\"\n          :get-text=\"getText\"\n          :get-track-by=\"getTrackBy\"\n          :get-group-by=\"getGroupBy\"\n          :search=\"searchInput\"\n          :no-options-text=\"$props.noOptionsText\"\n          :color=\"$props.color\"\n          :tabindex=\"tabIndexComputed\"\n          @select-option=\"selectOption\"\n          @no-previous-option-to-hover=\"focusSearchBar\"\n          @keydown.enter.stop.prevent=\"selectHoveredOption\"\n          @keydown.space.stop.prevent=\"selectHoveredOption\"\n          @keydown.tab.stop.prevent=\"searchBar && searchBar.focus()\"\n          @keydown=\"onHintedSearch\"\n          @scroll-bottom=\"onScrollBottom\"\n        />\n      </div>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, watch, nextTick, Ref, shallowRef } from 'vue'\n\nimport { warn } from '../../services/utils'\nimport {\n  useSelectableList, useSelectableListProps,\n  useValidation, useValidationProps, useValidationEmits, ValidationProps,\n  useFormProps,\n  useLoadingProps,\n  useColors,\n  useMaxSelections, useMaxSelectionsProps,\n  useClearableProps, useClearable, useClearableEmits,\n  useFocusDeep,\n} from '../../composables'\n\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaIcon } from '../va-icon'\nimport { VaInput, VaInputWrapper } from '../va-input'\nimport { VaSelectOptionList } from './VaSelectOptionList'\n\nimport { SelectDropdownIcon, SelectOption, Placement } from './types'\n\nexport default defineComponent({\n  name: 'VaSelect',\n\n  components: {\n    VaSelectOptionList,\n    VaIcon,\n    VaDropdown,\n    VaDropdownContent,\n    VaInput,\n    VaInputWrapper,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update-search',\n    'create-new',\n    'scroll-bottom',\n    ...useValidationEmits,\n    ...useClearableEmits,\n  ],\n\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps as ValidationProps<SelectOption>,\n    ...useLoadingProps,\n    ...useMaxSelectionsProps,\n    ...useClearableProps,\n    ...useFormProps,\n\n    modelValue: {\n      type: [String, Number, Array, Object] as PropType<SelectOption | SelectOption[]>,\n      default: '',\n    },\n\n    // Dropdown placement\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => ['top', 'bottom'].includes(placement),\n    },\n\n    allowCreate: {\n      type: [Boolean, String] as PropType<boolean | 'unique'>,\n      default: false,\n      validator: (mode: string | boolean) => [true, false, 'unique'].includes(mode),\n    },\n\n    color: { type: String, default: 'primary' },\n    multiple: { type: Boolean, default: false },\n    searchable: { type: Boolean, default: false },\n    separator: { type: String, default: ', ' },\n    width: { type: String, default: '100%' },\n    maxHeight: { type: String, default: '256px' },\n    noOptionsText: { type: String, default: 'Items not found' },\n    fixed: { type: Boolean, default: true },\n    hideSelected: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    dropdownIcon: {\n      type: [String, Object] as PropType<string | SelectDropdownIcon>,\n      default: (): SelectDropdownIcon => ({\n        open: 'expand_more',\n        close: 'expand_less',\n      }),\n      validator: (value: string | SelectDropdownIcon) => {\n        if (typeof value === 'string') { return true }\n        const isOpenIconString = typeof value.open === 'string'\n        const isCloseIconString = typeof value.close === 'string'\n        return isOpenIconString && isCloseIconString\n      },\n    },\n\n    // Input style\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    label: { type: String, default: '' },\n    placeholder: { type: String, default: '' },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const optionList = shallowRef<typeof VaSelectOptionList>()\n    const input = shallowRef<typeof VaInput>()\n    const searchBar = shallowRef<typeof VaInput>()\n\n    const isInputFocused = useFocusDeep()\n    const isFocused = computed(() => isInputFocused.value || showDropdownContent.value)\n\n    const { getHoverColor, getColor } = useColors()\n    const { getOptionByValue, getValue, getText, getTrackBy, getGroupBy } = useSelectableList(props)\n\n    const {\n      validate,\n      computedError,\n      computedErrorMessages,\n    } = useValidation(props, emit, () => reset(), () => focus())\n\n    const colorComputed = computed(() => getColor(props.color))\n    const toggleIconColor = computed(() => props.readonly ? getHoverColor(colorComputed.value) : colorComputed.value)\n\n    const onScrollBottom = () => {\n      emit('scroll-bottom')\n    }\n\n    const searchInput = ref('')\n    const showSearchInput = computed(() => props.searchable || props.allowCreate)\n\n    watch(searchInput, (value) => {\n      emit('update-search', value)\n      hoveredOption.value = null\n    })\n\n    // Select value\n\n    const valueComputed = computed<SelectOption | SelectOption[]>({\n      get () {\n        const value = getOptionByValue(props.modelValue)\n\n        if (props.multiple) {\n          if (!value) {\n            return []\n          }\n\n          if (!Array.isArray(value)) {\n            return [value]\n          }\n\n          return value\n        }\n\n        if (Array.isArray(value)) {\n          warn('Model value should be a string or a number for a single Select.')\n\n          if (value.length) {\n            return value[value.length - 1]\n          }\n        }\n\n        return value\n      },\n\n      set (value: SelectOption | SelectOption[]) {\n        if (Array.isArray(value)) {\n          emit('update:modelValue', value.map(getValue))\n        } else {\n          emit('update:modelValue', getValue(value))\n        }\n      },\n    })\n\n    const valueComputedString = computed<string>(() => {\n      if (!valueComputed.value) { return props.clearValue }\n      if (typeof valueComputed.value === 'string' || typeof valueComputed.value === 'number') { return valueComputed.value }\n      if (Array.isArray(valueComputed.value)) {\n        return valueComputed.value.map((value) => getText(value)).join(props.separator) || props.clearValue\n      }\n\n      return getText(valueComputed.value)\n    })\n\n    const isPlaceholder = computed(() => props.placeholder && !valueComputedString.value)\n\n    // Icons\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const showClearIcon = computed(() => {\n      return props.multiple && Array.isArray(valueComputed.value) ? !!valueComputed.value.length : canBeCleared.value\n    })\n\n    const toggleIcon = computed(() => {\n      if (!props.dropdownIcon) { return '' }\n\n      if (typeof props.dropdownIcon === 'string') {\n        return props.dropdownIcon\n      }\n\n      return showDropdownContent.value ? props.dropdownIcon.close : props.dropdownIcon.open\n    })\n\n    // Options\n\n    const filteredOptions = computed(() => {\n      if (!props.options) { return [] }\n\n      if (props.hideSelected) {\n        return props.options.filter((option) => !checkIsOptionSelected(option))\n      }\n\n      return props.options\n    })\n\n    const checkIsOptionSelected = (option: SelectOption) => {\n      if (!valueComputed.value) { return false }\n\n      if (Array.isArray(valueComputed.value)) {\n        return !!valueComputed.value.find((valueItem) => compareOptions(valueItem, option))\n      }\n\n      return compareOptions(valueComputed.value, option)\n    }\n\n    const compareOptions = (option1: SelectOption, option2: SelectOption) => {\n      const one = getValue(option1)\n      const two = getValue(option2)\n\n      // identity check works nice for strings and exact matches.\n      if (one === two) {\n        return true\n      }\n      if (typeof one === 'string' && typeof two === 'string') {\n        return one === two\n      }\n      if (one === null || two === null) {\n        return false\n      }\n      if (typeof one === 'object' && typeof two === 'object') {\n        return getTrackBy(one) === getTrackBy(two)\n      }\n\n      return false\n    }\n\n    const isValueComputedArray = (v: Ref<SelectOption | SelectOption[]>): v is Ref<SelectOption[]> => Array.isArray(v.value)\n\n    const selectOption = (option: SelectOption) => {\n      if (hoveredOption.value === null) {\n        hideAndFocus()\n        return\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = ''\n      }\n\n      if (props.multiple && isValueComputedArray(valueComputed)) {\n        const { exceedsMaxSelections, addOption } = useMaxSelections(valueComputed, ref(props.maxSelections), emit)\n\n        const isSelected = checkIsOptionSelected(getValue(option))\n\n        if (isSelected) {\n          // Unselect\n          valueComputed.value = valueComputed.value.filter((optionSelected) => !compareOptions(getValue(option), getValue(optionSelected)))\n        } else {\n          if (exceedsMaxSelections()) { return }\n          addOption(getValue(option))\n        }\n      } else {\n        valueComputed.value = typeof option === 'string' || typeof option === 'number' ? option : { ...option }\n        hideAndFocus()\n      }\n    }\n\n    const addNewOption = () => {\n      // Do not emit if option already exist and allow create is `unique`\n      const hasAddedOption = props.options?.some((option: SelectOption) => getText(option) === searchInput.value)\n\n      if (!(props.allowCreate === 'unique' && hasAddedOption)) {\n        emit('create-new', searchInput.value)\n        searchInput.value = ''\n      }\n    }\n\n    // Hovered options\n\n    const hoveredOption = ref<SelectOption | null>(null)\n\n    const selectHoveredOption = () => {\n      if (!hoveredOption.value) { return }\n\n      if (!showDropdownContent.value) {\n        // We can not select options if they are hidden\n        showDropdown()\n        return\n      }\n\n      selectOption(hoveredOption.value)\n    }\n\n    const selectOrAddOption = () => {\n      const allowedToCreate = !!props.allowCreate && searchInput.value !== ''\n\n      if (hoveredOption.value !== null) {\n        selectHoveredOption()\n      } else if (allowedToCreate) {\n        addNewOption()\n      }\n    }\n\n    const hoverPreviousOption = () => {\n      optionList.value?.hoverPreviousOption()\n    }\n\n    const hoverNextOption = () => {\n      optionList.value?.hoverNextOption()\n    }\n\n    // Dropdown content\n\n    const showDropdownContent = ref(false)\n\n    const showDropdownContentComputed = computed({\n      get: () => showDropdownContent.value,\n      set: (show: boolean) => {\n        show ? showDropdown() : hideDropdown()\n      },\n    })\n\n    const closeOnContentClick = computed(() => {\n      return !(props.multiple || props.searchable || props.allowCreate)\n    })\n\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      showDropdownContent.value = true\n      scrollToSelected()\n      focusSearchOrOptions()\n    }\n\n    const hideDropdown = () => {\n      showDropdownContent.value = false\n      searchInput.value = ''\n      validate()\n    }\n\n    const toggleDropdown = () => {\n      if (showDropdownContent.value) {\n        hideAndFocus()\n      } else {\n        showDropdown()\n      }\n    }\n\n    const onSelectClick = () => {\n      if (props.disabled || props.readonly) { return }\n      toggleDropdown()\n    }\n\n    const hideAndFocus = () => {\n      hideDropdown()\n      isInputFocused.value = true\n    }\n\n    const focusSearchBar = () => {\n      searchBar.value?.focus()\n    }\n\n    const focusOptionList = () => {\n      optionList.value?.focus()\n      !props.modelValue && optionList.value?.hoverFirstOption()\n    }\n\n    const focusSearchOrOptions = () => nextTick(() => {\n      if (showSearchInput.value) {\n        focusSearchBar()\n      } else {\n        focusOptionList()\n      }\n    })\n\n    const onInputFocus = () => {\n      isInputFocused.value = true\n      onFocus()\n    }\n\n    const onInputBlur = () => {\n      if (showDropdownContentComputed.value) { return }\n\n      onBlur()\n\n      isInputFocused.value\n        ? isInputFocused.value = false\n        : validate()\n    }\n\n    /** @public */\n    const focus = () => {\n      if (props.disabled) { return }\n      input.value?.focus()\n    }\n\n    /** @public */\n    const blur = () => {\n      if (showDropdownContentComputed.value) {\n        showDropdownContentComputed.value = false\n      }\n\n      nextTick(input.value?.blur)\n    }\n\n    /** @public */\n    const reset = () => {\n      if (props.multiple) {\n        valueComputed.value = Array.isArray(props.clearValue) ? props.clearValue : []\n      } else {\n        valueComputed.value = props.clearValue\n      }\n\n      searchInput.value = ''\n      emit('clear')\n    }\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : props.tabindex)\n\n    const scrollToSelected = () => {\n      const selected = valueComputed.value\n      const nothingSelected = typeof selected !== 'object' && Array.isArray(selected) && !selected.length\n\n      if (nothingSelected) { return }\n\n      const scrollTo = Array.isArray(selected) ? selected[selected.length - 1] : selected\n      hoveredOption.value = scrollTo\n      nextTick(() => optionList.value?.scrollToOption(scrollTo))\n    }\n\n    // Hinted search\n\n    let hintedSearchQuery = ''\n    let hintedSearchQueryTimeoutIndex!: ReturnType<typeof setTimeout>\n    const navigationKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' ']\n\n    // Hinted search - hover option if you typing it's value on select without search-bar\n    const onHintedSearch = (event: KeyboardEvent) => {\n      if (navigationKeys.some(key => key === event.key)) {\n        return\n      }\n\n      const isLetter: boolean = event.key.length === 1\n      const isDeleteKey: boolean = event.key === 'Backspace' || event.key === 'Delete'\n\n      clearTimeout(hintedSearchQueryTimeoutIndex)\n\n      if (isDeleteKey) {\n        // Remove last letter from query\n        hintedSearchQuery = hintedSearchQuery ? hintedSearchQuery.slice(0, -1) : ''\n      } else if (isLetter) {\n        // Add every new letter to the query\n        hintedSearchQuery += event.key\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = hintedSearchQuery\n        return\n      }\n\n      // Search for an option that matches the query\n      if (hintedSearchQuery) {\n        const appropriateOption = props.options.find(option => getText(option).toLowerCase().startsWith(hintedSearchQuery.toLowerCase()))\n        if (appropriateOption) {\n          hoveredOption.value = appropriateOption\n        }\n      }\n\n      hintedSearchQueryTimeoutIndex = setTimeout(() => { hintedSearchQuery = '' }, 1000)\n    }\n\n    return {\n      isFocused,\n\n      input,\n      optionList,\n      searchBar,\n\n      reset,\n      focus,\n      blur,\n\n      onInputFocus,\n      onInputBlur,\n      focusOptionList,\n      onSelectClick,\n      focusSearchBar,\n      searchInput,\n      showSearchInput,\n      hoveredOption,\n      tabIndexComputed,\n      valueComputed,\n      valueComputedString,\n      showClearIcon,\n      toggleIcon,\n      computedErrorMessages,\n      computedError,\n      filteredOptions,\n      checkIsOptionSelected,\n      closeOnContentClick,\n      selectOption,\n      selectOrAddOption,\n      selectHoveredOption,\n      hoverPreviousOption,\n      hoverNextOption,\n      showDropdownContentComputed,\n      showDropdown,\n      hideDropdown,\n      hideAndFocus,\n      toggleDropdown,\n      toggleIconColor,\n      onHintedSearch,\n      getText,\n      getTrackBy,\n      getGroupBy,\n      onScrollBottom,\n      clearIconProps,\n      isPlaceholder,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-select {\n  cursor: var(--va-select-cursor);\n\n  &__placeholder {\n    color: var(--va-input-placeholder-text-color);\n  }\n}\n\n.va-select-dropdown {\n  .va-dropdown__anchor {\n    display: block;\n  }\n\n  &__content {\n    overflow: hidden;\n    border-bottom-right-radius: var(--va-select-dropdown-border-radius);\n    border-bottom-left-radius: var(--va-select-dropdown-border-radius);\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n    box-shadow: var(--va-select-box-shadow);\n    padding: 0;\n  }\n\n  &__options-wrapper {\n    background: var(--va-select-dropdown-background);\n    overflow-y: auto;\n\n    @include va-scroll();\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaSelect from './VaSelect.vue'\n\nexport { VaSelectOptionList } from './VaSelectOptionList'\n\nexport const VaSelect = withConfigTransport(_VaSelect)\n\nexport * from './types'\n"],"names":["_createElementBlock","_openBlock","_Fragment","_renderList","_hoisted_2","_toDisplayString","_normalizeClass","_normalizeStyle","_createBlock","_createElementVNode","_createVNode","_VaSelectOptionList","VaInputWrapper","_mergeProps","_renderSlot","_normalizeProps","_VaSelect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;AAKG;AACI,MAAM,qBAAqB,GAAG;AACnC,IAAA,aAAa,EAAE;AACb,QAAA,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;AACtB,QAAA,OAAO,EAAE,SAAS;AACnB,KAAA;CACF,CAAA;SAEe,gBAAgB,CAC9B,UAAsB,EACtB,aAA+C,EAC/C,IAA0D,EAAA;IAE1D,MAAM,oBAAoB,GAAG,MAAc;AACzC,QAAA,IAAI,aAAa,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,KAAK,CAAA;AAAE,SAAA;QACtF,OAAO,UAAU,CAAC,KAAK,CAAC,MAAM,IAAI,aAAa,CAAC,KAAK,CAAA;AACvD,KAAC,CAAA;AAED,IAAA,MAAM,SAAS,GAAG,CAAC,WAAgB,KAAU;QAC3C,MAAM,kBAAkB,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA;AAC7D,QAAA,IAAI,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAA;AAC/C,KAAC,CAAA;IAED,OAAO;QACL,oBAAoB;QACpB,SAAS;KACV,CAAA;AACH;;AClCA,MAAM,gBAAgB,GAAG,CAAC,OAAoB,KAAK,OAAO,CAAC,SAAS,CAAA;AACpE,MAAM,mBAAmB,GAAG,CAAC,OAAoB,KAAK,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,CAAA;AAC9F,MAAM,mBAAmB,GAAG,CAAC,OAAoB,KAAK,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAG,CAAC,CAAA;AAElG,MAAM,YAAY,GAAG,CAAC,OAAoB,EAAE,YAAyB,EAAE,iBAAsD,KAAI;AAC/H,IAAA,MAAM,UAAU,GAAG,YAAY,CAAC,YAAY,CAAA;AAC5C,IAAA,MAAM,eAAe,GAAG,YAAY,CAAC,SAAS,CAAA;IAC9C,MAAM,GAAG,GAAG,gBAAgB,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,SAAS,CAAA;IAC9D,MAAM,MAAM,GAAG,mBAAmB,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,SAAS,CAAA;IACpE,MAAM,MAAM,GAAG,mBAAmB,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,SAAS,CAAA;IAEpE,IAAI,iBAAiB,KAAK,OAAO,EAAE;AACjC,QAAA,OAAO,GAAG,CAAA;AACX,KAAA;IAED,IAAI,iBAAiB,KAAK,KAAK,EAAE;QAC/B,OAAO,MAAM,GAAG,UAAU,CAAA;AAC3B,KAAA;IAED,IAAI,iBAAiB,KAAK,QAAQ,EAAE;AAClC,QAAA,OAAO,MAAM,GAAG,UAAU,GAAG,CAAC,CAAA;AAC/B,KAAA;IAED,IAAI,iBAAiB,KAAK,KAAK,EAAE;AAC/B,QAAA,IAAI,GAAG,GAAG,eAAe,GAAG,CAAC,EAAE;AAC7B,YAAA,OAAO,GAAG,CAAA;AACX,SAAA;AAED,QAAA,IAAI,MAAM,GAAG,eAAe,GAAG,UAAU,EAAE;YACzC,OAAO,MAAM,GAAG,UAAU,CAAA;AAC3B,SAAA;AACF,KAAA;AACH,CAAC,CAAA;AAED;;AAEG;AACI,MAAM,eAAe,GAAG,CAAC,OAAoB,EAAE,OAIlD,GAAA;IACF,YAAY,EAAE,OAAO,CAAC,aAAc;AACpC,IAAA,iBAAiB,EAAE,KAAK;AACxB,IAAA,MAAM,EAAE,KAAK;AACd,CAAA,KAAI;IACH,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,aAAc,CAAA;AAEnE,IAAA,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAA;IAE1E,IAAI,GAAG,KAAK,SAAS,EAAE;QAAE,OAAM;AAAE,KAAA;IAEjC,YAAY,CAAC,MAAM,CAAC;AAClB,QAAA,GAAG,EAAE,GAAG;QACR,QAAQ,EAAE,OAAO,CAAC,MAAM,GAAG,QAAQ,GAAG,MAAM;AAC7C,KAAA,CAAC,CAAA;AACJ,CAAC;;ACSD,eAAe,eAAe,CAAC;AAC7B,IAAA,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,EAAE,QAAQ;AACtB,IAAA,KAAK,EAAE;QACL,eAAe;QACf,sBAAsB;QACtB,6BAA6B;QAC7B,eAAe;AAChB,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,GAAG,aAAa;AAChB,QAAA,OAAO,EAAE,EAAE,IAAI,EAAE,KAAqC,EAAE,OAAO,EAAE,MAAM,IAAI;QAC3E,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAgB,EAAG;QAC3D,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAA2D,EAAE,QAAQ,EAAE,MAAM;QACvG,OAAO,EAAE,EAAE,IAAI,EAAE,QAA0D,EAAE,QAAQ,EAAE,MAAM;QAC7F,UAAU,EAAE,EAAE,IAAI,EAAE,QAA0D,EAAE,QAAQ,EAAE,MAAM;QAChG,UAAU,EAAE,EAAE,IAAI,EAAE,QAA0D,EAAE,QAAQ,EAAE,MAAM;QAChG,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC3C,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;QACrC,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG;AACtC,QAAA,aAAa,EAAE;AACb,YAAA,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAsC;AACnE,YAAA,OAAO,EAAE,IAAI;AACd,SAAA;AACF,KAAA;AACD,IAAA,KAAM,CAAC,KAAK,EAAE,EAAE,IAAG,EAAG,EAAA;QACpB,MAAM,EAAE,QAAQ,EAAE,eAAgB,GAAE,SAAS,EAAC,CAAA;AAE9C,QAAA,MAAM,WAAY,GAAE,UAAU,EAAc,CAAA;AAC5C,QAAA,MAAM,QAAS,GAAE,GAAG,CAA8B,EAAE,CAAA,CAAA;AAEpD,QAAA,MAAM,QAAO,GAAI,CAAC,KAAc,KAAK;AACnC,YAAA,MAAM,MAAK,GAAI,KAAK,CAAC,MAAgB,CAAA;YACrC,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO;AAAA,aAAA;YAEtB,IAAI,MAAM,CAAC,SAAQ,GAAI,MAAM,CAAC,YAAW,KAAM,MAAM,CAAC,YAAY,EAAE;gBAClE,IAAI,CAAC,eAAe,CAAA,CAAA;AACtB,aAAA;AACF,SAAA,CAAA;AAEA,QAAA,MAAM,YAAW,GAAI,MAAQ,EAAA,QAAQ,CAAC,KAAM,GAAE,EAAG,CAAA,EAAA,CAAA;QAEjD,MAAM,UAAS,GAAI,CAAC,MAAwB,KAAK,CAAC,EAA4C,KAAK;AACjG,YAAA,IAAI,EAAE,EAAE;AACN,gBAAA,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAE,GAAE,EAAgB,CAAA;AAC7D,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,qBAAsB,GAAE,QAAQ,CAAC;YACrC,GAAG,EAAE,MAAM,KAAK,CAAC,aAAY,IAAK,IAAI;YACtC,GAAG,EAAE,CAAC,KAA8B,KAAK,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC;AAC7E,SAAA,CAAA,CAAA;AAED,QAAA,MAAM,eAAgB,GAAE,QAAQ,CAAC,MAAM;AACrC,YAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACjB,OAAO,KAAK,CAAC,OAAM,CAAA;AACrB,aAAA;YAEA,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAwB,KAAK;AACxD,gBAAA,MAAM,UAAW,GAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAC,CAAA;gBAChE,MAAM,SAAS,KAAK,CAAC,MAAM,CAAC,WAAW,EAAC,CAAA;AACxC,gBAAA,OAAO,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;AACnC,aAAC,CAAA,CAAA;AACH,SAAC,CAAA,CAAA;AAED,QAAA,MAAM,YAAa,GAAE,QAAQ,CAAC,MAAM,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAA0C,EAAE,MAAM,KAAK;YACvH,IAAI,OAAO,MAAK,KAAM,QAAO,IAAK,CAAC,MAAM,CAAC,KAAK,EAAE;AAC/C,gBAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;AAC3B,aAAA;AAAK,iBAAA;gBACL,MAAM,OAAQ,GAAE,KAAK,CAAC,UAAU,CAAC,MAAM,CAAA,CAAA;AAEvC,gBAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;AAAE,oBAAA,MAAM,CAAC,OAAO,CAAE,GAAE,EAAG,CAAA;AAAA,iBAAA;gBAE7C,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;AAC7B,aAAA;AAEA,YAAA,OAAO,MAAK,CAAA;SACb,EAAE,EAAE,QAAQ,EAAE,EAAC,EAAG,CAAC,CAAA,CAAA;AAEpB,QAAA,MAAM,YAAW,GAAI,CAAC,MAAwB,KAAK,IAAI,CAAC,eAAe,EAAE,MAAM,CAAA,CAAA;QAE/E,MAAM,gBAAgB,CAAC,MAAwB,KAAK,OAAO,MAAO,KAAI,WAAY,MAAM,CAAC,IAAc,GAAI,SAAQ,CAAA;AAEnH,QAAA,MAAM,cAAe,GAAE,CAAC,MAAwB,MAAM;AACpD,YAAA,+BAA+B,EAAE,IAAI;AACrC,YAAA,yCAAyC,EAAE,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC;AAC1E,SAAA,CAAA,CAAA;AAED,QAAA,MAAM,cAAe,GAAE,CAAC,MAAwB,MAAM;AACpD,YAAA,KAAK,EAAE,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAA,GAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS;YACzE,eAAe,EAAE,SAAS,CAAC,MAAM,CAAA,GAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE,GAAE,aAAa;AAC1F,SAAA,CAAA,CAAA;AAED,QAAA,MAAM,SAAU,GAAE,CAAC,MAAwB,KAAK;AAC9C,YAAA,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE;AAAE,gBAAA,OAAO,KAAM,CAAA;AAAA,aAAA;AACjD,YAAA,IAAI,OAAO,WAAW,QAAQ,EAAE;AAAE,gBAAA,OAAO,MAAO,KAAI,qBAAqB,CAAC,KAAM,CAAA;AAAA,aAAA;AAChF,YAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;AAAE,gBAAA,OAAO,KAAM,CAAA;AAAA,aAAA;AAEtC,YAAA,OAAO,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC,KAAK,MAAM,KAAK,CAAC,UAAU,CAAC,MAAM,CAAA,CAAA;AAClF,SAAA,CAAA;AAEA,QAAA,MAAM,sBAAsB,CAAC,MAAyB,KAAO,EAAA,qBAAqB,CAAC,QAAQ,MAAO,IAAG,IAAK,CAAA,EAAA,CAAA;AAE1G,QAAA,MAAM,kBAAmB,GAAE,QAAQ,CAAC,MAAM,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK;YACpF,OAAO,CAAC,CAAC,qBAAqB,CAAC,KAAM,IAAG,KAAK,CAAC,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC,KAAK,CAAA,CAAA;SAClH,CAAC,CAAA,CAAA;QAEF,MAAM,mBAAkB,GAAI,MAAM;AAChC,YAAA,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE;;AAEhC,gBAAA,eAAe,CAAC,KAAK,CAAC,MAAO,IAAG,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA;AAChF,aAAA;AAAK,iBAAA;gBACL,IAAI,eAAe,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAM,GAAE,CAAC,CAAC,EAAE;AACvD,oBAAA,qBAAqB,CAAC,KAAM,GAAE,eAAe,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAI,GAAI,CAAC,CAAA,CAAA;AAChF,iBAAA;AAAK,qBAAA;oBACL,IAAI,CAAC,6BAA6B,CAAA,CAAA;AACpC,iBAAA;AACF,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,kBAAkB,MAAM;AAC5B,YAAA,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE;;AAEhC,gBAAA,eAAe,CAAC,KAAK,CAAC,MAAO,IAAG,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA;AAC5E,aAAA;AAAK,iBAAA;gBACL,IAAI,eAAe,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAM,GAAE,CAAC,CAAC,EAAE;AACvD,oBAAA,qBAAqB,CAAC,KAAM,GAAE,eAAe,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAI,GAAI,CAAC,CAAA,CAAA;AAClF,iBAAA;AACF,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,mBAAmB,MAAM;AAC7B,YAAA,IAAI,eAAe,CAAC,KAAK,CAAC,MAAO,GAAE,CAAC,EAAE;gBACpC,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA;AAC9C,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,KAAM,GAAE,MAAM;;;AAElB,YAAA,CAAA,EAAA,GAAA,WAAW,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,EAAE,aAAa,EAAE,MAAM,CAAA,CAAA;AAClD,SAAA,CAAA;AAEA,QAAA,MAAM,cAAe,GAAE,CAAC,MAAwB,KAAK;YACnD,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO;AAAA,aAAA;AAEtB,YAAA,MAAM,OAAM,GAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA,CAAA;AAEvD,YAAA,IAAI,OAAO,EAAE;gBACX,eAAe,CAAC,OAAO,CAAA,CAAA;AACzB,aAAA;AACF,SAAA,CAAA;QAEA,KAAK,CAAC,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC,SAAkC,KAAK,SAAQ,IAAK,cAAc,CAAC,SAAS,CAAC,CAAA,CAAA;AAE/G,QAAA,MAAM,gBAAgB;YACpB,mBAAmB;YACnB,eAAe;YACf,gBAAgB;YAChB,KAAK;YACL,cAAc;SAChB,CAAA;QAEA,OAAO;YACL,WAAW;YAEX,QAAQ;YACR,eAAe;YACf,YAAY;YACZ,QAAQ;YACR,YAAY;YACZ,UAAU;YACV,YAAY;YACZ,aAAa;YACb,cAAc;YACd,cAAc;YACd,mBAAmB;AACnB,YAAA,GAAG,aAAa;SAClB,CAAA;KACD;AACF,CAAA,CAAA;;;;;ACnOO,EAAA,KAAK,EAAC,mCAAkC;;;;;AAiC1C,EAAA,KAAK,EAAC,kCAAiC;;;;;;uBAjD3CA,kBAqDK,CAAA,KAAA,EAAA;AApDH,IAAA,GAAG,EAAC,aAAY;AAChB,IAAA,KAAK,EAAC,uBAAsB;AAC3B,IAAA,QAAQ,EAAE,IAAQ,CAAA,QAAA;IAClB,SAAO,EAAA;qEAAkB,IAAmB,CAAA,mBAAA,IAAA,IAAA,CAAA,mBAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA;qEACjB,IAAmB,CAAA,mBAAA,IAAA,IAAA,CAAA,mBAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA;qEACnB,IAAe,CAAA,eAAA,IAAA,IAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA;qEACd,IAAe,CAAA,eAAA,IAAA,IAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;6DAC3B,IAAQ,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CAAA;;AAEzB,KAAAC,SAAA,CAAA,IAAA,CAAA,EAAAD,kBAAA,CAoCUE,QAnCuB,EAAA,IAAA,EAAAC,UAAA,CAAA,IAAA,CAAA,YAAY,EAAnC,CAAA,OAAO,EAAE,SAAS,KAAA;+DACpB,SAAS,EAAA,EAAA;SAGP;0BADRH,kBAKM,CAAA,MAAA,EALNI,YAKM,EAAAC,eAAA,CADD,SAAQ,CAAA,EAAA,CAAA,YAAA;;0BAEbL,kBAyBK,CAAAE,QAAA,EAAA,IAAA,EAAAC,UAAA,CAxBc,OAAO,EAAA,CAAjB,MAAO,KAAA;+BADhBH,kBAyBK,CAAA,KAAA,EAAA;AAvBF,YAAA,GAAG,EAAE,IAAA,CAAA,MAAM,CAAC,UAAU,CAAC,MAAM,CAAA;;YAC7B,GAAG,EAAE,IAAU,CAAA,UAAA,CAAC,MAAM,CAAA;AACvB,YAAA,IAAI,EAAC,QAAO;AACX,YAAA,eAAa,EAAI,CAAA,CAAA,IAAA,CAAA,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAA;YAC/C,KAAK,EAAAM,cAAA,CAAE,IAAc,CAAA,cAAA,CAAC,MAAM,CAAA,CAAA;YAC5B,KAAK,EAAAC,cAAA,CAAE,IAAc,CAAA,cAAA,CAAC,MAAM,CAAA,CAAA;YAC5B,OAAK,EAAA,MAAA,KAAE,IAAY,CAAA,YAAA,CAAC,MAAM,CAAA,CAAA;YAC1B,WAAS,EAAA,MAAA,KAAE,IAAmB,CAAA,mBAAA,CAAC,MAAM,CAAA,CAAA;;AAG9B,YAAA,CAAA,IAAA,CAAA,aAAa,CAAC,MAAM,CAAA;8BAD5BC,WAKC,CAAA,kBAAA,EAAA;;AAHC,kBAAA,IAAI,EAAC,OAAM;AACX,kBAAA,KAAK,EAAC,qCAAoC;kBACzC,IAAI,EAAE,IAAa,CAAA,aAAA,CAAC,MAAM,CAAA;;;YAE7BC,kBAAiC,CAAA,MAAA,EAAA,IAAA,EAAAJ,eAAA,CAAxB,IAAO,CAAA,OAAA,CAAC,MAAM,CAAA,CAAA,EAAA,CAAA,YAAA;2BACvBK,WAMC,CAAA,kBAAA,EAAA;AAJC,cAAA,KAAK,EAAC,8CAA6C;AACnD,cAAA,IAAI,EAAC,OAAM;AACX,cAAA,IAAI,EAAC,MAAK;AACT,cAAA,KAAK,EAAE,IAAA,CAAA,QAAQ,CAAC,IAAA,CAAA,MAAM,CAAC,KAAK,CAAA;;sBAJrB,IAAM,CAAA,MAAA,CAAC,gBAAgB,CAAC,MAAM,CAAA,CAAA;;;;;;AASnC,IAAA,CAAA,CAAA,IAAA,CAAA,eAAe,CAAC,MAAM;sBAD/BV,kBAKK,CAAA,KAAA,EALL,UAKK,EAAAK,eAAA,CADA;;;;;;;;MCjDI,kBAAkB,GAAG,mBAAmB,CAACM,QAAmB;;ACwLzE,aAAe,eAAe,CAAC;AAC7B,IAAA,IAAI,EAAE,UAAU;AAEhB,IAAA,UAAU,EAAE;QACV,kBAAkB;QAClB,MAAM;QACN,UAAU;QACV,iBAAiB;QACjB,OAAO;wBACPC,QAAc;AACf,KAAA;AAED,IAAA,KAAK,EAAE;QACL,mBAAmB;QACnB,eAAe;QACf,YAAY;QACZ,eAAe;AACf,QAAA,GAAG,kBAAkB;AACrB,QAAA,GAAG,iBAAiB;AACrB,KAAA;AAED,IAAA,KAAK,EAAE;AACL,QAAA,GAAG,sBAAsB;AACzB,QAAA,GAAG,kBAAmD;AACtD,QAAA,GAAG,eAAe;AAClB,QAAA,GAAG,qBAAqB;AACxB,QAAA,GAAG,iBAAiB;AACpB,QAAA,GAAG,YAAY;AAEf,QAAA,UAAU,EAAE;YACV,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAA4C;AAChF,YAAA,OAAO,EAAE,EAAE;AACZ,SAAA;;AAGD,QAAA,SAAS,EAAE;AACT,YAAA,IAAI,EAAE,MAA6B;AACnC,YAAA,OAAO,EAAE,QAAQ;AACjB,YAAA,SAAS,EAAE,CAAC,SAAiB,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;AACxE,SAAA;AAED,QAAA,WAAW,EAAE;AACX,YAAA,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAiC;AACvD,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,SAAS,EAAE,CAAC,IAAsB,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC9E,SAAA;QAED,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW;QAC3C,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC3C,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC7C,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;QAC1C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;QACxC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS;QAC7C,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAgB,EAAG;QAC3D,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QACvC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC/C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG;AACtC,QAAA,YAAY,EAAE;AACZ,YAAA,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAA0C;AAC/D,YAAA,OAAO,EAAE,OAA2B;AAClC,gBAAA,IAAI,EAAE,aAAa;AACnB,gBAAA,KAAK,EAAE,aAAa;aACrB,CAAC;AACF,YAAA,SAAS,EAAE,CAAC,KAAkC,KAAK;AACjD,gBAAA,IAAI,OAAO,KAAM,KAAI,QAAQ,EAAE;AAAE,oBAAA,OAAO,IAAK,CAAA;AAAA,iBAAA;gBAC7C,MAAM,gBAAiB,GAAE,OAAO,KAAK,CAAC,IAAK,KAAI,QAAO,CAAA;gBACtD,MAAM,iBAAkB,GAAE,OAAO,KAAK,CAAC,KAAM,KAAI,QAAO,CAAA;gBACxD,OAAO,gBAAe,IAAK,iBAAgB,CAAA;aAC5C;AACF,SAAA;;QAGD,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC1C,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC3C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAC,EAAG;QACpC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;QAC1C,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;AAChD,KAAA;AAED,IAAA,KAAM,CAAC,KAAK,EAAE,EAAE,IAAG,EAAG,EAAA;AACpB,QAAA,MAAM,UAAS,GAAI,UAAU,EAA4B,CAAA;AACzD,QAAA,MAAM,KAAI,GAAI,UAAU,EAAiB,CAAA;AACzC,QAAA,MAAM,SAAQ,GAAI,UAAU,EAAiB,CAAA;AAE7C,QAAA,MAAM,cAAe,GAAE,YAAY,EAAC,CAAA;AACpC,QAAA,MAAM,SAAU,GAAE,QAAQ,CAAC,MAAM,cAAc,CAAC,KAAI,IAAK,mBAAmB,CAAC,KAAK,CAAA,CAAA;QAElF,MAAM,EAAE,aAAa,EAAE,UAAW,GAAE,SAAS,EAAC,CAAA;AAC9C,QAAA,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,UAAW,EAAA,GAAI,iBAAiB,CAAC,KAAK,CAAA,CAAA;QAE/F,MAAM,EACJ,QAAQ,EACR,aAAa,EACb,qBAAqB,GACrB,GAAE,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,KAAK,EAAE,EAAE,MAAM,KAAK,EAAE,CAAA,CAAA;AAE3D,QAAA,MAAM,aAAc,GAAE,QAAQ,CAAC,MAAM,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,CAAA;QAC1D,MAAM,eAAgB,GAAE,QAAQ,CAAC,MAAM,KAAK,CAAC,QAAS,GAAE,aAAa,CAAC,aAAa,CAAC,KAAK,CAAA,GAAI,aAAa,CAAC,KAAK,CAAA,CAAA;QAEhH,MAAM,iBAAiB,MAAM;YAC3B,IAAI,CAAC,eAAe,CAAA,CAAA;AACtB,SAAA,CAAA;AAEA,QAAA,MAAM,WAAY,GAAE,GAAG,CAAC,EAAE,CAAA,CAAA;AAC1B,QAAA,MAAM,eAAc,GAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,cAAc,KAAK,CAAC,WAAW,CAAA,CAAA;AAE5E,QAAA,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;AAC5B,YAAA,IAAI,CAAC,eAAe,EAAE,KAAK,CAAA,CAAA;AAC3B,YAAA,aAAa,CAAC,KAAM,GAAE,IAAG,CAAA;AAC3B,SAAC,CAAA,CAAA;;QAID,MAAM,aAAY,GAAI,QAAQ,CAAgC;YAC5D,GAAI,GAAA;gBACF,MAAM,KAAI,GAAI,gBAAgB,CAAC,KAAK,CAAC,UAAU,CAAA,CAAA;gBAE/C,IAAI,KAAK,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,KAAK,EAAE;AACV,wBAAA,OAAO,EAAC,CAAA;AACV,qBAAA;AAEA,oBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBACzB,OAAO,CAAC,KAAK,CAAA,CAAA;AACf,qBAAA;AAEA,oBAAA,OAAO,KAAI,CAAA;AACb,iBAAA;AAEA,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,iEAAiE,CAAA,CAAA;oBAEtE,IAAI,KAAK,CAAC,MAAM,EAAE;wBAChB,OAAO,KAAK,CAAC,KAAK,CAAC,MAAO,GAAE,CAAC,CAAA,CAAA;AAC/B,qBAAA;AACF,iBAAA;AAEA,gBAAA,OAAO,KAAI,CAAA;aACZ;AAED,YAAA,GAAI,CAAC,KAAoC,EAAA;AACvC,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA,CAAA;AAC7C,iBAAA;AAAK,qBAAA;oBACL,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAA,CAAA;AAC3C,iBAAA;aACD;AACF,SAAA,CAAA,CAAA;AAED,QAAA,MAAM,sBAAsB,QAAQ,CAAS,MAAM;AACjD,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBAAE,OAAO,KAAK,CAAC,UAAW,CAAA;AAAA,aAAA;AACpD,YAAA,IAAI,OAAO,aAAa,CAAC,KAAI,KAAM,YAAY,OAAO,aAAa,CAAC,UAAU,QAAQ,EAAE;gBAAE,OAAO,aAAa,CAAC,KAAM,CAAA;AAAA,aAAA;YACrH,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACtC,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAA,IAAK,KAAK,CAAC,UAAS,CAAA;AACpG,aAAA;AAEA,YAAA,OAAO,OAAO,CAAC,aAAa,CAAC,KAAK,CAAA,CAAA;AACpC,SAAC,CAAA,CAAA;AAED,QAAA,MAAM,aAAY,GAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,WAAY,IAAG,CAAC,mBAAmB,CAAC,KAAK,CAAA,CAAA;;AAIpF,QAAA,MAAM,EACJ,YAAY,EACZ,cAAc,EACd,OAAO,EACP,MAAM,GACR,GAAI,YAAY,CAAC,KAAK,EAAE,aAAa,CAAA,CAAA;AAErC,QAAA,MAAM,aAAY,GAAI,QAAQ,CAAC,MAAM;AACnC,YAAA,OAAO,KAAK,CAAC,QAAS,IAAG,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAE,GAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,MAAO,GAAE,YAAY,CAAC,KAAI,CAAA;AAChH,SAAC,CAAA,CAAA;AAED,QAAA,MAAM,UAAW,GAAE,QAAQ,CAAC,MAAM;AAChC,YAAA,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AAAE,gBAAA,OAAO,EAAG,CAAA;AAAA,aAAA;AAErC,YAAA,IAAI,OAAO,KAAK,CAAC,iBAAiB,QAAQ,EAAE;gBAC1C,OAAO,KAAK,CAAC,YAAW,CAAA;AAC1B,aAAA;AAEA,YAAA,OAAO,mBAAmB,CAAC,KAAI,GAAI,KAAK,CAAC,YAAY,CAAC,KAAI,GAAI,KAAK,CAAC,YAAY,CAAC,IAAG,CAAA;AACtF,SAAC,CAAA,CAAA;;AAID,QAAA,MAAM,eAAgB,GAAE,QAAQ,CAAC,MAAM;AACrC,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAAE,gBAAA,OAAO,EAAG,CAAA;AAAA,aAAA;YAEhC,IAAI,KAAK,CAAC,YAAY,EAAE;AACtB,gBAAA,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAA,CAAA;AACxE,aAAA;YAEA,OAAO,KAAK,CAAC,OAAM,CAAA;AACrB,SAAC,CAAA,CAAA;AAED,QAAA,MAAM,wBAAwB,CAAC,MAAoB,KAAK;AACtD,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;AAAE,gBAAA,OAAO,KAAM,CAAA;AAAA,aAAA;YAEzC,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACtC,OAAO,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA,CAAA;AACpF,aAAA;YAEA,OAAO,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAA,CAAA;AACnD,SAAA,CAAA;AAEA,QAAA,MAAM,cAAa,GAAI,CAAC,OAAqB,EAAE,OAAqB,KAAK;AACvE,YAAA,MAAM,GAAE,GAAI,QAAQ,CAAC,OAAO,CAAA,CAAA;AAC5B,YAAA,MAAM,GAAE,GAAI,QAAQ,CAAC,OAAO,CAAA,CAAA;;YAG5B,IAAI,GAAE,KAAM,GAAG,EAAE;AACf,gBAAA,OAAO,IAAG,CAAA;AACZ,aAAA;YACA,IAAI,OAAO,QAAQ,QAAO,IAAK,OAAO,GAAI,KAAI,QAAQ,EAAE;gBACtD,OAAO,GAAE,KAAM,GAAE,CAAA;AACnB,aAAA;AACA,YAAA,IAAI,GAAE,KAAM,IAAG,IAAK,GAAE,KAAM,IAAI,EAAE;AAChC,gBAAA,OAAO,KAAI,CAAA;AACb,aAAA;YACA,IAAI,OAAO,QAAQ,QAAO,IAAK,OAAO,GAAI,KAAI,QAAQ,EAAE;gBACtD,OAAO,UAAU,CAAC,GAAG,CAAA,KAAM,UAAU,CAAC,GAAG,CAAA,CAAA;AAC3C,aAAA;AAEA,YAAA,OAAO,KAAI,CAAA;AACb,SAAA,CAAA;AAEA,QAAA,MAAM,oBAAqB,GAAE,CAAC,CAAqC,KAA+B,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAA,CAAA;AAEvH,QAAA,MAAM,YAAW,GAAI,CAAC,MAAoB,KAAK;AAC7C,YAAA,IAAI,aAAa,CAAC,KAAM,KAAI,IAAI,EAAE;AAChC,gBAAA,YAAY,EAAC,CAAA;gBACb,OAAK;AACP,aAAA;YAEA,IAAI,eAAe,CAAC,KAAK,EAAE;AACzB,gBAAA,WAAW,CAAC,KAAI,GAAI,EAAC,CAAA;AACvB,aAAA;YAEA,IAAI,KAAK,CAAC,QAAS,IAAG,oBAAoB,CAAC,aAAa,CAAC,EAAE;AACzD,gBAAA,MAAM,EAAE,oBAAoB,EAAE,SAAQ,KAAM,gBAAgB,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,IAAI,CAAA,CAAA;gBAE1G,MAAM,UAAW,GAAE,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA,CAAA;AAEzD,gBAAA,IAAI,UAAU,EAAE;;AAEd,oBAAA,aAAa,CAAC,KAAM,GAAE,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAA,CAAA;AAChI,iBAAA;AAAK,qBAAA;oBACL,IAAI,oBAAoB,EAAE,EAAE;wBAAE,OAAO;AAAA,qBAAA;AACrC,oBAAA,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA,CAAA;AAC5B,iBAAA;AACA,aAAA;AAAK,iBAAA;gBACL,aAAa,CAAC,QAAQ,OAAO,MAAK,KAAM,QAAO,IAAK,OAAO,WAAW,WAAW,MAAO,GAAE,EAAE,GAAG,MAAO,EAAA,CAAA;AACtG,gBAAA,YAAY,EAAC,CAAA;AACf,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,YAAW,GAAI,MAAM;;;YAEzB,MAAM,cAAe,GAAE,CAAA,EAAA,GAAA,KAAK,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,CAAC,MAAoB,KAAK,OAAO,CAAC,MAAM,MAAM,WAAW,CAAC,KAAK,CAAA,CAAA;YAE1G,IAAI,EAAE,KAAK,CAAC,WAAY,KAAI,QAAS,IAAG,cAAc,CAAC,EAAE;AACvD,gBAAA,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC,KAAK,CAAA,CAAA;AACpC,gBAAA,WAAW,CAAC,KAAI,GAAI,EAAC,CAAA;AACvB,aAAA;AACF,SAAA,CAAA;;AAIA,QAAA,MAAM,gBAAgB,GAAG,CAAsB,IAAI,CAAA,CAAA;QAEnD,MAAM,mBAAkB,GAAI,MAAM;AAChC,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBAAE,OAAO;AAAA,aAAA;AAEnC,YAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;;AAE9B,gBAAA,YAAY,EAAC,CAAA;gBACb,OAAK;AACP,aAAA;AAEA,YAAA,YAAY,CAAC,aAAa,CAAC,KAAK,CAAA,CAAA;AAClC,SAAA,CAAA;QAEA,MAAM,iBAAgB,GAAI,MAAM;AAC9B,YAAA,MAAM,eAAgB,GAAE,CAAC,CAAC,KAAK,CAAC,WAAY,IAAG,WAAW,CAAC,KAAI,KAAM,EAAC,CAAA;AAEtE,YAAA,IAAI,aAAa,CAAC,KAAM,KAAI,IAAI,EAAE;AAChC,gBAAA,mBAAmB,EAAC,CAAA;AACpB,aAAA;AAAK,iBAAA,IAAI,eAAe,EAAE;AAC1B,gBAAA,YAAY,EAAC,CAAA;AACf,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,mBAAkB,GAAI,MAAM;;AAChC,YAAA,CAAA,EAAA,GAAA,UAAU,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,mBAAmB,EAAC,CAAA;AACxC,SAAA,CAAA;QAEA,MAAM,kBAAkB,MAAM;;AAC5B,YAAA,CAAA,EAAA,GAAA,UAAU,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAe,EAAC,CAAA;AACpC,SAAA,CAAA;;AAIA,QAAA,MAAM,sBAAsB,GAAG,CAAC,KAAK,CAAA,CAAA;QAErC,MAAM,2BAA0B,GAAI,QAAQ,CAAC;AAC3C,YAAA,GAAG,EAAE,MAAM,mBAAmB,CAAC,KAAK;AACpC,YAAA,GAAG,EAAE,CAAC,IAAa,KAAK;gBACtB,IAAK,GAAE,YAAY,EAAG,GAAE,YAAY,EAAC,CAAA;aACtC;AACF,SAAA,CAAA,CAAA;AAED,QAAA,MAAM,mBAAkB,GAAI,QAAQ,CAAC,MAAM;AACzC,YAAA,OAAO,EAAE,KAAK,CAAC,QAAS,IAAG,KAAK,CAAC,UAAS,IAAK,KAAK,CAAC,WAAW,CAAA,CAAA;AAClE,SAAC,CAAA,CAAA;QAED,MAAM,YAAW,GAAI,MAAM;AACzB,YAAA,IAAI,KAAK,CAAC,QAAO,IAAK,KAAK,CAAC,QAAQ,EAAE;gBAAE,OAAO;AAAA,aAAA;AAE/C,YAAA,mBAAmB,CAAC,KAAM,GAAE,IAAG,CAAA;AAC/B,YAAA,gBAAgB,EAAC,CAAA;AACjB,YAAA,oBAAoB,EAAC,CAAA;AACvB,SAAA,CAAA;QAEA,MAAM,YAAW,GAAI,MAAM;AACzB,YAAA,mBAAmB,CAAC,KAAI,GAAI,KAAI,CAAA;AAChC,YAAA,WAAW,CAAC,KAAI,GAAI,EAAC,CAAA;AACrB,YAAA,QAAQ,EAAC,CAAA;AACX,SAAA,CAAA;QAEA,MAAM,iBAAiB,MAAM;YAC3B,IAAI,mBAAmB,CAAC,KAAK,EAAE;AAC7B,gBAAA,YAAY,EAAC,CAAA;AACb,aAAA;AAAK,iBAAA;AACL,gBAAA,YAAY,EAAC,CAAA;AACf,aAAA;AACF,SAAA,CAAA;QAEA,MAAM,gBAAgB,MAAM;AAC1B,YAAA,IAAI,KAAK,CAAC,QAAO,IAAK,KAAK,CAAC,QAAQ,EAAE;gBAAE,OAAO;AAAA,aAAA;AAC/C,YAAA,cAAc,EAAC,CAAA;AACjB,SAAA,CAAA;QAEA,MAAM,YAAW,GAAI,MAAM;AACzB,YAAA,YAAY,EAAC,CAAA;AACb,YAAA,cAAc,CAAC,KAAM,GAAE,IAAG,CAAA;AAC5B,SAAA,CAAA;QAEA,MAAM,iBAAiB,MAAM;;AAC3B,YAAA,CAAA,EAAA,GAAA,SAAS,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAC,CAAA;AACzB,SAAA,CAAA;QAEA,MAAM,kBAAkB,MAAM;;AAC5B,YAAA,CAAA,EAAA,GAAA,UAAU,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAC,CAAA;AACxB,YAAA,CAAC,KAAK,CAAC,UAAW,KAAG,CAAA,EAAA,GAAA,UAAU,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,gBAAgB,EAAC,CAAA,CAAA;AAC1D,SAAA,CAAA;QAEA,MAAM,oBAAqB,GAAE,MAAM,QAAQ,CAAC,MAAM;YAChD,IAAI,eAAe,CAAC,KAAK,EAAE;AACzB,gBAAA,cAAc,EAAC,CAAA;AACf,aAAA;AAAK,iBAAA;AACL,gBAAA,eAAe,EAAC,CAAA;AAClB,aAAA;AACF,SAAC,CAAA,CAAA;QAED,MAAM,YAAW,GAAI,MAAM;AACzB,YAAA,cAAc,CAAC,KAAM,GAAE,IAAG,CAAA;AAC1B,YAAA,OAAO,EAAC,CAAA;AACV,SAAA,CAAA;QAEA,MAAM,WAAU,GAAI,MAAM;YACxB,IAAI,2BAA2B,CAAC,KAAK,EAAE;gBAAE,OAAO;AAAA,aAAA;AAEhD,YAAA,MAAM,EAAC,CAAA;AAEP,YAAA,cAAc,CAAC,KAAI;AACjB,kBAAE,cAAc,CAAC,QAAQ,KAAI;kBAC3B,QAAQ,EAAC,CAAA;AACf,SAAA,CAAA;;QAGA,MAAM,KAAM,GAAE,MAAM;;YAClB,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAAE,OAAO;AAAA,aAAA;AAC7B,YAAA,CAAA,EAAA,GAAA,KAAK,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAC,CAAA;AACrB,SAAA,CAAA;;QAGA,MAAM,IAAG,GAAI,MAAM;;YACjB,IAAI,2BAA2B,CAAC,KAAK,EAAE;AACrC,gBAAA,2BAA2B,CAAC,KAAM,GAAE,KAAI,CAAA;AAC1C,aAAA;YAEA,QAAQ,CAAC,MAAA,KAAK,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,CAAA;AAC5B,SAAA,CAAA;;QAGA,MAAM,KAAM,GAAE,MAAM;YAClB,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,aAAa,CAAC,KAAI,GAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAS,GAAI,EAAC,CAAA;AAC5E,aAAA;AAAK,iBAAA;AACL,gBAAA,aAAa,CAAC,KAAI,GAAI,KAAK,CAAC,UAAS,CAAA;AACvC,aAAA;AAEA,YAAA,WAAW,CAAC,KAAI,GAAI,EAAC,CAAA;YACrB,IAAI,CAAC,OAAO,CAAA,CAAA;AACd,SAAA,CAAA;QAEA,MAAM,gBAAiB,GAAE,QAAQ,CAAC,MAAM,KAAK,CAAC,QAAS,GAAE,CAAC,CAAA,GAAI,KAAK,CAAC,QAAQ,CAAA,CAAA;QAE5E,MAAM,mBAAmB,MAAM;AAC7B,YAAA,MAAM,QAAO,GAAI,aAAa,CAAC,KAAI,CAAA;AACnC,YAAA,MAAM,eAAgB,GAAE,OAAO,QAAO,KAAM,QAAO,IAAK,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAA,IAAK,CAAC,QAAQ,CAAC,MAAK,CAAA;AAElG,YAAA,IAAI,eAAe,EAAE;gBAAE,OAAO;AAAA,aAAA;YAE9B,MAAM,QAAS,GAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAE,GAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAE,GAAE,QAAO,CAAA;AAClF,YAAA,aAAa,CAAC,KAAM,GAAE,QAAO,CAAA;AAC7B,YAAA,QAAQ,CAAC,MAAM,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,MAAA,UAAU,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,QAAQ,CAAC,CAAA,EAAA,CAAA,CAAA;AAC3D,SAAA,CAAA;;QAIA,IAAI,iBAAgB,GAAI,EAAC,CAAA;AACzB,QAAA,IAAI,6BAA4D,CAAA;AAChE,QAAA,MAAM,cAAa,GAAI,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,CAAA,CAAA;;AAGvF,QAAA,MAAM,iBAAiB,CAAC,KAAoB,KAAK;AAC/C,YAAA,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,GAAE,KAAM,KAAK,CAAC,GAAG,CAAC,EAAE;gBACjD,OAAK;AACP,aAAA;YAEA,MAAM,QAAQ,GAAY,KAAK,CAAC,GAAG,CAAC,MAAO,KAAI,CAAA,CAAA;AAC/C,YAAA,MAAM,WAAW,GAAY,KAAK,CAAC,GAAE,KAAM,WAAY,IAAG,KAAK,CAAC,QAAQ,QAAO,CAAA;YAE/E,YAAY,CAAC,6BAA6B,CAAA,CAAA;AAE1C,YAAA,IAAI,WAAW,EAAE;;AAEf,gBAAA,iBAAkB,GAAE,iBAAgB,GAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAI,EAAC,CAAA;AAC5E,aAAA;AAAO,iBAAA,IAAI,QAAQ,EAAE;;AAEnB,gBAAA,iBAAkB,IAAG,KAAK,CAAC,GAAE,CAAA;AAC/B,aAAA;YAEA,IAAI,eAAe,CAAC,KAAK,EAAE;AACzB,gBAAA,WAAW,CAAC,KAAI,GAAI,iBAAgB,CAAA;gBACpC,OAAK;AACP,aAAA;;AAGA,YAAA,IAAI,iBAAiB,EAAE;AACrB,gBAAA,MAAM,iBAAgB,GAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAO,IAAG,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAA,CAAA;AAChI,gBAAA,IAAI,iBAAiB,EAAE;AACrB,oBAAA,aAAa,CAAC,KAAM,GAAE,iBAAgB,CAAA;AACxC,iBAAA;AACF,aAAA;AAEA,YAAA,gCAAgC,UAAU,CAAC,MAAQ,EAAA,iBAAgB,GAAI,KAAI,EAAE,IAAI,CAAA,CAAA;AACnF,SAAA,CAAA;QAEA,OAAO;YACL,SAAS;YAET,KAAK;YACL,UAAU;YACV,SAAS;YAET,KAAK;YACL,KAAK;YACL,IAAI;YAEJ,YAAY;YACZ,WAAW;YACX,eAAe;YACf,aAAa;YACb,cAAc;YACd,WAAW;YACX,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,aAAa;YACb,mBAAmB;YACnB,aAAa;YACb,UAAU;YACV,qBAAqB;YACrB,aAAa;YACb,eAAe;YACf,qBAAqB;YACrB,mBAAmB;YACnB,YAAY;YACZ,iBAAiB;YACjB,mBAAmB;YACnB,mBAAmB;YACnB,eAAe;YACf,2BAA2B;YAC3B,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,cAAc;YACd,eAAe;YACf,cAAc;YACd,OAAO;YACP,UAAU;YACV,UAAU;YACV,cAAc;YACd,cAAc;YACd,aAAa;SACf,CAAA;KACD;AACF,CAAA,CAAA;;;;AC3lBW,EAAA,KAAK,EAAC,wBAAuB;;AA2C9B,MAAA,UAAA,GAAA,EAAA,KAAK,EAAC,qCAAqC,GAAA;;;;;;;;;;uBAxIpDJ,WAiKa,CAAA,sBAAA,EAAA;AAhKX,IAAA,GAAG,EAAC,UAAS;AACb,IAAA,KAAK,EAAC,wCAAuC;AAC7C,IAAA,OAAO,EAAC,MAAK;AACb,IAAA,cAAc,EAAC,0BAAyB;IACvC,SAAS,EAAE,IAAM,CAAA,MAAA,CAAC,SAAS;IAC3B,QAAQ,EAAE,IAAM,CAAA,MAAA,CAAC,QAAQ;IACzB,YAAU,EAAE,IAAM,CAAA,MAAA,CAAC,SAAS;IAC5B,KAAK,EAAE,IAAM,CAAA,MAAA,CAAC,KAAK;AACnB,IAAA,wBAAsB,EAAE,IAAmB,CAAA,mBAAA;AAC3C,IAAA,QAAQ,EAAE,KAAK;AACf,IAAA,MAAM,EAAE,CAAM,CAAA,EAAA,CAAA,CAAA;AACf,IAAA,mBAAgB,EAAhB,EAAgB;gBACP,IAA2B,CAAA,2BAAA;iEAA3B,IAA2B,CAAA,2BAAA,IAAA,MAAA,CAAA,CAAA;IACnC,SAAO,EAAA;6BAAkB,IAAY,CAAA,YAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA;6BACV,IAAY,CAAA,YAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA;6BACX,IAAY,CAAA,YAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;6BACZ,IAAY,CAAA,YAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACxC,IAAA,OAAK,gBAAU,IAAa,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA;;AAElB,IAAA,MAAM,UACf,MAwFkB;MAxFlBE,WAwFkB,CAAA,2BAAA,EAAA;AAvFhB,QAAA,GAAG,EAAC,OAAM;AACV,QAAA,KAAK,EAAC,WAAU;AAChB,QAAA,YAAU,EAAC,iBAAgB;AAC1B,QAAA,aAAW,EAAE,IAAmB,CAAA,mBAAA;QAChC,OAAO,EAAE,IAAM,CAAA,MAAA,CAAC,OAAO;AACvB,QAAA,KAAK,EAAE,IAAa,CAAA,aAAA;QACpB,KAAK,EAAE,IAAM,CAAA,MAAA,CAAC,KAAK;QACnB,KAAK,EAAE,IAAM,CAAA,MAAA,CAAC,KAAK;QACnB,OAAO,EAAE,IAAM,CAAA,MAAA,CAAC,OAAO;QACvB,QAAQ,EAAE,IAAM,CAAA,MAAA,CAAC,QAAQ;QACzB,OAAO,EAAE,IAAM,CAAA,MAAA,CAAC,OAAO;QACvB,QAAQ,EAAE,IAAM,CAAA,MAAA,CAAC,QAAQ;QACzB,eAAa,EAAE,IAAM,CAAA,MAAA,CAAC,YAAY;QAClC,QAAQ,EAAE,IAAM,CAAA,MAAA,CAAC,QAAQ;AACzB,QAAA,gBAAc,EAAE,IAAqB,CAAA,qBAAA;AACrC,QAAA,OAAO,EAAE,IAAS,CAAA,SAAA;AAClB,QAAA,QAAQ,EAAE,IAAgB,CAAA,gBAAA;AAC1B,QAAA,OAAK,EAAE,IAAY,CAAA,YAAA;AACnB,QAAA,MAAI,EAAE,IAAW,CAAA,WAAA;;AAuBP,QAAA,IAAI,UACb,MAUC;WATO,IAAa,CAAA,aAAA;AADrB,eAAAT,SAAA,EAAA,EAAAO,WAAA,CAUC,oBAVDK,UAUC,CAAA;;AARC,gBAAA,IAAI,EAAC,QAAO;AACZ,gBAAA,aAAW,EAAC,OAAM;AAClB,gBAAA,YAAU,EAAC,OAAM;AACjB,gBAAA,QAAQ,EAAC,GAAE;iBACH,IAAc,CAAA,cAAA,EAAA;AACrB,gBAAA,OAAK,gBAAO,IAAK,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,CAAA;gBACjB,SAAO,EAAA;yCAAa,IAAK,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;yCACL,IAAK,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;;;;AAInB,QAAA,WAAW,UACpB,MAGC;AAFO,UAAA,CAAA,IAAA,CAAA,MAAM,CAAC,WAAW;cAD1BC,UAGC,CAAA,IAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,CAAA;;UACDJ,WAGC,CAAA,kBAAA,EAAA;AAFE,YAAA,KAAK,EAAE,IAAe,CAAA,eAAA;AACtB,YAAA,IAAI,EAAE,IAAU,CAAA,UAAA;;;AAKlB,QAAA,OAAM,UAEP,MAKM;WAJE,IAAa,CAAA,aAAA;AADrB,eAAAT,SAAA,EAAA,EAAAD,kBAAA,CAKM,MALN,EAAA,UAKM,EADDK,eAAA,CAAA,IAAA,CAAA,MAAM,CAAC;cAEZS,UAUM,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA,EAAAC,cAAA,CAAAF,UAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA;2BAPI,IAAA,CAAA,mBAAA;qBAAA,IAAA,CAAA,aAAA;wBAAA,IAAA,CAAA,gBAAA;iBAHV,MAUM;gDADD;;;;;AA/DC,QAAA,CAAA,IAAA,CAAA,MAAM,CAAC,OAAO;;oBACnB,SAAM;0BAEP,MAAsB;gBAAtBC,UAAsB,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA,CAAA;;;;AAIhB,QAAA,CAAA,IAAA,CAAA,MAAM,CAAC,MAAM;;oBAClB,QAAK;0BAEN,MAAqB;gBAArBA,UAAqB,CAAA,IAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;;;AAIf,QAAA,CAAA,IAAA,CAAA,MAAM,CAAC,YAAY;;oBACxB,cAAW;0BAEZ,MAA2B;gBAA3BA,UAA2B,CAAA,IAAA,CAAA,MAAA,EAAA,cAAA,CAAA;;;;;;qBAqDjC,MA+CqB;MA/CrBJ,WA+CqB,CAAA,8BAAA,EAAA;AA9CnB,QAAA,KAAK,EAAC,6BAA4B;QACjC,KAAK,EAAAH,cAAA,CAAA,EAAA,KAAA,EAAW,IAAM,CAAA,MAAA,CAAC,KAAI,EAAA,CAAA;AAC3B,QAAA,OAAK,yDAAmB,SAAS,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;QACjC,SAAO,EAAA;iEAAyB,SAAS,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;iCACpB,IAAY,CAAA,YAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA;;;yBAElC,MAeC;WAdO,IAAe,CAAA,eAAA;4BADvBC,WAeC,CAAA,mBAAA,EAAA;;AAbC,gBAAA,GAAG,EAAC,WAAU;AACd,gBAAA,KAAK,EAAC,kBAAiB;AACvB,gBAAA,WAAW,EAAC,QAAO;AACnB,gBAAA,YAAU,EAAC,gBAAe;AACzB,gBAAA,QAAQ,EAAE,IAAgB,CAAA,gBAAA;AAC1B,gBAAA,QAAQ,EAAE,IAAI;4BACN,IAAW,CAAA,WAAA;6EAAX,IAAW,CAAA,WAAA,IAAA,MAAA,CAAA,CAAA;gBACnB,SAAO,EAAA;yCAAkB,IAAmB,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA;yCACjB,IAAmB,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA;yCACnB,IAAe,CAAA,eAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA;yCACd,IAAe,CAAA,eAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;yCACpB,IAAiB,CAAA,iBAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACxC,gBAAA,OAAK,uCAAE;;;AAEV,UAAAC,kBAAA,CAuBK,OAvBL,UAuBK,EAAA;YAtBHC,WAqBC,CAAA,gCAAA,EAAA;AApBC,cAAA,GAAG,EAAC,YAAW;AACP,cAAA,aAAa,EAAE,IAAa,CAAA,aAAA;8EAAb,IAAa,CAAA,aAAA,IAAA,MAAA,CAAA,CAAA;cACnC,KAAK,EAAAH,cAAA,CAAA,EAAA,SAAA,EAAe,IAAM,CAAA,MAAA,CAAC;AAC3B,cAAA,OAAO,EAAE,IAAe,CAAA,eAAA;AACxB,cAAA,gBAAc,EAAE,IAAa,CAAA,aAAA;AAC7B,cAAA,oBAAkB,EAAE,IAAqB,CAAA,qBAAA;AACzC,cAAA,UAAQ,EAAE,IAAO,CAAA,OAAA;AACjB,cAAA,cAAY,EAAE,IAAU,CAAA,UAAA;AACxB,cAAA,cAAY,EAAE,IAAU,CAAA,UAAA;AACxB,cAAA,MAAM,EAAE,IAAW,CAAA,WAAA;cACnB,iBAAe,EAAE,IAAM,CAAA,MAAA,CAAC,aAAa;cACrC,KAAK,EAAE,IAAM,CAAA,MAAA,CAAC,KAAK;AACnB,cAAA,QAAQ,EAAE,IAAgB,CAAA,gBAAA;AAC1B,cAAA,cAAa,EAAE,IAAY,CAAA,YAAA;AAC3B,cAAA,yBAA2B,EAAE,IAAc,CAAA,cAAA;cAC3C,SAAO,EAAA;uCAAqB,IAAmB,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;uCACnB,IAAmB,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA;4EACrB,IAAU,CAAA,SAAA,IAAG,IAAS,CAAA,SAAA,CAAC,KAAK,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;gBAC7C,IAAc,CAAA,cAAA;;AACvB,cAAA,cAAa,EAAE,IAAc,CAAA,cAAA;;;;;;;;;;;;;;MCzJ3B,QAAQ,GAAG,mBAAmB,CAACS,MAAS;;;;"}