{"version":3,"file":"index20.js","sources":["../../src/components/va-color-palette/VaColorPalette.vue","../../src/components/va-color-palette/VaColorPalette.vue?vue&type=template&id=07dc5043&lang.js","../../src/components/va-color-palette/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-color-palette\">\n    <ul\n      class=\"va-color-palette__colors\"\n      role=\"listbox\"\n      aria-label=\"color selection\"\n    >\n      <va-color-indicator\n        v-for=\"(color, index) in palette\"\n        :key=\"index\"\n        role=\"option\"\n        :aria-label=\"`color ${color}`\"\n        :aria-selected=\"isSelected(color)\"\n        tabindex=\"0\"\n        :modelValue=\"isSelected(color)\"\n        :color=\"color\"\n        :square=\"indicator === 'square'\"\n        @update:modelValue=\"valueComputed = color\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  padding-top: 3px;\n\n  &__colors {\n    display: flex;\n\n    & > * {\n      margin-right: 0.25rem;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-color-palette\">\n    <ul\n      class=\"va-color-palette__colors\"\n      role=\"listbox\"\n      aria-label=\"color selection\"\n    >\n      <va-color-indicator\n        v-for=\"(color, index) in palette\"\n        :key=\"index\"\n        role=\"option\"\n        :aria-label=\"`color ${color}`\"\n        :aria-selected=\"isSelected(color)\"\n        tabindex=\"0\"\n        :modelValue=\"isSelected(color)\"\n        :color=\"color\"\n        :square=\"indicator === 'square'\"\n        @update:modelValue=\"valueComputed = color\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  padding-top: 3px;\n\n  &__colors {\n    display: flex;\n\n    & > * {\n      margin-right: 0.25rem;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaColorPalette from './VaColorPalette.vue'\n\nexport const VaColorPalette = withConfigTransport(_VaColorPalette)\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_Fragment","_renderList","_createBlock","_VaColorPalette"],"mappings":";;;;;;;;;;;;;;AA8BA,aAAe,eAAe,CAAC;AAC7B,IAAA,IAAI,EAAE,gBAAgB;IACtB,UAAU,EAAE,EAAE,gBAAe,EAAG;AAChC,IAAA,KAAK,EAAE,gBAAgB;AACvB,IAAA,KAAK,EAAE;AACL,QAAA,GAAG,gBAAgB;QACnB,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;AAC3C,QAAA,OAAO,EAAE,EAAE,IAAI,EAAE,KAA2B,EAAE,OAAO,EAAE,MAAM,EAAC,EAAG;AACjE,QAAA,SAAS,EAAE;AACT,YAAA,IAAI,EAAE,MAAoC;AAC1C,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,SAAS,EAAE,CAAC,KAAa,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;AAChE,SAAA;AACF,KAAA;AACD,IAAA,KAAM,CAAC,KAAK,EAAE,EAAE,IAAG,EAAG,EAAA;QACpB,MAAM,EAAE,eAAgB,GAAE,WAAW,CAAC,KAAK,EAAE,IAAI,CAAA,CAAA;QAEjD,OAAO;YACL,aAAa;YACb,UAAU,EAAE,CAAC,KAAa,KAAK,aAAa,CAAC,KAAI,KAAM,KAAK;SAC9D,CAAA;KACD;AACF,CAAA,CAAA;;ACnDM,MAAA,UAAA,GAAA,EAAA,KAAK,EAAC,kBAAkB,GAAA;;AAEzB,EAAA,KAAK,EAAC,0BAAyB;AAC/B,EAAA,IAAI,EAAC,SAAQ;AACb,EAAA,YAAU,EAAC,iBAAgB;;;;;;AAJ/B,EAAA,QAAAA,SAAA,EAAA,EAAAC,kBAAA,CAmBK,OAnBL,UAmBK,EAAA;AAlBH,IAAAC,kBAAA,CAiBI,MAjBJ,UAiBI,EAAA;AAZF,OAAAF,SAAA,CAAA,IAAA,CAAA,EAAAC,kBAAA,CAWCE,QAV0B,EAAA,IAAA,EAAAC,UAAA,CAAA,IAAA,CAAA,OAAO,EAAxB,CAAA,KAAK,EAAE,KAAK,KAAA;6BADtBC,WAWC,CAAA,6BAAA,EAAA;AATE,UAAA,GAAG,EAAE,KAAK;AACX,UAAA,IAAI,EAAC,QAAO;AACX,UAAA,YAAU,WAAW,KAAK,CAAA,CAAA;UAC1B,eAAa,EAAE,IAAU,CAAA,UAAA,CAAC,KAAK,CAAA;AAChC,UAAA,QAAQ,EAAC,GAAE;UACV,UAAU,EAAE,IAAU,CAAA,UAAA,CAAC,KAAK,CAAA;AAC5B,UAAA,KAAK,EAAE,KAAK;AACZ,UAAA,MAAM,EAAE,IAAQ,CAAA,SAAA,KAAA,QAAA;UAChB,qBAAiB,EAAA,MAAA,KAAE,IAAc,CAAA,aAAA,GAAE,KAAK,CAAA;;;;;;;;;;MCdpC,cAAc,GAAG,mBAAmB,CAACC,MAAe;;;;"}