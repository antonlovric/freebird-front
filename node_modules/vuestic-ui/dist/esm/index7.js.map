{"version":3,"file":"index7.js","sources":["../../src/components/va-badge/VaBadge.vue","../../src/components/va-badge/VaBadge.vue?vue&type=template&id=7751249a&lang.js","../../src/components/va-badge/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-badge\"\n    role=\"alert\"\n    :class=\"badgeClass\"\n  >\n    <span\n      class=\"va-badge__text-wrapper\"\n      :style=\"badgeStyle\"\n    >\n      <span class=\"va-badge__text\">\n        <slot name=\"text\">\n          {{ text }}\n        </slot>\n      </span>\n    </span>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors, useTextColor } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaBadge',\n  props: {\n    color: { type: String, default: 'danger' },\n    textColor: { type: String },\n    text: { type: [String, Number], default: '' },\n    overlap: { type: Boolean, default: false },\n    multiLine: { type: Boolean, default: false },\n    visibleEmpty: { type: Boolean, default: false },\n    dot: { type: Boolean, default: false },\n    transparent: { type: Boolean, default: false },\n    left: { type: Boolean, default: false },\n    bottom: { type: Boolean, default: false },\n  },\n  setup (props, { slots }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text))\n\n    const isFloating = computed(() => slots.default || props.dot)\n\n    const badgeClass = computed(() => ({\n      'va-badge--visible-empty': props.visibleEmpty,\n      'va-badge--empty': isEmpty.value,\n      'va-badge--dot': props.dot,\n      'va-badge--multiLine': props.multiLine,\n      'va-badge--floating': isFloating.value,\n      'va-badge--left': props.left,\n      'va-badge--bottom': props.bottom,\n      'va-badge--overlap': props.overlap,\n    }))\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor()\n    const colorComputed = computed(() => getColor(props.color))\n    const badgeStyle = computed(() => ({\n      color: textColorComputed.value,\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1,\n    }))\n\n    return { badgeClass, badgeStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-badge {\n  display: inline-flex;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__text-wrapper {\n    transition: var(--va-badge-text-wrapper-transition, var(--va-transition));\n    display: var(--va-badge-text-wrapper-display);\n    border: var(--va-badge-text-wrapper-border, var(--va-control-border));\n    border-radius: var(--va-badge-text-wrapper-border-radius);\n    font-weight: var(--va-badge-text-wrapper-font-weight);\n    line-height: var(--va-badge-text-wrapper-line-height);\n    letter-spacing: var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));\n    justify-content: var(--va-badge-text-wrapper-justify-content);\n    white-space: var(--va-badge-text-wrapper-white-space);\n    width: var(--va-badge-text-wrapper-width);\n    height: var(--va-badge-text-wrapper-height);\n    min-width: var(--va-badge-text-wrapper-min-width);\n    min-height: var(--va-badge-text-wrapper-min-height);\n    margin: var(--va-badge-text-wrapper-margin);\n\n    .va-badge--visible-empty & {\n      min-width: var(--va-badge-size);\n      min-height: var(--va-badge-size);\n    }\n\n    .va-badge--dot & {\n      min-width: var(--va-badge-dot-size);\n      min-height: var(--va-badge-dot-size);\n      border-width: 0;\n      border-radius: 100%;\n      padding: 0;\n    }\n\n    .va-badge--empty & {\n      width: 0;\n      height: 0;\n      min-width: 0;\n      min-height: 0;\n      border-width: 0;\n    }\n\n    .va-badge--multiLine & {\n      white-space: normal;\n    }\n\n    .va-badge--floating & {\n      position: absolute;\n      z-index: 2;\n      top: 0;\n      left: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      margin-right: 0;\n      transform: translateY(-25%);\n    }\n\n    .va-badge--left & {\n      left: 0;\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-25%);\n    }\n\n    .va-badge--bottom & {\n      top: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--bottom & {\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--bottom.va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      transform: translateX(0) translateY(-75%);\n    }\n\n    .va-badge--bottom.va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-75%);\n    }\n  }\n\n  &__text {\n    margin: var(--va-badge-margin);\n    text-transform: var(--va-badge-text-transform);\n    overflow: hidden;\n    min-width: calc(var(--va-badge-font-size) * var(--va-badge-line-height));\n    padding: var(--va-badge-text-py) var(--va-badge-text-px);\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    text-overflow: clip;\n    white-space: nowrap;\n    font-size: var(--va-badge-font-size);\n\n    .va-badge--multiLine & {\n      overflow: auto;\n      max-height: initial;\n      text-align: initial;\n      text-overflow: initial;\n      white-space: normal;\n    }\n\n    .va-badge--dot & {\n      display: none;\n    }\n\n    .va-badge--floating & {\n      align-items: center;\n      padding: var(--va-badge-py) 0.15rem;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-badge\"\n    role=\"alert\"\n    :class=\"badgeClass\"\n  >\n    <span\n      class=\"va-badge__text-wrapper\"\n      :style=\"badgeStyle\"\n    >\n      <span class=\"va-badge__text\">\n        <slot name=\"text\">\n          {{ text }}\n        </slot>\n      </span>\n    </span>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors, useTextColor } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaBadge',\n  props: {\n    color: { type: String, default: 'danger' },\n    textColor: { type: String },\n    text: { type: [String, Number], default: '' },\n    overlap: { type: Boolean, default: false },\n    multiLine: { type: Boolean, default: false },\n    visibleEmpty: { type: Boolean, default: false },\n    dot: { type: Boolean, default: false },\n    transparent: { type: Boolean, default: false },\n    left: { type: Boolean, default: false },\n    bottom: { type: Boolean, default: false },\n  },\n  setup (props, { slots }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text))\n\n    const isFloating = computed(() => slots.default || props.dot)\n\n    const badgeClass = computed(() => ({\n      'va-badge--visible-empty': props.visibleEmpty,\n      'va-badge--empty': isEmpty.value,\n      'va-badge--dot': props.dot,\n      'va-badge--multiLine': props.multiLine,\n      'va-badge--floating': isFloating.value,\n      'va-badge--left': props.left,\n      'va-badge--bottom': props.bottom,\n      'va-badge--overlap': props.overlap,\n    }))\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor()\n    const colorComputed = computed(() => getColor(props.color))\n    const badgeStyle = computed(() => ({\n      color: textColorComputed.value,\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1,\n    }))\n\n    return { badgeClass, badgeStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-badge {\n  display: inline-flex;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__text-wrapper {\n    transition: var(--va-badge-text-wrapper-transition, var(--va-transition));\n    display: var(--va-badge-text-wrapper-display);\n    border: var(--va-badge-text-wrapper-border, var(--va-control-border));\n    border-radius: var(--va-badge-text-wrapper-border-radius);\n    font-weight: var(--va-badge-text-wrapper-font-weight);\n    line-height: var(--va-badge-text-wrapper-line-height);\n    letter-spacing: var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));\n    justify-content: var(--va-badge-text-wrapper-justify-content);\n    white-space: var(--va-badge-text-wrapper-white-space);\n    width: var(--va-badge-text-wrapper-width);\n    height: var(--va-badge-text-wrapper-height);\n    min-width: var(--va-badge-text-wrapper-min-width);\n    min-height: var(--va-badge-text-wrapper-min-height);\n    margin: var(--va-badge-text-wrapper-margin);\n\n    .va-badge--visible-empty & {\n      min-width: var(--va-badge-size);\n      min-height: var(--va-badge-size);\n    }\n\n    .va-badge--dot & {\n      min-width: var(--va-badge-dot-size);\n      min-height: var(--va-badge-dot-size);\n      border-width: 0;\n      border-radius: 100%;\n      padding: 0;\n    }\n\n    .va-badge--empty & {\n      width: 0;\n      height: 0;\n      min-width: 0;\n      min-height: 0;\n      border-width: 0;\n    }\n\n    .va-badge--multiLine & {\n      white-space: normal;\n    }\n\n    .va-badge--floating & {\n      position: absolute;\n      z-index: 2;\n      top: 0;\n      left: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      margin-right: 0;\n      transform: translateY(-25%);\n    }\n\n    .va-badge--left & {\n      left: 0;\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-25%);\n    }\n\n    .va-badge--bottom & {\n      top: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--bottom & {\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--bottom.va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      transform: translateX(0) translateY(-75%);\n    }\n\n    .va-badge--bottom.va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-75%);\n    }\n  }\n\n  &__text {\n    margin: var(--va-badge-margin);\n    text-transform: var(--va-badge-text-transform);\n    overflow: hidden;\n    min-width: calc(var(--va-badge-font-size) * var(--va-badge-line-height));\n    padding: var(--va-badge-text-py) var(--va-badge-text-px);\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    text-overflow: clip;\n    white-space: nowrap;\n    font-size: var(--va-badge-font-size);\n\n    .va-badge--multiLine & {\n      overflow: auto;\n      max-height: initial;\n      text-align: initial;\n      text-overflow: initial;\n      white-space: normal;\n    }\n\n    .va-badge--dot & {\n      display: none;\n    }\n\n    .va-badge--floating & {\n      align-items: center;\n      padding: var(--va-badge-py) 0.15rem;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaBadge from './VaBadge.vue'\n\nexport const VaBadge = withConfigTransport(_VaBadge)\n"],"names":["_createElementBlock","_normalizeClass","_createElementVNode","_renderSlot","_VaBadge"],"mappings":"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"}