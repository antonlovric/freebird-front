{"version":3,"file":"useForm.js","sources":["../../src/composables/useForm.ts"],"sourcesContent":["import { computed, ExtractPropTypes } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useBem } from './useBem'\n\nexport const useFormProps = {\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useFormPropsWithId = {\n  ...useFormProps,\n  id: { type: [String, Number], default: undefined },\n  name: { type: [String, Number], default: undefined },\n}\n\n/**\n * @description creates `readonly` and `disabled` BEM modifiers.\n * @param prefix string that classes start with (base BEM class).\n * @param props component props.\n * @returns computed classes object starting with `prefix` and ending with form state BEM modifier.\n */\nexport const useForm = <Prefix extends string = ''>(\n  prefix: Prefix,\n  props: ExtractPropTypes<typeof useFormProps>,\n) => {\n  const computedClasses = useBem<'disabled' | 'readonly', Prefix>(prefix, computed(() => pick(props, ['disabled', 'readonly'])))\n  return { computedClasses }\n}\n"],"names":["pick"],"mappings":";;;;AAKa,MAAA,YAAY,GAAG;IAC1B,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC3C,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;EAC5C;AAQD;;;;;AAKG;MACU,OAAO,GAAG,CACrB,MAAc,EACd,KAA4C,KAC1C;IACF,MAAM,eAAe,GAAG,MAAM,CAAkC,MAAM,EAAE,QAAQ,CAAC,MAAMA,MAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;IAC9H,OAAO,EAAE,eAAe,EAAE,CAAA;AAC5B;;;;"}