import { w as withConfigTransport } from './withConfigTransport.js';
import { defineComponent, openBlock, createElementBlock, renderSlot } from 'vue';
import './global-config.js';
import './usePopover.js';
import './global-utils.js';
import 'colortranslator';
import { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from './useStateful.js';
import { u as useAccordion } from './useAccordion.js';
import './VaConfig.js';
import './global-properties.js';
import './isSymbol.js';
import './ssr-utils.js';

var script = defineComponent({
    name: 'VaAccordion',
    emits: useStatefulEmits,
    props: {
        ...useStatefulProps,
        modelValue: { type: Array, default: () => [] },
        multiply: { type: Boolean, default: false },
        inset: { type: Boolean, default: false },
        popout: { type: Boolean, default: false },
    },
    setup(props, { emit }) {
        const { valueComputed } = useStateful(props, emit, []);
        const { items } = useAccordion(props, valueComputed);
        return { collapses: items, value: valueComputed };
    },
});

const _hoisted_1 = { class: "va-accordion" };

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("div", _hoisted_1, [
    renderSlot(_ctx.$slots, "default")
  ]))
}

script.render = render;
script.__file = "src/components/va-accordion/VaAccordion.vue";

const VaAccordion = withConfigTransport(script);

export { VaAccordion };
//# sourceMappingURL=index.js.map
