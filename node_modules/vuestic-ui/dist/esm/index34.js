import { w as withConfigTransport } from './withConfigTransport.js';
import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, renderSlot, createVNode, createCommentVNode } from 'vue';
import './global-config.js';
import './usePopover.js';
import './global-utils.js';
import { u as useColors } from './useColors.js';
import { u as useLoadingProps } from './useLoading.js';
import { VaIcon } from './index31.js';
import './VaConfig.js';
import './global-properties.js';
import './isSymbol.js';
import './ssr-utils.js';
import 'colortranslator';
import './VaIcon.js';
import './useSize.js';

var script = defineComponent({
    name: 'VaInnerLoading',
    components: { VaIcon },
    props: {
        ...useLoadingProps,
        color: { type: String },
        icon: { type: String, default: 'autorenew' },
        size: { type: Number, default: 30 },
    },
    setup(props) {
        const { getColor } = useColors();
        const colorComputed = computed(() => getColor(props.color));
        return { colorComputed };
    },
});

const _hoisted_1 = { class: "inner-loading" };
const _hoisted_2 = {
  key: 0,
  class: "inner-loading__overlay",
  "aria-hidden": "true"
};

function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");

  return (openBlock(), createElementBlock("div", _hoisted_1, [
    renderSlot(_ctx.$slots, "default"),
    (_ctx.$props.loading)
      ? (openBlock(), createElementBlock("div", _hoisted_2, [
          createVNode(_component_va_icon, {
            class: "inner-loading__spinner",
            spin: "",
            color: _ctx.colorComputed,
            size: _ctx.$props.size,
            name: _ctx.$props.icon
          }, null, 8 /* PROPS */, ["color", "size", "name"])
        ]))
      : createCommentVNode("v-if", true)
  ]))
}

script.render = render;
script.__file = "src/components/va-inner-loading/VaInnerLoading.vue";

const VaInnerLoading = withConfigTransport(script);

export { VaInnerLoading };
//# sourceMappingURL=index34.js.map
