{"version":3,"file":"index29.js","sources":["../../src/components/va-form/VaForm.vue","../../src/components/va-form/VaForm.vue?vue&type=template&id=848ce870&lang.js","../../src/components/va-form/index.ts"],"sourcesContent":["<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, Ref, onMounted, onUnmounted, nextTick, provide, inject } from 'vue'\n\nimport { FormServiceKey, FormChild, Form } from './consts'\n\nconst isVaForm = (value: any): value is Form => !!value.focusInvalid\n\nexport default defineComponent({\n  name: 'VaForm',\n  emits: ['validation'],\n  props: {\n    autofocus: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n  },\n\n  setup (props, { emit }) {\n    const nestedFormElements: Ref<(FormChild | Form)[]> = ref([])\n\n    const parentFormProvider = () => inject(FormServiceKey, undefined)\n\n    provide(FormServiceKey, {\n      onChildMounted: (child: FormChild | Form) => childMountedHandler(child),\n      onChildUnmounted: (removableChild: FormChild | Form) => childUnmountedHandler(removableChild),\n    })\n\n    const childMountedHandler = (child: FormChild | Form) => {\n      nestedFormElements.value.push(child)\n    }\n\n    const childUnmountedHandler = (removableChild: FormChild | Form) => {\n      nestedFormElements.value = nestedFormElements.value.filter(child => child !== removableChild)\n    }\n\n    /** @public */\n    const reset = () => {\n      nestedFormElements.value\n        .filter(({ reset }) => reset)\n        .forEach((item) => { item.reset() })\n    }\n\n    const resetValidation = () => {\n      nestedFormElements.value\n        .filter(({ resetValidation }) => resetValidation)\n        .forEach((item: any) => { item.resetValidation() })\n    }\n\n    const focus = () => { nestedFormElements.value.find(({ focus }) => focus)?.focus() }\n\n    const focusInvalid = () => {\n      const invalidComponent = nestedFormElements.value\n        .find((item) => !isVaForm(item) && item.hasError())\n\n      if (invalidComponent) {\n        invalidComponent.focus()\n      } else {\n        nestedFormElements.value\n          .forEach(item => isVaForm(item) && item.focusInvalid())\n      }\n    }\n\n    // validation for every nested child\n    const validate = () => { // NOTE: temporarily synchronous validation\n      const formValid = nestedFormElements.value\n        .filter(({ validate }) => validate)\n        .map((child) => child.validate()) // more readable than with 'forEach'\n        .every((isValid) => isValid)\n\n      emit('validation', formValid)\n\n      return formValid\n    }\n\n    const publicMethods: Form = {\n      reset,\n      resetValidation,\n      focus,\n      focusInvalid,\n      validate,\n    }\n\n    onMounted(() => {\n      parentFormProvider()?.onChildMounted?.(publicMethods)\n\n      if (props.autofocus) { nextTick(focus) }\n    })\n\n    onUnmounted(() => {\n      parentFormProvider()?.onChildUnmounted?.(publicMethods)\n    })\n\n    return publicMethods\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, Ref, onMounted, onUnmounted, nextTick, provide, inject } from 'vue'\n\nimport { FormServiceKey, FormChild, Form } from './consts'\n\nconst isVaForm = (value: any): value is Form => !!value.focusInvalid\n\nexport default defineComponent({\n  name: 'VaForm',\n  emits: ['validation'],\n  props: {\n    autofocus: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n  },\n\n  setup (props, { emit }) {\n    const nestedFormElements: Ref<(FormChild | Form)[]> = ref([])\n\n    const parentFormProvider = () => inject(FormServiceKey, undefined)\n\n    provide(FormServiceKey, {\n      onChildMounted: (child: FormChild | Form) => childMountedHandler(child),\n      onChildUnmounted: (removableChild: FormChild | Form) => childUnmountedHandler(removableChild),\n    })\n\n    const childMountedHandler = (child: FormChild | Form) => {\n      nestedFormElements.value.push(child)\n    }\n\n    const childUnmountedHandler = (removableChild: FormChild | Form) => {\n      nestedFormElements.value = nestedFormElements.value.filter(child => child !== removableChild)\n    }\n\n    /** @public */\n    const reset = () => {\n      nestedFormElements.value\n        .filter(({ reset }) => reset)\n        .forEach((item) => { item.reset() })\n    }\n\n    const resetValidation = () => {\n      nestedFormElements.value\n        .filter(({ resetValidation }) => resetValidation)\n        .forEach((item: any) => { item.resetValidation() })\n    }\n\n    const focus = () => { nestedFormElements.value.find(({ focus }) => focus)?.focus() }\n\n    const focusInvalid = () => {\n      const invalidComponent = nestedFormElements.value\n        .find((item) => !isVaForm(item) && item.hasError())\n\n      if (invalidComponent) {\n        invalidComponent.focus()\n      } else {\n        nestedFormElements.value\n          .forEach(item => isVaForm(item) && item.focusInvalid())\n      }\n    }\n\n    // validation for every nested child\n    const validate = () => { // NOTE: temporarily synchronous validation\n      const formValid = nestedFormElements.value\n        .filter(({ validate }) => validate)\n        .map((child) => child.validate()) // more readable than with 'forEach'\n        .every((isValid) => isValid)\n\n      emit('validation', formValid)\n\n      return formValid\n    }\n\n    const publicMethods: Form = {\n      reset,\n      resetValidation,\n      focus,\n      focusInvalid,\n      validate,\n    }\n\n    onMounted(() => {\n      parentFormProvider()?.onChildMounted?.(publicMethods)\n\n      if (props.autofocus) { nextTick(focus) }\n    })\n\n    onUnmounted(() => {\n      parentFormProvider()?.onChildUnmounted?.(publicMethods)\n    })\n\n    return publicMethods\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaForm from './VaForm.vue'\n\nexport const VaForm = withConfigTransport(_VaForm)\n"],"names":["_openBlock","_createBlock","_resolveDynamicComponent","_renderSlot","_VaForm"],"mappings":"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"}