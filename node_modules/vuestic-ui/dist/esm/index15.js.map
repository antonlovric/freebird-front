{"version":3,"file":"index15.js","sources":["../../src/components/va-checkbox/VaCheckbox.vue","../../src/components/va-checkbox/VaCheckbox.vue?vue&type=template&id=828af530&lang.js","../../src/components/va-checkbox/index.ts"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      ref=\"container\"\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      @blur=\"onBlur\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          class=\"va-checkbox__input\"\n          :id=\"computedId\"\n          :indeterminate=\"indeterminate\"\n          :value=\"label\"\n          :checked=\"isActive\"\n          v-bind=\"inputAttributesComputed\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n        >\n        <va-icon\n          v-show=\"isActive\"\n          class=\"va-checkbox__icon\"\n          size=\"20px\"\n          :name=\"computedIconName\"\n          :color=\"textColorComputed\"\n        />\n      </div>\n      <label\n        v-if=\"label || $slots.label\"\n        ref=\"label\"\n        class=\"va-checkbox__label\"\n        :for=\"computedId\"\n        :style=\"labelStyle\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </label>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, shallowRef } from 'vue'\n\nimport { generateUniqueId } from '../../services/utils'\nimport {\n  useKeyboardOnlyFocus,\n  useColors, useTextColor,\n  useSelectable, useSelectableProps, useSelectableEmits, Elements,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaIcon } from '../va-icon/'\n\nconst VaCheckboxValueType = [Boolean, Array, String, Object] as PropType<boolean | null | string | number | Record<any, unknown> | unknown[]>\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: VaCheckboxValueType, default: false },\n    color: { type: String, default: 'primary' },\n    checkedIcon: { type: String, default: 'check' },\n    indeterminate: { type: Boolean, default: false },\n    indeterminateValue: { type: VaCheckboxValueType, default: null },\n    indeterminateIcon: { type: String, default: 'remove' },\n    id: { type: String, default: '' },\n    name: { type: String, default: '' },\n    ariaLabel: { type: String, default: undefined },\n  },\n  setup (props, { emit }) {\n    const elements: Elements = {\n      container: shallowRef<HTMLElement>(),\n      input: shallowRef<HTMLElement>(),\n      label: shallowRef<HTMLElement>(),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { textColorComputed } = useTextColor()\n\n    const isActive = computed(() => isChecked.value || isIndeterminate.value)\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const style = {\n        background: isActive.value ? getColor(props.color) : '',\n        borderColor: isActive.value ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    const uniqueId = computed(generateUniqueId)\n    const computedId = computed(() => props.id || uniqueId.value)\n    const computedName = computed(() => props.name || uniqueId.value)\n    const inputAttributesComputed = computed(() => ({\n      name: computedName.value,\n      disabled: props.disabled,\n      readonly: props.readonly,\n      tabindex: props.disabled ? -1 : 0,\n      ariaLabel: props.ariaLabel,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ariaChecked: isActive.value,\n      'aria-invalid': !!computedErrorMessages.value.length,\n      'aria-errormessage': typeof computedErrorMessages.value === 'string'\n        ? computedErrorMessages.value\n        : computedErrorMessages.value.join(', '),\n    }))\n\n    return {\n      isActive,\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      textColorComputed,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n      inputAttributesComputed,\n      computedId,\n      computedName,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    @include visually-hidden;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      ref=\"container\"\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      @blur=\"onBlur\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          class=\"va-checkbox__input\"\n          :id=\"computedId\"\n          :indeterminate=\"indeterminate\"\n          :value=\"label\"\n          :checked=\"isActive\"\n          v-bind=\"inputAttributesComputed\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n        >\n        <va-icon\n          v-show=\"isActive\"\n          class=\"va-checkbox__icon\"\n          size=\"20px\"\n          :name=\"computedIconName\"\n          :color=\"textColorComputed\"\n        />\n      </div>\n      <label\n        v-if=\"label || $slots.label\"\n        ref=\"label\"\n        class=\"va-checkbox__label\"\n        :for=\"computedId\"\n        :style=\"labelStyle\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </label>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, shallowRef } from 'vue'\n\nimport { generateUniqueId } from '../../services/utils'\nimport {\n  useKeyboardOnlyFocus,\n  useColors, useTextColor,\n  useSelectable, useSelectableProps, useSelectableEmits, Elements,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaIcon } from '../va-icon/'\n\nconst VaCheckboxValueType = [Boolean, Array, String, Object] as PropType<boolean | null | string | number | Record<any, unknown> | unknown[]>\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: VaCheckboxValueType, default: false },\n    color: { type: String, default: 'primary' },\n    checkedIcon: { type: String, default: 'check' },\n    indeterminate: { type: Boolean, default: false },\n    indeterminateValue: { type: VaCheckboxValueType, default: null },\n    indeterminateIcon: { type: String, default: 'remove' },\n    id: { type: String, default: '' },\n    name: { type: String, default: '' },\n    ariaLabel: { type: String, default: undefined },\n  },\n  setup (props, { emit }) {\n    const elements: Elements = {\n      container: shallowRef<HTMLElement>(),\n      input: shallowRef<HTMLElement>(),\n      label: shallowRef<HTMLElement>(),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { textColorComputed } = useTextColor()\n\n    const isActive = computed(() => isChecked.value || isIndeterminate.value)\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const style = {\n        background: isActive.value ? getColor(props.color) : '',\n        borderColor: isActive.value ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    const uniqueId = computed(generateUniqueId)\n    const computedId = computed(() => props.id || uniqueId.value)\n    const computedName = computed(() => props.name || uniqueId.value)\n    const inputAttributesComputed = computed(() => ({\n      name: computedName.value,\n      disabled: props.disabled,\n      readonly: props.readonly,\n      tabindex: props.disabled ? -1 : 0,\n      ariaLabel: props.ariaLabel,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ariaChecked: isActive.value,\n      'aria-invalid': !!computedErrorMessages.value.length,\n      'aria-errormessage': typeof computedErrorMessages.value === 'string'\n        ? computedErrorMessages.value\n        : computedErrorMessages.value.join(', '),\n    }))\n\n    return {\n      isActive,\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      textColorComputed,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n      inputAttributesComputed,\n      computedId,\n      computedName,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    @include visually-hidden;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaCheckbox from './VaCheckbox.vue'\n\nexport const VaCheckbox = withConfigTransport(_VaCheckbox)\n"],"names":["VaMessageListWrapper","_createBlock","_normalizeClass","_createElementVNode","_mergeProps","_toHandlers","_createVNode","_createElementBlock","_renderSlot","_VaCheckbox"],"mappings":"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"}