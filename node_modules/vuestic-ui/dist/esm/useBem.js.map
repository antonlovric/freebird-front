{"version":3,"file":"useBem.js","sources":["../../../../node_modules/lodash/kebabCase.js","../../src/composables/useBem.ts"],"sourcesContent":["var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import { computed, Ref, unref, ComputedRef } from 'vue'\n\nimport isFunction from 'lodash/isFunction.js'\nimport kebab from 'lodash/kebabCase.js'\n\nimport { __DEV__ } from '../utils/global-utils'\n\ntype Key<Prefix extends string, ModifierKey extends string> = `${Prefix}--${ModifierKey | string}`\n\ntype ClassesObject<Key extends string> = Record<Key, boolean>\n\ntype ComputedClasses<Key extends string> = ClassesObject<Key> & {\n  // TODO: How to remove it from spread?\n  readonly asObject: ComputedRef<ClassesObject<Key>>\n  readonly asArray: ComputedRef<Key[]>\n  readonly asString: ComputedRef<string>\n}\n\n/**\n * @description creates BEM modifiers based on transferred prefix (base BEM class) & modifiers list.\n * camelCase modifiers names will be transformed to the kebab-case.\n * @param prefix string that classes start with (base BEM class).\n * @param modifiers list of options that will serve as state BEM modifiers.\n * @returns computed classes starting with \"prefix\" and ending with form state BEM modifier.\n * @example\n *  const result = useBem('va-component', computed(() => pick(props, ['success, noError'])))\n *  // if success & noError are `true`\n *  { ...result }: { 'va-component--success': true, va-component--no-error: true }\n *  result.asObject.value: { 'va-component--success': true, va-component--no-error: true }\n *  result.asArray.value: ['va-component--success', 'va-component--no-error']\n *  result.asString.value: 'va-component--success va-component--no-error'\n */\nexport const useBem = <ModifierKey extends string, Prefix extends string>(\n  prefix: Prefix,\n  modifiers: Record<ModifierKey, boolean> | Ref<Record<ModifierKey, boolean>> | (() => Record<ModifierKey, boolean>),\n) => {\n  if (__DEV__ && !prefix) {\n    console.warn('You must pass the @param \"prefix\" to the useBem hook!')\n  }\n\n  const modifiersList = computed(() => isFunction(modifiers) ? modifiers() : unref(modifiers))\n\n  const computedBemClassesObject = computed(() => {\n    return Object\n      .entries(unref(modifiersList))\n      .reduce((classesObj: Record<string, boolean>, [modifierName, value]) => {\n        if (value) { classesObj[`${prefix}--${kebab(modifierName)}`] = true }\n        return classesObj\n      }, {})\n  })\n\n  const computedBemClassesArray = computed(() => Object.keys(computedBemClassesObject.value))\n\n  const computedBemClassesString = computed(() => computedBemClassesArray.value.join(' '))\n\n  return new Proxy({}, {\n    ownKeys () {\n      return Reflect.ownKeys(computedBemClassesObject.value)\n    },\n    getOwnPropertyDescriptor (_, key) {\n      return Reflect.getOwnPropertyDescriptor(computedBemClassesObject.value, key)\n    },\n    get (_, key: string, receiver: any) {\n      switch (key) {\n        case 'asArray':\n          return computedBemClassesArray\n        case 'asString':\n          return computedBemClassesString\n        case 'asObject':\n          return computedBemClassesObject\n        default:\n          return Reflect.get(computedBemClassesObject.value, key, receiver)\n      }\n    },\n  }) as ComputedClasses<Key<Prefix, ModifierKey>>\n}\n"],"names":["require$$0","isFunction","kebab"],"mappings":";;;;;AAAA,IAAI,gBAAgB,GAAGA,iBAA8B,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,gBAAgB,CAAC,SAAS,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/D,EAAE,OAAO,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC1D,CAAC,CAAC,CAAC;AACH;AACA,IAAA,WAAc,GAAG;;ACTjB;;;;;;;;;;;;;AAaG;MACU,MAAM,GAAG,CACpB,MAAc,EACd,SAAkH,KAChH;AACF,IAAA,IAAI,OAAO,IAAI,CAAC,MAAM,EAAE;AACtB,QAAA,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAA;AACtE,KAAA;IAED,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAMC,YAAU,CAAC,SAAS,CAAC,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAA;AAE5F,IAAA,MAAM,wBAAwB,GAAG,QAAQ,CAAC,MAAK;AAC7C,QAAA,OAAO,MAAM;AACV,aAAA,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aAC7B,MAAM,CAAC,CAAC,UAAmC,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,KAAI;AACrE,YAAA,IAAI,KAAK,EAAE;AAAE,gBAAA,UAAU,CAAC,CAAA,EAAG,MAAM,CAAA,EAAA,EAAKC,WAAK,CAAC,YAAY,CAAC,CAAE,CAAA,CAAC,GAAG,IAAI,CAAA;AAAE,aAAA;AACrE,YAAA,OAAO,UAAU,CAAA;SAClB,EAAE,EAAE,CAAC,CAAA;AACV,KAAC,CAAC,CAAA;AAEF,IAAA,MAAM,uBAAuB,GAAG,QAAQ,CAAC,MAAM,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAA;AAE3F,IAAA,MAAM,wBAAwB,GAAG,QAAQ,CAAC,MAAM,uBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;AAExF,IAAA,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE;QACnB,OAAO,GAAA;YACL,OAAO,OAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAA;SACvD;QACD,wBAAwB,CAAE,CAAC,EAAE,GAAG,EAAA;YAC9B,OAAO,OAAO,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;SAC7E;AACD,QAAA,GAAG,CAAE,CAAC,EAAE,GAAW,EAAE,QAAa,EAAA;AAChC,YAAA,QAAQ,GAAG;AACT,gBAAA,KAAK,SAAS;AACZ,oBAAA,OAAO,uBAAuB,CAAA;AAChC,gBAAA,KAAK,UAAU;AACb,oBAAA,OAAO,wBAAwB,CAAA;AACjC,gBAAA,KAAK,UAAU;AACb,oBAAA,OAAO,wBAAwB,CAAA;AACjC,gBAAA;AACE,oBAAA,OAAO,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;AACpE,aAAA;SACF;AACF,KAAA,CAA8C,CAAA;AACjD;;;;"}