{"version":3,"file":"useSelectableList.js","sources":["../../src/composables/useSelectableList.ts"],"sourcesContent":["import { PropType, ExtractPropTypes } from 'vue'\n\nimport { getValueByKey } from '../services/utils'\n\nexport type SelectableOption = string | number | Record<string, any>\n\ntype StringOrFunction = string | ((option: SelectableOption) => unknown)\n\nexport const useSelectableListProps = {\n  options: { type: Array as PropType<SelectableOption[]>, default: () => [] },\n  textBy: { type: [String, Function] as PropType<StringOrFunction>, default: 'text' },\n  valueBy: { type: [String, Function] as PropType<StringOrFunction>, default: '' },\n  trackBy: { type: [String, Function] as PropType<StringOrFunction>, default: 'value' },\n  disabledBy: { type: [String, Function] as PropType<StringOrFunction>, default: 'disabled' },\n  groupBy: { type: [String, Function] as PropType<StringOrFunction>, default: 'group' },\n}\n\nexport function useSelectableList (props: ExtractPropTypes<typeof useSelectableListProps>) {\n  const isStringOrNumber = (option: SelectableOption): option is (string | number) => {\n    const typeOfOption = typeof option\n    return typeOfOption === 'string' || typeOfOption === 'number'\n  }\n\n  const getOptionProperty = (option: SelectableOption, selector: StringOrFunction) => {\n    return !selector || isStringOrNumber(option)\n      ? option\n      : getValueByKey(option, selector)\n  }\n\n  const getValue = (option: SelectableOption) => getOptionProperty(option, props.valueBy)\n\n  const getOptionByValue = (value: SelectableOption) => {\n    if (!props.valueBy) { return value }\n    return props.options.find((option: SelectableOption) => value === getValue(option)) || value\n  }\n\n  const getText = (option: SelectableOption) => getOptionProperty(option, props.textBy)\n  const getDisabled = (option: SelectableOption) => getValueByKey(option, props.disabledBy)\n  const getTrackBy = (option: SelectableOption) => getOptionProperty(option, props.trackBy)\n  const getGroupBy = (option: SelectableOption) => getOptionProperty(option, props.groupBy)\n\n  return {\n    getValue,\n    getOptionByValue,\n    getText,\n    getDisabled,\n    getTrackBy,\n    getGroupBy,\n  }\n}\n"],"names":[],"mappings":";;AAQa,MAAA,sBAAsB,GAAG;AACpC,IAAA,OAAO,EAAE,EAAE,IAAI,EAAE,KAAqC,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;AAC3E,IAAA,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAA+B,EAAE,OAAO,EAAE,MAAM,EAAE;AACnF,IAAA,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAA+B,EAAE,OAAO,EAAE,EAAE,EAAE;AAChF,IAAA,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAA+B,EAAE,OAAO,EAAE,OAAO,EAAE;AACrF,IAAA,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAA+B,EAAE,OAAO,EAAE,UAAU,EAAE;AAC3F,IAAA,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAA+B,EAAE,OAAO,EAAE,OAAO,EAAE;EACtF;AAEK,SAAU,iBAAiB,CAAE,KAAsD,EAAA;AACvF,IAAA,MAAM,gBAAgB,GAAG,CAAC,MAAwB,KAAiC;AACjF,QAAA,MAAM,YAAY,GAAG,OAAO,MAAM,CAAA;AAClC,QAAA,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,KAAK,QAAQ,CAAA;AAC/D,KAAC,CAAA;AAED,IAAA,MAAM,iBAAiB,GAAG,CAAC,MAAwB,EAAE,QAA0B,KAAI;AACjF,QAAA,OAAO,CAAC,QAAQ,IAAI,gBAAgB,CAAC,MAAM,CAAC;AAC1C,cAAE,MAAM;AACR,cAAE,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AACrC,KAAC,CAAA;AAED,IAAA,MAAM,QAAQ,GAAG,CAAC,MAAwB,KAAK,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;AAEvF,IAAA,MAAM,gBAAgB,GAAG,CAAC,KAAuB,KAAI;AACnD,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAAE,YAAA,OAAO,KAAK,CAAA;AAAE,SAAA;QACpC,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAwB,KAAK,KAAK,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAA;AAC9F,KAAC,CAAA;AAED,IAAA,MAAM,OAAO,GAAG,CAAC,MAAwB,KAAK,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;AACrF,IAAA,MAAM,WAAW,GAAG,CAAC,MAAwB,KAAK,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAA;AACzF,IAAA,MAAM,UAAU,GAAG,CAAC,MAAwB,KAAK,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;AACzF,IAAA,MAAM,UAAU,GAAG,CAAC,MAAwB,KAAK,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;IAEzF,OAAO;QACL,QAAQ;QACR,gBAAgB;QAChB,OAAO;QACP,WAAW;QACX,UAAU;QACV,UAAU;KACX,CAAA;AACH;;;;"}