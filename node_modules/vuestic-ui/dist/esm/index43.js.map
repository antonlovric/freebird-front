{"version":3,"file":"index43.js","sources":["../../src/components/va-progress-circle/VaProgressCircle.vue","../../src/components/va-progress-circle/VaProgressCircle.vue?vue&type=template&id=21fac549&lang.js","../../src/components/va-progress-circle/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useColors, useSize, useSizeProps } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color, undefined, true))\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: 'progressbar',\n        ariaLabel: 'progress state',\n        ariaValuenow: !props.indeterminate ? props.modelValue : undefined,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: var(--va-progress-circle-wrapper-position);\n    top: var(--va-progress-circle-wrapper-top);\n    left: var(--va-progress-circle-wrapper-left);\n    bottom: var(--va-progress-circle-wrapper-bottom);\n    right: var(--va-progress-circle-wrapper-right);\n    margin: var(--va-progress-circle-wrapper-margin);\n    transform: var(--va-progress-circle-wrapper-transform);\n    width: var(--va-progress-circle-wrapper-width);\n    height: var(--va-progress-circle-wrapper-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-info-font-size);\n    position: var(--va-progress-circle-info-position);\n    left: var(--va-progress-circle-info-left);\n    top: var(--va-progress-circle-info-top);\n    transform: var(--va-progress-circle-info-transform);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-progress-circle\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useColors, useSize, useSizeProps } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color, undefined, true))\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: 'progressbar',\n        ariaLabel: 'progress state',\n        ariaValuenow: !props.indeterminate ? props.modelValue : undefined,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: var(--va-progress-circle-wrapper-position);\n    top: var(--va-progress-circle-wrapper-top);\n    left: var(--va-progress-circle-wrapper-left);\n    bottom: var(--va-progress-circle-wrapper-bottom);\n    right: var(--va-progress-circle-wrapper-right);\n    margin: var(--va-progress-circle-wrapper-margin);\n    transform: var(--va-progress-circle-wrapper-transform);\n    width: var(--va-progress-circle-wrapper-width);\n    height: var(--va-progress-circle-wrapper-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-info-font-size);\n    position: var(--va-progress-circle-info-position);\n    left: var(--va-progress-circle-info-left);\n    top: var(--va-progress-circle-info-top);\n    transform: var(--va-progress-circle-info-transform);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaProgressCircle from './VaProgressCircle.vue'\n\nexport const VaProgressCircle = withConfigTransport(_VaProgressCircle)\n"],"names":["clamp","_openBlock","_createElementBlock","_mergeProps","_createElementVNode","_renderSlot","_VaProgressCircle"],"mappings":"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"}