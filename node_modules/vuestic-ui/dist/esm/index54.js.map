{"version":3,"file":"index54.js","sources":["../../src/components/va-tree-view/types/index.ts","../../src/components/va-tree-view/VaTreeView.vue","../../src/components/va-tree-view/VaTreeView.vue?vue&type=template&id=5f8eab4b&lang.js","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue?vue&type=template&id=55056222&lang.js","../../src/components/va-tree-view/VaTreeNode/index.ts","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue?vue&type=template&id=2cbaf102&lang.js","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue?vue&type=template&id=5e011da2&lang.js","../../src/components/va-tree-view/VaTreeCategory/index.ts","../../src/components/va-tree-view/index.ts"],"sourcesContent":["import { ComponentPublicInstance } from 'vue'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nexport const TreeViewKey = Symbol('TreeView')\nexport const TreeCategoryKey = Symbol('TreeCategory')\nexport const TreeNodeKey = Symbol('TreeNode')\n\nexport interface TreeNodeCommon<T> {\n  onChildMounted: (value: T) => void,\n  onChildUnmounted: (value: T) => void,\n}\n\nexport interface TreeCategoryProps {\n  label: string | number,\n  isOpen: boolean,\n  icon: string,\n  color: string,\n}\n\nexport interface TreeViewMethods<T> {\n  onChildMounted: (value: T) => void,\n  onChildUnmounted: (value: T) => void,\n}\n\nexport interface TreeCategory {\n  treeView: TreeViewMethods<TreeCategory>,\n  nodes: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>[],\n  isOpenCached: boolean | undefined,\n  collapse: () => void,\n  expand: () => void,\n  toggle: (e: MouseEvent) => void,\n  onChildMounted: (node: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>) => void,\n  onChildUnmounted: (removableNode: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>) => void,\n}\n\nexport type TreeNodeComponent = ComponentPublicInstance<TreeCategory | typeof VaTreeNode>\n\nexport interface ITreeNodeProps {\n  highlighted: boolean,\n  icon: string,\n  iconRight: string,\n  color: string,\n}\n\nexport interface TreeViewProps {\n  color: string\n}\n\nexport interface TreeView {\n  collapse: () => void,\n  expand: () => void,\n}\n\nexport interface TreeViewProvide extends TreeViewProps {\n  onChildMounted: (category: TreeCategory) => void\n  onChildUnmounted: (removableCategory: TreeCategory) => void\n}\n","<template>\n  <div class=\"va-tree-view\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, provide, ref } from 'vue'\nimport { useColors } from '../../composables'\nimport { TreeCategory, TreeViewKey, TreeViewProvide } from './types'\n\nexport default defineComponent({\n  name: 'VaTreeView',\n  props: {\n    color: {\n      type: String,\n      default: '',\n    },\n  },\n  setup: (props) => {\n    const categories = ref<TreeCategory[]>([])\n\n    const collapse = () => {\n      nextTick(() => {\n        categories.value.forEach((child: TreeCategory) => {\n          child.collapse()\n        })\n      })\n    }\n\n    const expand = () => {\n      nextTick(() => {\n        categories.value.forEach((child: TreeCategory) => {\n          child.expand()\n        })\n      })\n    }\n\n    const onChildMounted = (category: TreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: TreeCategory) => {\n      categories.value = categories.value.filter((category: TreeCategory) => category !== removableCategory)\n    }\n\n    const treeView: TreeViewProvide = {\n      color: props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide(TreeViewKey, treeView)\n\n    return {\n      collapse,\n      expand,\n      ...useColors(),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-view {\n  padding: var(--va-tree-view-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div class=\"va-tree-view\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, provide, ref } from 'vue'\nimport { useColors } from '../../composables'\nimport { TreeCategory, TreeViewKey, TreeViewProvide } from './types'\n\nexport default defineComponent({\n  name: 'VaTreeView',\n  props: {\n    color: {\n      type: String,\n      default: '',\n    },\n  },\n  setup: (props) => {\n    const categories = ref<TreeCategory[]>([])\n\n    const collapse = () => {\n      nextTick(() => {\n        categories.value.forEach((child: TreeCategory) => {\n          child.collapse()\n        })\n      })\n    }\n\n    const expand = () => {\n      nextTick(() => {\n        categories.value.forEach((child: TreeCategory) => {\n          child.expand()\n        })\n      })\n    }\n\n    const onChildMounted = (category: TreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: TreeCategory) => {\n      categories.value = categories.value.filter((category: TreeCategory) => category !== removableCategory)\n    }\n\n    const treeView: TreeViewProvide = {\n      color: props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide(TreeViewKey, treeView)\n\n    return {\n      collapse,\n      expand,\n      ...useColors(),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-view {\n  padding: var(--va-tree-view-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onBeforeUnmount, onMounted, provide } from 'vue'\nimport { useColors } from '../../../composables'\nimport { VaIcon } from '../../va-icon'\nimport { TreeNodeCommon, TreeCategoryKey, TreeNodeKey } from '../types'\n\nexport default defineComponent({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n  props: {\n    highlighted: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    iconRight: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const treeCategory: TreeNodeCommon<typeof TreeNodeKey> = inject(TreeCategoryKey, {\n      onChildMounted: (value: typeof TreeNodeKey) => undefined,\n      onChildUnmounted: (value: typeof TreeNodeKey) => undefined,\n    })\n\n    provide(TreeNodeKey, {\n      props: computed(() => props),\n    })\n\n    onMounted(() => treeCategory && treeCategory.onChildMounted(TreeNodeKey))\n    onBeforeUnmount(() => treeCategory && treeCategory.onChildUnmounted(TreeNodeKey))\n\n    return {\n      treeCategory,\n      getColor,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onBeforeUnmount, onMounted, provide } from 'vue'\nimport { useColors } from '../../../composables'\nimport { VaIcon } from '../../va-icon'\nimport { TreeNodeCommon, TreeCategoryKey, TreeNodeKey } from '../types'\n\nexport default defineComponent({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n  props: {\n    highlighted: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    iconRight: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const treeCategory: TreeNodeCommon<typeof TreeNodeKey> = inject(TreeCategoryKey, {\n      onChildMounted: (value: typeof TreeNodeKey) => undefined,\n      onChildUnmounted: (value: typeof TreeNodeKey) => undefined,\n    })\n\n    provide(TreeNodeKey, {\n      props: computed(() => props),\n    })\n\n    onMounted(() => treeCategory && treeCategory.onChildMounted(TreeNodeKey))\n    onBeforeUnmount(() => treeCategory && treeCategory.onChildUnmounted(TreeNodeKey))\n\n    return {\n      treeCategory,\n      getColor,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport _VaTreeNode from './VaTreeNode.vue'\n\nexport const VaTreeNode = withConfigTransport(_VaTreeNode)\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useColors } from '../../../composables'\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n  props: {\n    icon: {\n      type: String,\n      default: '',\n      required: true,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useColors } from '../../../composables'\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n  props: {\n    icon: {\n      type: String,\n      default: '',\n      required: true,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ComponentPublicInstance,\n  defineComponent,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  Ref,\n  watch,\n  computed,\n} from 'vue'\nimport SquareWithIcon from '../SquareWithIcon/SquareWithIcon.vue'\nimport VaIcon from '../../va-icon/VaIcon.vue'\nimport { useColors } from '../../../composables'\nimport { TreeCategory, TreeNodeCommon, TreeCategoryKey, TreeNodeComponent, TreeViewKey } from '../types'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nexport default defineComponent({\n  name: 'VaTreeCategory',\n  components: {\n    SquareWithIcon,\n    VaIcon,\n  },\n  props: {\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup: (props) => {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const nodes: Ref<TreeNodeComponent[]> = ref([])\n    const isOpenCached = ref<boolean | undefined>(false)\n\n    const onChildMounted = (node: TreeNodeComponent) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: TreeNodeComponent) => {\n      nodes.value = nodes.value.filter((node: TreeNodeComponent) => node !== removableNode)\n    }\n\n    const treeView: TreeNodeCommon<TreeCategory | typeof VaTreeNode> = inject(TreeViewKey, {\n      onChildMounted: (value: TreeCategory | typeof VaTreeNode) => undefined,\n      onChildUnmounted: (value: TreeCategory | typeof VaTreeNode) => undefined,\n    })\n\n    const collapse = () => {\n      isOpenCached.value = false\n\n      nextTick(() => {\n        nodes.value.forEach((child: ComponentPublicInstance) => {\n          if (child.$options.name === 'va-tree-category') {\n            (child as ComponentPublicInstance<TreeCategory>).collapse()\n          }\n        })\n      })\n    }\n\n    const expand = () => {\n      isOpenCached.value = true\n\n      nextTick(() => {\n        nodes.value.forEach((child: TreeNodeComponent) => {\n          child.expand?.()\n        })\n      })\n    }\n\n    const toggle = (e: MouseEvent) => {\n      if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n        isOpenCached.value = !isOpenCached.value\n      }\n    }\n\n    watch(\n      () => props.isOpen,\n      (isOpen) => {\n        isOpenCached.value = isOpen\n      },\n      { immediate: true })\n\n    const treeCategory: TreeCategory = {\n      treeView,\n      nodes: nodes.value,\n      isOpenCached: isOpenCached.value,\n      onChildMounted,\n      onChildUnmounted,\n      collapse,\n      expand,\n      toggle,\n    }\n\n    provide(TreeCategoryKey, treeCategory)\n    onMounted(() => treeView?.onChildMounted(treeCategory))\n    onBeforeUnmount(() => treeView?.onChildUnmounted(treeCategory))\n\n    return {\n      treeCategory,\n      treeView,\n      nodes,\n      isOpenCached,\n      collapse,\n      expand,\n      toggle,\n      getColor,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ComponentPublicInstance,\n  defineComponent,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  Ref,\n  watch,\n  computed,\n} from 'vue'\nimport SquareWithIcon from '../SquareWithIcon/SquareWithIcon.vue'\nimport VaIcon from '../../va-icon/VaIcon.vue'\nimport { useColors } from '../../../composables'\nimport { TreeCategory, TreeNodeCommon, TreeCategoryKey, TreeNodeComponent, TreeViewKey } from '../types'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nexport default defineComponent({\n  name: 'VaTreeCategory',\n  components: {\n    SquareWithIcon,\n    VaIcon,\n  },\n  props: {\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n  },\n  setup: (props) => {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const nodes: Ref<TreeNodeComponent[]> = ref([])\n    const isOpenCached = ref<boolean | undefined>(false)\n\n    const onChildMounted = (node: TreeNodeComponent) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: TreeNodeComponent) => {\n      nodes.value = nodes.value.filter((node: TreeNodeComponent) => node !== removableNode)\n    }\n\n    const treeView: TreeNodeCommon<TreeCategory | typeof VaTreeNode> = inject(TreeViewKey, {\n      onChildMounted: (value: TreeCategory | typeof VaTreeNode) => undefined,\n      onChildUnmounted: (value: TreeCategory | typeof VaTreeNode) => undefined,\n    })\n\n    const collapse = () => {\n      isOpenCached.value = false\n\n      nextTick(() => {\n        nodes.value.forEach((child: ComponentPublicInstance) => {\n          if (child.$options.name === 'va-tree-category') {\n            (child as ComponentPublicInstance<TreeCategory>).collapse()\n          }\n        })\n      })\n    }\n\n    const expand = () => {\n      isOpenCached.value = true\n\n      nextTick(() => {\n        nodes.value.forEach((child: TreeNodeComponent) => {\n          child.expand?.()\n        })\n      })\n    }\n\n    const toggle = (e: MouseEvent) => {\n      if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n        isOpenCached.value = !isOpenCached.value\n      }\n    }\n\n    watch(\n      () => props.isOpen,\n      (isOpen) => {\n        isOpenCached.value = isOpen\n      },\n      { immediate: true })\n\n    const treeCategory: TreeCategory = {\n      treeView,\n      nodes: nodes.value,\n      isOpenCached: isOpenCached.value,\n      onChildMounted,\n      onChildUnmounted,\n      collapse,\n      expand,\n      toggle,\n    }\n\n    provide(TreeCategoryKey, treeCategory)\n    onMounted(() => treeView?.onChildMounted(treeCategory))\n    onBeforeUnmount(() => treeView?.onChildUnmounted(treeCategory))\n\n    return {\n      treeCategory,\n      treeView,\n      nodes,\n      isOpenCached,\n      collapse,\n      expand,\n      toggle,\n      getColor,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport _VaTreeCategory from './VaTreeCategory.vue'\n\nexport const VaTreeCategory = withConfigTransport(_VaTreeCategory)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaTreeView from './VaTreeView.vue'\n\nexport const VaTreeView = withConfigTransport(_VaTreeView)\n\nexport { VaTreeNode } from './VaTreeNode'\nexport { VaTreeCategory } from './VaTreeCategory'\n"],"names":["_hoisted_1","_openBlock","_createElementBlock","_renderSlot","_hoisted_3","_normalizeClass","_hoisted_2","_createVNode","_createElementVNode","_hoisted_4","_VaTreeNode","SquareWithIcon","VaIcon","_toDisplayString","_VaTreeCategory","_VaTreeView"],"mappings":"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"}