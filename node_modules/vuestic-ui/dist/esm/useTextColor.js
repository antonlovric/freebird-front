import { getCurrentInstance, computed, unref } from 'vue';
import { u as useColors } from './useColors.js';

/**
 * @param componentColor component color. By default `props.color`.
 * @param isTransparent if transparent will return component color as text color.
 * @returns Computed text color based on component's color if `props.textColor` if provided.
 */
const useTextColor = (componentColor, isTransparent = false) => {
    const { props } = getCurrentInstance();
    const { getColor, getTextColor } = useColors();
    const textColorComputed = computed(() => {
        if (props.textColor) {
            return getColor(props.textColor);
        }
        const componentColorHex = getColor(unref(componentColor) || props.color);
        return unref(isTransparent) ? componentColorHex : getColor(getTextColor(componentColorHex));
    });
    return { textColorComputed };
};

export { useTextColor as u };
//# sourceMappingURL=useTextColor.js.map
