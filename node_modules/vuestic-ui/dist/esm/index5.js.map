{"version":3,"file":"index5.js","sources":["../../src/components/va-avatar/VaAvatar.vue","../../src/components/va-avatar/VaAvatar.vue?vue&type=template&id=98de6a30&lang.js","../../src/components/va-avatar/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-avatar\"\n    :style=\"computedStyle\"\n    :aria-hidden=\"!$props.src\"\n    aria-live=\"polite\"\n  >\n    <slot>\n      <va-progress-circle\n        v-if=\"$props.loading\"\n        :size=\"sizeComputed\"\n        :color=\"colorComputed\"\n        indeterminate\n      />\n      <img\n        v-else-if=\"$props.src\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n      >\n      <va-icon\n        v-else-if=\"$props.icon\"\n        :name=\"$props.icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors, useTextColor, useSize, useSizeProps, useLoadingProps } from '../../composables'\n\nimport { VaIcon } from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaAvatar',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useLoadingProps,\n    ...useSizeProps,\n    color: { type: String, default: 'info' },\n    textColor: { type: String, default: 'white' },\n    square: { type: Boolean, default: false },\n    icon: { type: String, default: '' },\n    src: { type: String, default: null },\n    alt: { type: String, default: '' },\n    fontSize: { type: String, default: '' },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => ({\n      color: textColorComputed.value,\n      backgroundColor: props.loading ? 'transparent' : colorComputed.value,\n      borderRadius: props.square ? 0 : '',\n      fontSize: props.fontSize || fontSizeComputed.value,\n      width: sizeComputed.value,\n      minWidth: sizeComputed.value, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n      height: sizeComputed.value,\n    }))\n\n    return {\n      sizeComputed,\n      computedStyle,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-avatar\"\n    :style=\"computedStyle\"\n    :aria-hidden=\"!$props.src\"\n    aria-live=\"polite\"\n  >\n    <slot>\n      <va-progress-circle\n        v-if=\"$props.loading\"\n        :size=\"sizeComputed\"\n        :color=\"colorComputed\"\n        indeterminate\n      />\n      <img\n        v-else-if=\"$props.src\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n      >\n      <va-icon\n        v-else-if=\"$props.icon\"\n        :name=\"$props.icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors, useTextColor, useSize, useSizeProps, useLoadingProps } from '../../composables'\n\nimport { VaIcon } from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaAvatar',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useLoadingProps,\n    ...useSizeProps,\n    color: { type: String, default: 'info' },\n    textColor: { type: String, default: 'white' },\n    square: { type: Boolean, default: false },\n    icon: { type: String, default: '' },\n    src: { type: String, default: null },\n    alt: { type: String, default: '' },\n    fontSize: { type: String, default: '' },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => ({\n      color: textColorComputed.value,\n      backgroundColor: props.loading ? 'transparent' : colorComputed.value,\n      borderRadius: props.square ? 0 : '',\n      fontSize: props.fontSize || fontSizeComputed.value,\n      width: sizeComputed.value,\n      minWidth: sizeComputed.value, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n      height: sizeComputed.value,\n    }))\n\n    return {\n      sizeComputed,\n      computedStyle,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaAvatar from './VaAvatar.vue'\n\nexport const VaAvatar = withConfigTransport(_VaAvatar)\n"],"names":["_createElementBlock","_renderSlot","_createBlock","_VaAvatar"],"mappings":"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"}