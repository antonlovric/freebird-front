import { Ref } from 'vue';
import { DataTableColumnInternal, DataTableRow, DataTableItem, DataTableSortingOrder } from '../types';
interface useSortableProps {
    sortBy: string | undefined;
    sortingOrder: DataTableSortingOrder | undefined;
}
export declare type TSortedArgs = {
    sortBy: string;
    sortingOrder: DataTableSortingOrder;
    items: DataTableItem[];
    itemsIndexes: number[];
};
export declare type TSortableEmits = (event: 'update:sortBy' | 'update:sortingOrder' | 'sorted', args: string | DataTableSortingOrder | TSortedArgs) => void;
export default function useSortable(columns: Ref<DataTableColumnInternal[]>, filteredRows: Ref<DataTableRow[]>, props: useSortableProps, emit: TSortableEmits): {
    sortBySync: import("vue").WritableComputedRef<string>;
    sortingOrderSync: import("vue").WritableComputedRef<DataTableSortingOrder>;
    toggleSorting: (column: DataTableColumnInternal) => void;
    sortedRows: import("vue").ComputedRef<DataTableRow[]>;
};
export {};
