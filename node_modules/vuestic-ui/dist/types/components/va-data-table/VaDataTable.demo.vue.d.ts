import { DataTableColumn, DataTableSelectMode, DataTableSortingOrder } from './';
interface EvenItems {
    id?: number;
    name?: string;
    idSquared?: string;
    excessiveProp?: string;
    anotherExcessiveProp?: string;
}
declare const _default: import("vue").DefineComponent<{
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
} | {
    [x: string & `on${string}`]: ((...args: never) => any) | undefined;
}, {}, {
    evenColumns: string[];
    lackingColumns: string[];
    excessiveColumns: string[];
    evenItems: EvenItems[];
    lackingItems: EvenItems[];
    excessiveItems: EvenItems[];
    selectedItems: never[];
    selectedItem: never[];
    isTableLoading: boolean;
    alignColumns: DataTableColumn[];
    alignItems: {
        id: number;
        text: string;
        target: string;
    }[];
    evenColumnsSortable: {
        key: string;
        label: string;
        sortable: boolean;
    }[];
    evenColumnsSortableWithCustoms: ({
        key: string;
        label: string;
        sortable: boolean;
        sortingFn?: undefined;
    } | {
        key: string;
        label: string;
        sortable: boolean;
        sortingFn: () => -1;
    })[];
    evenItemsShuffled: EvenItems[];
    sortByModelId: string;
    sortByModel: string;
    sortingOrderModel: DataTableSortingOrder;
    manyItems: {
        id: number;
        name: string;
        idSquared: string;
    }[];
    currentPage: number;
    filterValue: string;
    visibleRowsAmount: number;
    manyItemsShuffled: {
        id: number;
        name: string;
        idSquared: string;
    }[];
    evenColumnsSortable2: {
        key: string;
        sortable: boolean;
    }[];
    sortBy2: string;
    sortingOrder2: null;
    useSelectableRow: boolean;
    selectedItemsIds: any[];
    selectMode: DataTableSelectMode;
    selectedColor: string;
    usePagination: boolean;
    perPage: number;
    currentPage2: number;
    noDataFilteredHtml: string;
    isStriped: boolean;
    useCustomSortingFnForId: boolean;
    useCustomFilteringFn: boolean;
    hideDefaultHeader: boolean;
    footerClone: boolean;
    allowFooterSorting: boolean;
    clickable: boolean;
    columnsTest2: string[];
    itemsTest2: ({
        columnOne: number;
        columnThree: number;
        columnTwo?: undefined;
    } | {
        columnTwo: number;
        columnOne: number;
        columnThree?: undefined;
    })[];
}, {
    filteringFn(): any;
}, {
    deleteLast5EvenItems(): void;
    toggleIdAndNumber(): void;
    filter(source: any): boolean;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}> | Readonly<{
    [x: string & `on${string}`]: ((...args: never) => any) | undefined;
}>, {} | {}>;
export default _default;
