export { VaSidebarItem, VaSidebarItemContent, VaSidebarItemTitle } from './VaSidebarItem';
export declare const VaSidebar: import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    hoverable: {
        type: BooleanConstructor;
        default: boolean;
    };
    position: {
        type: import("vue").PropType<"left" | "right">;
        default: string;
        validator: (v: string) => boolean;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    minimizedWidth: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    computedClass: import("vue").ComputedRef<{
        'va-sidebar--minimized': boolean;
        'va-sidebar--right': boolean;
    }>;
    computedStyle: import("vue").ComputedRef<{
        color: string;
        background: string;
        width: string | number;
    }>;
    updateHoverState: (newHoverState: boolean) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    hoverable: {
        type: BooleanConstructor;
        default: boolean;
    };
    position: {
        type: import("vue").PropType<"left" | "right">;
        default: string;
        validator: (v: string) => boolean;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    minimizedWidth: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    width: string;
    color: string;
    position: "left" | "right";
    modelValue: boolean;
    gradient: boolean;
    hoverable: boolean;
    minimized: boolean;
    minimizedWidth: string;
}>;
