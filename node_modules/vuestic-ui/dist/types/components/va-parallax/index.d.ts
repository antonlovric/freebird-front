export declare const VaParallax: import("vue").DefineComponent<{
    target: {
        type: import("vue").PropType<string | HTMLElement | undefined>;
    };
    src: {
        type: StringConstructor;
        default: string;
        required: true;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: NumberConstructor;
        default: number;
    };
    reversed: {
        type: BooleanConstructor;
        default: boolean;
    };
    speed: {
        type: NumberConstructor;
        default: number;
        validator: (value: number) => boolean;
    };
}, {
    img: import("vue").ShallowRef<HTMLImageElement | undefined>;
    rootElement: import("vue").ShallowRef<HTMLElement | undefined>;
    computedWrapperStyles: import("vue").ComputedRef<{
        height: string;
    }>;
    computedImgStyles: import("vue").ComputedRef<{
        display: string;
        transform: string;
        opacity: number;
        top: string | number;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    target: {
        type: import("vue").PropType<string | HTMLElement | undefined>;
    };
    src: {
        type: StringConstructor;
        default: string;
        required: true;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: NumberConstructor;
        default: number;
    };
    reversed: {
        type: BooleanConstructor;
        default: boolean;
    };
    speed: {
        type: NumberConstructor;
        default: number;
        validator: (value: number) => boolean;
    };
}>>, {
    height: number;
    alt: string;
    src: string;
    reversed: boolean;
    speed: number;
}>;
