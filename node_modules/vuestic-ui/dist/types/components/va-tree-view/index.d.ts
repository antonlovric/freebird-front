export declare const VaTreeView: import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
}, {
    setColors: (colors: import("../../composables").ColorConfig) => void;
    getColors: () => import("../../composables").ColorConfig;
    getColor: (prop?: string | undefined, defaultColor?: string | undefined, preferVariables?: boolean | undefined) => string;
    getBoxShadowColor: (color: import("colortranslator/dist/@types").ColorInput) => string;
    getHoverColor: (color: import("colortranslator/dist/@types").ColorInput) => string;
    getFocusColor: (color: import("colortranslator/dist/@types").ColorInput) => string;
    getGradientBackground: (color: string) => string;
    getTextColor: (color: import("colortranslator/dist/@types").ColorInput, darkColor?: string, lightColor?: string) => string;
    shiftHSLAColor: (color: import("colortranslator/dist/@types").ColorInput, offset: {
        h?: number | undefined;
        s?: number | undefined;
        l?: number | undefined;
        a?: number | undefined;
    }) => string;
    setHSLAColor: (color: import("colortranslator/dist/@types").ColorInput, newColor: {
        h?: number | undefined;
        s?: number | undefined;
        l?: number | undefined;
        a?: number | undefined;
    }) => string;
    colorsToCSSVariable: (colors: {
        [colorName: string]: string | undefined;
    }, prefix?: string) => Record<string, any>;
    collapse: () => void;
    expand: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    color: string;
}>;
export { VaTreeNode } from './VaTreeNode';
export { VaTreeCategory } from './VaTreeCategory';
