import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: PropType<boolean[]>;
        default: () => boolean[];
    };
    multiply: {
        type: BooleanConstructor;
        default: boolean;
    };
    inset: {
        type: BooleanConstructor;
        default: boolean;
    };
    popout: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}, {
    collapses: import("./hooks/useAccordion").AccordionItem[];
    value: import("vue").WritableComputedRef<boolean[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: PropType<boolean[]>;
        default: () => boolean[];
    };
    multiply: {
        type: BooleanConstructor;
        default: boolean;
    };
    inset: {
        type: BooleanConstructor;
        default: boolean;
    };
    popout: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}>> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    inset: boolean;
    multiply: boolean;
    modelValue: boolean[];
    popout: boolean;
    stateful: boolean;
}>;
export default _default;
