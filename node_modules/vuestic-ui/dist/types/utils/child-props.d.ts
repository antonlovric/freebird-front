import { ComponentOptionsBase, PropType, ExtractPropTypes } from 'vue';
/**
 * Accepts parent component props and return value only for child component props.
 *
 * Used to proxy child component props from parent.
 */
export declare const filterComponentProps: <ChildProps extends Record<string, unknown>, Props extends Record<string, unknown>, Result extends ExtractPropTypes<ChildProps>>(propsValues: Props, childProps: ChildProps) => import("vue").ComputedRef<Result>;
declare type DefineComponentOptions = ComponentOptionsBase<any, any, any, any, any, any, any, any>;
declare type ExtractDefineComponentOptionProp<T> = T extends ComponentOptionsBase<infer P, any, any, any, any, any, any, any> ? unknown extends P ? {} : P : {};
declare type ExtractDefineComponentPropsType<T> = {
    -readonly [K in keyof ExtractDefineComponentOptionProp<T>]-?: {
        type: PropType<ExtractDefineComponentOptionProp<T>[K]>;
        required: undefined extends ExtractDefineComponentOptionProp<T>[K] ? false : true;
        default: undefined extends ExtractDefineComponentOptionProp<T>[K] ? undefined : ExtractDefineComponentOptionProp<T>[K];
    };
};
declare type ClassComponent = {
    prototype: {
        $props: unknown;
    };
};
declare type ExtractClassComponentOptionProp<T extends ClassComponent> = T['prototype']['$props'];
declare type ExtractClassComponentPropsType<T extends ClassComponent> = {
    -readonly [K in keyof ExtractClassComponentOptionProp<T>]-?: {
        type: PropType<ExtractClassComponentOptionProp<T>[K]>;
        required: undefined extends ExtractClassComponentOptionProp<T>[K] ? false : true;
    };
};
declare type ExtractComponentProps<T extends ClassComponent | DefineComponentOptions> = T extends DefineComponentOptions ? ExtractDefineComponentPropsType<T> : T extends ClassComponent ? ExtractClassComponentPropsType<T> : never;
/**
 * Works only with defineComponent function.
 * @notion Be aware that `withConfigTransport` you will lose prop types
 */
export declare function extractComponentProps<T>(component: T, ignoreProps?: string[]): ExtractComponentProps<T>;
declare type ExtractEmitsType<T> = T extends ComponentOptionsBase<any, any, any, any, any, any, any, infer E> ? E : [];
export declare function extractComponentEmits<T>(component: T): ExtractEmitsType<T>;
export {};
