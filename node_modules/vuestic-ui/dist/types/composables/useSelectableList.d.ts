import { PropType, ExtractPropTypes } from 'vue';
export declare type SelectableOption = string | number | Record<string, any>;
declare type StringOrFunction = string | ((option: SelectableOption) => unknown);
export declare const useSelectableListProps: {
    options: {
        type: PropType<SelectableOption[]>;
        default: () => never[];
    };
    textBy: {
        type: PropType<StringOrFunction>;
        default: string;
    };
    valueBy: {
        type: PropType<StringOrFunction>;
        default: string;
    };
    trackBy: {
        type: PropType<StringOrFunction>;
        default: string;
    };
    disabledBy: {
        type: PropType<StringOrFunction>;
        default: string;
    };
    groupBy: {
        type: PropType<StringOrFunction>;
        default: string;
    };
};
export declare function useSelectableList(props: ExtractPropTypes<typeof useSelectableListProps>): {
    getValue: (option: SelectableOption) => any;
    getOptionByValue: (value: SelectableOption) => SelectableOption;
    getText: (option: SelectableOption) => any;
    getDisabled: (option: SelectableOption) => any;
    getTrackBy: (option: SelectableOption) => any;
    getGroupBy: (option: SelectableOption) => any;
};
export {};
