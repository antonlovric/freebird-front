import{w as o}from"./withConfigTransport.js";import{defineComponent as e,ref as t,provide as a,onMounted as r,inject as l,nextTick as i,onUnmounted as n,createVNode as s,resolveDynamicComponent as u,mergeProps as d,withCtx as v,renderSlot as f}from"vue";import{F as c}from"./consts.js";import{ssrRenderVNode as m,ssrRenderSlot as p}from"@vue/server-renderer";import"./VaConfig.js";import"./global-config.js";import"./global-properties.js";const isVaForm=o=>!!o.focusInvalid;var h=e({name:"VaForm",emits:["validation"],props:{autofocus:{type:Boolean,default:!1},tag:{type:String,default:"div"}},setup(o,{emit:e}){const s=t([]),parentFormProvider=()=>l(c,void 0);a(c,{onChildMounted:o=>childMountedHandler(o),onChildUnmounted:o=>childUnmountedHandler(o)});const childMountedHandler=o=>{s.value.push(o)},childUnmountedHandler=o=>{s.value=s.value.filter((e=>e!==o))},focus=()=>{var o;null===(o=s.value.find((({focus:o})=>o)))||void 0===o||o.focus()},u={reset:()=>{s.value.filter((({reset:o})=>o)).forEach((o=>{o.reset()}))},resetValidation:()=>{s.value.filter((({resetValidation:o})=>o)).forEach((o=>{o.resetValidation()}))},focus:focus,focusInvalid:()=>{const o=s.value.find((o=>!isVaForm(o)&&o.hasError()));o?o.focus():s.value.forEach((o=>isVaForm(o)&&o.focusInvalid()))},validate:()=>{const o=s.value.filter((({validate:o})=>o)).map((o=>o.validate())).every((o=>o));return e("validation",o),o}};return r((()=>{var e,t;null===(t=null===(e=parentFormProvider())||void 0===e?void 0:e.onChildMounted)||void 0===t||t.call(e,u),o.autofocus&&i(focus)})),n((()=>{var o,e;null===(e=null===(o=parentFormProvider())||void 0===o?void 0:o.onChildUnmounted)||void 0===e||e.call(o,u)})),u}});h.ssrRender=function ssrRender(o,e,t,a,r,l,i,n){m(e,s(u(o.tag),d({class:"va-form"},a),{default:v(((e,t,a,r)=>{if(!t)return[f(o.$slots,"default")];p(o.$slots,"default",{},null,t,a,r)})),_:3}),t)},h.__file="src/components/va-form/VaForm.vue";const g=o(h);export{g as VaForm};
//# sourceMappingURL=index29.js.map
