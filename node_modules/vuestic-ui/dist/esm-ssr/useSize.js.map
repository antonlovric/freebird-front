{"version":3,"file":"useSize.js","sources":["../../src/composables/useSize.ts"],"sourcesContent":["import { computed, getCurrentInstance, PropType } from 'vue'\n\nimport { useGlobalConfig, SizeConfig } from '../services/global-config/global-config'\nimport type { VuesticComponentName } from '../vuestic-plugin/global-components'\n\nexport const sizesConfig: SizeConfig = {\n  defaultSize: 48,\n  sizes: {\n    small: 32,\n    medium: 48,\n    large: 64,\n  },\n}\n\nexport const fontSizesConfig: SizeConfig = {\n  defaultSize: 1,\n  sizes: {\n    small: 0.75,\n    medium: 1,\n    large: 1.25,\n  },\n}\n\ninterface SizeProps {\n  size: string | number;\n  sizesConfig: Record<string, any>;\n  fontSizesConfig: Record<string, any>;\n}\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useSizeProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useSizeProps = {\n  size: {\n    type: [String, Number],\n    default: '',\n    validator: (size: string | number) => {\n      return typeof size === 'string' || typeof size === 'number'\n    },\n  },\n\n  sizesConfig: {\n    type: Object as PropType<Record<string, any>>,\n    default: () => sizesConfig,\n  },\n\n  fontSizesConfig: {\n    type: Object as PropType<Record<string, any>>,\n    default: () => fontSizesConfig,\n  },\n}\n\nconst fontRegex = /(?<fontSize>\\d+)(?<extension>px|rem)/i\n\nconst convertToRem = (px: number) => px / 16 - 0.5\n\nexport const useSize = (\n  props: SizeProps,\n  componentName: string | undefined = getCurrentInstance()?.type.name,\n) => {\n  const { getGlobalConfig } = useGlobalConfig()\n\n  const sizesConfigGlobal = computed<SizeConfig>(() => {\n    return componentName\n      ? (getGlobalConfig().components as any)?.[componentName as VuesticComponentName]?.sizesConfig\n      : undefined\n  })\n\n  const sizeComputed = computed<string>(() => {\n    const { defaultSize, sizes } = props.sizesConfig\n    const defaultSizeGlobal = sizesConfigGlobal.value?.defaultSize\n\n    if (!props.size) { return `${defaultSizeGlobal || defaultSize}px` }\n\n    if (typeof props.size === 'string') {\n      const sizeFromGlobalConfig = sizesConfigGlobal.value?.sizes?.[props.size]\n      const sizeFromProps = sizes[props.size]\n\n      if (sizeFromGlobalConfig) { return `${sizeFromGlobalConfig}px` }\n      if (sizeFromProps) { return `${sizeFromProps}px` }\n\n      return props.size\n    }\n\n    return `${props.size}px`\n  })\n\n  const fontSizeInRem = computed<number>(() => {\n    const { defaultSize, sizes } = props.fontSizesConfig\n\n    if (!props.size) { return defaultSize }\n\n    if (typeof props.size === 'string') {\n      if (props.size in sizes) { return sizes[props.size] }\n\n      const fontSizeParsed = props.size.match(fontRegex)\n      if (!fontSizeParsed || !fontSizeParsed.groups) {\n        throw new Error('Size prop should be either valid string or number')\n      }\n\n      const { extension, fontSize } = fontSizeParsed.groups\n      return extension === 'rem' ? +fontSize : convertToRem(+fontSize)\n    }\n\n    return convertToRem(props.size)\n  })\n\n  const fontSizeComputed = computed<string>(() => `${fontSizeInRem.value}rem`)\n\n  return {\n    sizeComputed,\n    fontSizeComputed,\n    fontSizeInRem,\n  }\n}\n"],"names":["sizesConfig","defaultSize","sizes","small","medium","large","fontSizesConfig","useSizeProps","size","type","String","Number","default","validator","Object","fontRegex","convertToRem","px","useSize","props","componentName","getCurrentInstance","_a","name","getGlobalConfig","useGlobalConfig","sizesConfigGlobal","computed","_b","components","undefined","sizeComputed","defaultSizeGlobal","value","sizeFromGlobalConfig","_c","sizeFromProps","fontSizeInRem","fontSizeParsed","match","groups","Error","extension","fontSize","fontSizeComputed"],"mappings":"8FAKO,MAAMA,EAA0B,CACrCC,YAAa,GACbC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,MAAO,KAIEC,EAA8B,CACzCL,YAAa,EACbC,MAAO,CACLC,MAAO,IACPC,OAAQ,EACRC,MAAO,OAgBEE,EAAe,CAC1BC,KAAM,CACJC,KAAM,CAACC,OAAQC,QACfC,QAAS,GACTC,UAAYL,GACa,iBAATA,GAAqC,iBAATA,GAI9CR,YAAa,CACXS,KAAMK,OACNF,QAAS,IAAMZ,GAGjBM,gBAAiB,CACfG,KAAMK,OACNF,QAAS,IAAMN,IAIbS,EAAY,wCAEZC,aAAgBC,GAAeA,EAAK,GAAK,GAElCC,QAAU,CACrBC,EACAC,gBAAA,IAAAA,IAAAA,EAA0D,UAAtBC,WAAsB,IAAAC,OAAA,EAAAA,EAAAb,KAAKc,MAE/D,MAAMC,gBAAEA,GAAoBC,IAEtBC,EAAoBC,GAAqB,aAC7C,OAAOP,EAC2E,QAA9EQ,EAAwC,QAAxCN,EAACE,IAAkBK,kBAAqB,IAAAP,OAAA,EAAAA,EAAAF,UAAsC,IAAAQ,OAAA,EAAAA,EAAE5B,iBAChF8B,KAGAC,EAAeJ,GAAiB,eACpC,MAAM1B,YAAEA,EAAWC,MAAEA,GAAUiB,EAAMnB,YAC/BgC,EAA2C,QAAvBV,EAAAI,EAAkBO,aAAK,IAAAX,OAAA,EAAAA,EAAErB,YAEnD,IAAKkB,EAAMX,KAAQ,MAAO,GAAGwB,GAAqB/B,MAElD,GAA0B,iBAAfkB,EAAMX,KAAmB,CAClC,MAAM0B,EAAwD,QAAjCC,EAAyB,QAAzBP,EAAAF,EAAkBO,aAAO,IAAAL,OAAA,EAAAA,EAAA1B,aAAQ,IAAAiC,OAAA,EAAAA,EAAAhB,EAAMX,MAC9D4B,EAAgBlC,EAAMiB,EAAMX,MAElC,OAAI0B,EAA+B,GAAGA,MAClCE,EAAwB,GAAGA,MAExBjB,EAAMX,KAGf,MAAO,GAAGW,EAAMX,YAGZ6B,EAAgBV,GAAiB,KACrC,MAAM1B,YAAEA,EAAWC,MAAEA,GAAUiB,EAAMb,gBAErC,IAAKa,EAAMX,KAAQ,OAAOP,EAE1B,GAA0B,iBAAfkB,EAAMX,KAAmB,CAClC,GAAIW,EAAMX,QAAQN,EAAS,OAAOA,EAAMiB,EAAMX,MAE9C,MAAM8B,EAAiBnB,EAAMX,KAAK+B,MAAMxB,GACxC,IAAKuB,IAAmBA,EAAeE,OACrC,MAAM,IAAIC,MAAM,qDAGlB,MAAMC,UAAEA,EAASC,SAAEA,GAAaL,EAAeE,OAC/C,MAAqB,QAAdE,GAAuBC,EAAW3B,cAAc2B,GAGzD,OAAO3B,aAAaG,EAAMX,SAK5B,MAAO,CACLuB,aAAAA,EACAa,iBAJuBjB,GAAiB,IAAM,GAAGU,EAAcJ,aAK/DI,cAAAA"}