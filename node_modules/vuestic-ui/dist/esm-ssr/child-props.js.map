{"version":3,"file":"child-props.js","sources":["../../src/utils/resolve-component-props.ts","../../src/utils/child-props.ts"],"sourcesContent":["import { ComponentOptions, DefineComponent } from 'vue'\n\nfunction normalizeProps (props: any) {\n  switch (true) {\n    case Array.isArray(props):\n      return props.reduce((acc: Record<string, unknown>, prop: string) => ({ ...acc, [prop]: null }), {})\n    case typeof props === 'object' && props !== null:\n      return props\n    default:\n      return {}\n  }\n}\n\nfunction mergeProps (to: Record<string, any>, from: Record<string, any>, optionsType = 'props') {\n  const { mixins, extends: extendsOptions } = from\n\n  extendsOptions && mergeProps(to, extendsOptions, optionsType)\n  mixins && mixins.forEach((m: any) => mergeProps(to, m, optionsType))\n\n  const props = normalizeProps(from[optionsType])\n\n  for (const key in props) {\n    to[key] = props[key]\n  }\n}\n\nfunction getComponentOptions (component: DefineComponent): ComponentOptions {\n  if (component.options) {\n    return component.options\n  }\n\n  if (component.__vccOpts || component.__b) {\n    return { ...component.__vccOpts, ...component.__b }\n  }\n\n  return component\n}\n\nfunction resolveProps (options: any, optionsType = 'props') {\n  const mixins = options.mixins ?? []\n  const extendsOptions = options.extends ?? []\n  const result: Record<string, any> = {}\n\n  mergeProps(result, extendsOptions, optionsType)\n\n  for (let i = 0; i < mixins.length; i++) {\n    mergeProps(result, mixins[i], optionsType)\n  }\n\n  Object.assign(result, normalizeProps(options[optionsType]))\n\n  return result\n}\n\nexport const getComponentProps = (component: DefineComponent) => {\n  return resolveProps(getComponentOptions(component))\n}\n","import { ComponentOptionsBase, PropType, computed, ExtractPropTypes } from 'vue'\nimport { getComponentProps } from './resolve-component-props'\n\n/**\n * Accepts parent component props and return value only for child component props.\n *\n * Used to proxy child component props from parent.\n */\nexport const filterComponentProps = <\n  ChildProps extends Record<string, unknown>,\n  Props extends Record<string, unknown>,\n  Result extends ExtractPropTypes<ChildProps>\n>(propsValues: Props, childProps: ChildProps) => {\n  return computed(() => {\n    return Object\n      .keys(childProps)\n      .reduce((acc, propName: string) => {\n        (acc as any)[propName] = propsValues[propName]\n        return acc\n      }, {} as Result)\n  })\n}\n\n// Define component\ndeclare type DefineComponentOptions = ComponentOptionsBase<any, any, any, any, any, any, any, any>\n\n// ExtractOptionProp taken from Vue3 source code\ndeclare type ExtractDefineComponentOptionProp<T> = T extends ComponentOptionsBase<infer P, any, any, any, any, any, any, any> ? unknown extends P ? {} : P : {};\n// Remove useless readonly and nullable key here:\n// -readonly removes readonly\n// -? removes undefined from key, so we can be sure that prop exists and should have type.\ndeclare type ExtractDefineComponentPropsType<T> = {\n  -readonly [K in keyof ExtractDefineComponentOptionProp<T>]-?: {\n    type: PropType<ExtractDefineComponentOptionProp<T>[K]>,\n    required: undefined extends ExtractDefineComponentOptionProp<T>[K] ? false : true,\n    default: undefined extends ExtractDefineComponentOptionProp<T>[K] ? undefined : ExtractDefineComponentOptionProp<T>[K],\n  }\n}\n\n// Class component\ndeclare type ClassComponent = { prototype: { $props: unknown }}\n\ndeclare type ExtractClassComponentOptionProp<T extends ClassComponent> = T['prototype']['$props']\n\ndeclare type ExtractClassComponentPropsType<T extends ClassComponent> = {\n  -readonly [K in keyof ExtractClassComponentOptionProp<T>]-?: {\n    type: PropType<ExtractClassComponentOptionProp<T>[K]>,\n    required: undefined extends ExtractClassComponentOptionProp<T>[K] ? false: true,\n  }\n}\n\ndeclare type ExtractComponentProps<T extends ClassComponent | DefineComponentOptions> = T extends DefineComponentOptions ? ExtractDefineComponentPropsType<T> :\n  T extends ClassComponent ? ExtractClassComponentPropsType<T> : never\n\n/**\n * Works only with defineComponent function.\n * @notion Be aware that `withConfigTransport` you will lose prop types\n */\nexport function extractComponentProps<T> (component: T, ignoreProps?: string[]): ExtractComponentProps<T> {\n  const props: any = getComponentProps(component as any)\n\n  if (ignoreProps) {\n    return Object\n      .keys(props)\n      .reduce<Record<string, unknown>>((acc, propName) => {\n        if (ignoreProps.includes(propName)) { return acc }\n\n        if (props[propName] === undefined) { return acc }\n\n        acc[propName] = typeof props[propName] === 'string' ? {} : props[propName]\n\n        return acc\n      }, {}) as ExtractComponentProps<T>\n  }\n\n  return props\n}\n\ndeclare type ExtractEmitsType<T> = T extends ComponentOptionsBase<any, any, any, any, any, any, any, infer E> ? E: []\n\nexport function extractComponentEmits<T> (component: T): ExtractEmitsType<T> {\n  return [...new Set((component as any).emits)] as any\n}\n"],"names":["normalizeProps","props","Array","isArray","reduce","acc","prop","mergeProps","to","from","optionsType","mixins","extends","extendsOptions","forEach","m","key","getComponentProps","component","resolveProps","options","_a","result","_b","i","length","Object","assign","getComponentOptions","__vccOpts","__b","filterComponentProps","propsValues","childProps","computed","keys","propName","extractComponentProps","ignoreProps","includes","undefined","extractComponentEmits","Set","emits"],"mappings":"+BAEA,SAASA,eAAgBC,GACvB,QAAQ,GACN,KAAKC,MAAMC,QAAQF,GACjB,OAAOA,EAAMG,QAAO,CAACC,EAA8BC,KAAkB,IAAKD,EAAKC,CAACA,GAAO,QAAS,IAClG,IAAsB,iBAAVL,GAAgC,OAAVA,EAChC,OAAOA,EACT,QACE,MAAO,IAIb,SAASM,WAAYC,EAAyBC,EAA2BC,EAAc,SACrF,MAAMC,OAAEA,EAAQC,QAASC,GAAmBJ,EAE5CI,GAAkBN,WAAWC,EAAIK,EAAgBH,GACjDC,GAAUA,EAAOG,SAASC,GAAWR,WAAWC,EAAIO,EAAGL,KAEvD,MAAMT,EAAQD,eAAeS,EAAKC,IAElC,IAAK,MAAMM,KAAOf,EAChBO,EAAGQ,GAAOf,EAAMe,GAgCb,MAAMC,kBAAqBC,GAhBlC,SAASC,aAAcC,EAAcV,EAAc,iBACjD,MAAMC,EAAuB,QAAdU,EAAAD,EAAQT,cAAM,IAAAU,EAAAA,EAAI,GAE3BC,EAA8B,GAEpCf,WAAWe,EAH2B,QAAfC,EAAAH,EAAQR,eAAO,IAAAW,EAAAA,EAAI,GAGPb,GAEnC,IAAK,IAAIc,EAAI,EAAGA,EAAIb,EAAOc,OAAQD,IACjCjB,WAAWe,EAAQX,EAAOa,GAAId,GAKhC,OAFAgB,OAAOC,OAAOL,EAAQtB,eAAeoB,EAAQV,KAEtCY,EAIAH,CA7BT,SAASS,oBAAqBV,GAC5B,OAAIA,EAAUE,QACLF,EAAUE,QAGfF,EAAUW,WAAaX,EAAUY,IAC5B,IAAKZ,EAAUW,aAAcX,EAAUY,KAGzCZ,EAoBaU,CAAoBV,IC/C7Ba,qBAAuB,CAIlCC,EAAoBC,IACbC,GAAS,IACPR,OACJS,KAAKF,GACL7B,QAAO,CAACC,EAAK+B,KACX/B,EAAY+B,GAAYJ,EAAYI,GAC9B/B,IACN,MAuCO,SAAAgC,sBAA0BnB,EAAcoB,GACtD,MAAMrC,EAAagB,kBAAkBC,GAErC,OAAIoB,EACKZ,OACJS,KAAKlC,GACLG,QAAgC,CAACC,EAAK+B,KACjCE,EAAYC,SAASH,SAEDI,IAApBvC,EAAMmC,KAEV/B,EAAI+B,GAAuC,iBAApBnC,EAAMmC,GAAyB,GAAKnC,EAAMmC,IAJpB/B,IAO5C,IAGAJ,EAKH,SAAUwC,sBAA0BvB,GACxC,MAAO,IAAI,IAAIwB,IAAKxB,EAAkByB"}