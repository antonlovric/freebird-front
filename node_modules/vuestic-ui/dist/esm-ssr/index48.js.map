{"version":3,"file":"index48.js","sources":["../../src/components/va-slider/validateSlider.ts","../../src/components/va-slider/VaSlider.vue","../../src/components/va-slider/VaSlider.vue?vue&type=template&id=ad237830&lang.js","../../src/components/va-slider/index.ts"],"sourcesContent":["import { warn } from '../../services/utils'\n\nexport const validateSlider = (value: number | number[], step: number, min: number, max: number, range: boolean) => {\n  if ((Array.isArray(value) && !range) || (!Array.isArray(value) && range)) {\n    warn(`The type \"${Array.isArray(value) ? 'array' : typeof value}\" of prop \"model-value\" does not match prop \"range = ${range}\".`)\n  }\n\n  if (max < min) {\n    warn('The maximum value can not be less than the minimum value.')\n  }\n\n  if (min > max) {\n    warn('The minimum value can not be greater than the maximum value.')\n  }\n\n  if ((max - min) % step !== 0) {\n    warn('Step is illegal. Slider is nondivisible.')\n  }\n\n  const inRange = (v: number) => {\n    if (v < min) {\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`)\n    } else if (v > max) {\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    value.map(inRange)\n  } else {\n    inRange(value)\n  }\n\n  return true\n}\n","<template>\n  <div\n    class=\"va-slider\"\n    :class=\"sliderClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <div\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\n      class=\"va-slider__input-wrapper\"\n      aria-hidden=\"true\"\n    >\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\n    </div>\n    <span\n      v-if=\"($slots.label || label) && !invertLabel\"\n      class=\"va-input__label\"\n      :id=\"ariaLabelIdComputed\"\n      :style=\"labelStyles\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <span\n      v-if=\"vertical ? iconAppend : iconPrepend\"\n      class=\"va-input__label\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconAppend : iconPrepend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <div\n      ref=\"sliderContainer\"\n      class=\"va-slider__container\"\n      @mousedown=\"clickOnContainer\"\n      @mouseup=\"hasMouseDown = false\"\n      @touchstart=\"clickOnContainer\"\n    >\n      <div\n        class=\"va-slider__track\"\n        aria-hidden=\"true\"\n        :style=\"trackStyles\"\n      />\n      <template v-if=\"pins\">\n        <div\n          v-for=\"(pin, i) in pinsCol\"\n          :key=\"i\"\n          class=\"va-slider__mark\"\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\n          :style=\"getPinStyles(pin)\"\n        />\n      </template>\n      <template v-if=\"$props.range\">\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          aria-hidden=\"true\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          v-for=\"order in orders\"\n          :key=\"'dot' + order\"\n          :ref=\"setItemRefByIndex(order)\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"getDottedStyles(order)\"\n          :tabindex=\"disabled || readonly ? undefined : 0\"\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(order)\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n            class=\"va-slider__handler__dot--focus\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder(order), order }\"\n            >\n              {{ getTrackLabel(getValueByOrder(order), order) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div\n          ref=\"process\"\n          aria-hidden=\"true\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          ref=\"dot\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"dottedStyles\"\n          :tabindex=\"$props.disabled || $props.readonly ? undefined : 0\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(0)\"\n            class=\"va-slider__handler__dot--focus\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            class=\"va-slider__handler__dot--value\"\n            :style=\"labelStyles\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder() }\"\n            >\n              {{ getTrackLabel(getValueByOrder()) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n    </div>\n    <span\n      v-if=\"vertical ? iconPrepend : iconAppend\"\n      class=\"va-input__label--inverse\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconPrepend : iconAppend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <span\n      v-if=\"($slots.label || label) && invertLabel\"\n      class=\"va-input__label va-input__label--inverse\"\n      :style=\"labelStyles\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\n      class=\"va-slider__input-wrapper\"\n    >\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, onMounted, onBeforeUnmount, shallowRef, CSSProperties } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { generateUniqueId } from '../../services/utils'\nimport { useColors, useArrayRefs, useBem } from '../../composables'\nimport { validateSlider } from './validateSlider'\n\nimport { VaIcon } from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaSlider',\n  components: { VaIcon },\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\n  props: {\n    range: { type: Boolean, default: false },\n    modelValue: ({ type: [Number, Array] as PropType<number | number[]>, default: 0 }),\n    trackLabel: ({ type: [Function, String] as PropType<string | ((val: number, order?: number) => string) | undefined> }),\n    color: { type: String, default: 'primary' },\n    trackColor: { type: String, default: '' },\n    labelColor: { type: String, default: '' },\n    trackLabelVisible: { type: Boolean, default: false },\n    min: { type: Number, default: 0 },\n    max: { type: Number, default: 100 },\n    step: { type: Number, default: 1 },\n    label: { type: String, default: '' },\n    invertLabel: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    pins: { type: Boolean, default: false },\n    iconPrepend: { type: String, default: '' },\n    iconAppend: { type: String, default: '' },\n    vertical: { type: Boolean, default: false },\n    showTrack: { type: Boolean, default: true },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const sliderContainer = shallowRef<HTMLElement>()\n    const dot = shallowRef<HTMLElement>()\n    const { setItemRefByIndex, itemRefs: dots } = useArrayRefs()\n\n    const isFocused = ref(false)\n    const flag = ref(false)\n    const offset = ref(0)\n    const size = ref(0)\n    const currentValue = ref(props.modelValue)\n    const currentSliderDotIndex = ref(0)\n    const hasMouseDown = ref(false)\n\n    const orders = computed(() => props.vertical ? [1, 0] : [0, 1])\n\n    const pinPositionStyle = computed(() => props.vertical ? 'bottom' : 'left')\n    const trackSizeStyle = computed(() => props.vertical ? 'height' : 'width')\n\n    const moreToLess = computed(() => Array.isArray(val.value) && (val.value[1] - props.step) < val.value[0])\n\n    const lessToMore = computed(() => Array.isArray(val.value) && (val.value[0] + props.step) > val.value[1])\n\n    const sliderClass = useBem('va-slider', () => ({\n      ...pick(props, ['disabled', 'readonly', 'vertical']),\n      active: isFocused.value,\n      horizontal: !props.vertical,\n      grabbing: hasMouseDown.value,\n    }))\n\n    const dotClass = useBem('va-slider__handler', () => ({\n      onFocus: !props.range && (flag.value || isFocused.value),\n      inactive: !isFocused.value,\n    }))\n\n    const labelStyles = computed(() => ({\n      color: props.labelColor ? getColor(props.labelColor) : getColor(props.color),\n    }))\n\n    const trackStyles = computed(() => ({\n      backgroundColor: props.trackColor\n        ? getColor(props.trackColor)\n        : getHoverColor(getColor(props.color)),\n    }))\n\n    const processedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          [trackSizeStyle.value]: `${val1 - val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [trackSizeStyle.value]: `${val}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      }\n    })\n\n    const dottedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return [\n          {\n            [pinPositionStyle.value]: `${val0}%`,\n            backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n          {\n            [pinPositionStyle.value]: `${val1}%`,\n            backgroundColor: isActiveDot(1) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n        ] as CSSProperties[]\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val}%`,\n          backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n          borderColor: getColor(props.color),\n        } as CSSProperties\n      }\n    })\n\n    const getDottedStyles = (index?: number) => props.range && index !== undefined\n      ? (dottedStyles.value as CSSProperties[])[index]\n      : dottedStyles.value\n\n    const val = computed({\n      get: () => props.modelValue,\n      set: (val) => {\n        if (!props.range) {\n          val = limitValue(val)\n        }\n\n        if (!flag.value) {\n          emit('change', val)\n        }\n\n        emit('update:modelValue', val)\n      },\n    })\n\n    const getValueByOrder = (order?: number) => props.range && order !== undefined\n      ? (val.value as number[])[order]\n      : val.value as number\n\n    const gap = computed(() => {\n      const total = (props.max - props.min) / props.step\n\n      return size.value / total\n    })\n\n    const multiple = computed(() => {\n      const decimals = `${props.step}`.split('.')[1]\n\n      return decimals ? Math.pow(10, decimals.length) : 1\n    })\n\n    const pinsCol = computed(() => ((props.max - props.min) / props.step) - 1)\n\n    const position = computed(() => {\n      return Array.isArray(props.modelValue)\n        ? [(props.modelValue[0] - props.min) / props.step * gap.value, (props.modelValue[1] - props.min) / props.step * gap.value]\n        : ((props.modelValue - props.min) / props.step * gap.value)\n    })\n\n    const limit = computed(() => [0, size.value])\n\n    const valueLimit = computed(() => [props.min, props.max])\n\n    const isActiveDot = (index: number) => {\n      if ((!isFocused.value && !flag.value) || props.disabled || props.readonly) {\n        return false\n      }\n\n      return props.range ? currentSliderDotIndex.value === index : currentSliderDotIndex.value === 0\n    }\n\n    const moveStart = (e: MouseEvent | TouchEvent, index = currentSliderDotIndex.value) => {\n      e.preventDefault() // prevent page scrolling\n\n      if (!index) {\n        if (!props.range) {\n          index = 0\n        } else if (Array.isArray(position.value)) {\n          const touch = 'touches' in e ? e.touches[0] : e\n          const pos = getPos(touch)\n\n          index = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n        }\n      }\n\n      if (Array.isArray(props.modelValue)) {\n        currentSliderDotIndex.value = index\n      }\n\n      Array.isArray(props.modelValue)\n        ? dots.value[index]?.focus()\n        : dot.value?.focus()\n\n      flag.value = true\n\n      emit('drag-start')\n    }\n\n    const moving = (e: TouchEvent | MouseEvent) => {\n      if (!hasMouseDown.value || !flag.value || props.disabled || props.readonly) { return }\n\n      e.preventDefault()\n\n      if ('touches' in e) {\n        setValueOnPos(getPos(e.touches[0]))\n      } else {\n        setValueOnPos(getPos(e))\n      }\n    }\n\n    const moveEnd = () => {\n      if (!props.disabled && !props.readonly) {\n        if (flag.value) {\n          emit('drag-end')\n          emit('change', props.modelValue)\n        } else {\n          return false\n        }\n\n        flag.value = false\n        hasMouseDown.value = false\n      }\n    }\n\n    const moveWithKeys = (event: KeyboardEvent) => {\n      // don't do anything if a dot isn't focused or if the slider's disabled or readonly\n      if (![dots.value[0], dots.value[1], dot.value].includes(document.activeElement as HTMLElement)) {\n        return\n      }\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      /*\n        where: where to move\n          0 - to left\n          1 - to right\n\n        which: which dot to move (only makes sense when isRange is true)\n          0 - left dot\n          1 - right dot\n        */\n      const moveDot = (isRange: boolean, where: number, which: number) => {\n        if (isRange && Array.isArray(val.value)) {\n          if (!props.pins) {\n            return val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = val.value[which] / onePinInterval | 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value[which] !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value.splice(which, 1, nearestPinVal)\n          } else {\n            val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n        } else {\n          if (!props.pins && !Array.isArray(val.value)) {\n            val.value += where ? props.step : -props.step\n            return\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = !Array.isArray(val.value) ? val.value / onePinInterval | 0 : 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value = nearestPinVal\n          } else {\n            val.value += where ? props.step : -props.step\n          }\n        }\n      }\n\n      // prevent page scroll\n      if (['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault()\n      }\n\n      const isActive = (el?: HTMLElement) => el === document.activeElement\n\n      if (props.range && Array.isArray(val.value)) {\n        const isVerticalDot0More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowUp'\n        const isVerticalDot0Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowDown'\n        const isVerticalDot1More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowUp'\n        const isVerticalDot1Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowDown'\n        const isHorizontalDot0Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowLeft'\n        const isHorizontalDot0More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowRight'\n        const isHorizontalDot1Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowLeft'\n        const isHorizontalDot1More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowRight'\n\n        switch (true) {\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && moreToLess.value && val.value[0] !== props.min:\n            dots.value[0]?.focus()\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && lessToMore.value && val.value[1] !== props.max:\n            dots.value[1]?.focus()\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && val.value[0] !== props.min:\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && val.value[1] !== props.max:\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && val.value[1] !== props.min:\n            moveDot(true, 0, 1)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && val.value[0] !== props.max:\n            moveDot(true, 1, 0)\n            break\n          default:\n            break\n        }\n      } else {\n        if (props.vertical) {\n          if (event.key === 'ArrowDown') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowUp') {\n            moveDot(false, 1, 0)\n          }\n        } else {\n          if (event.key === 'ArrowLeft') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowRight') {\n            moveDot(false, 1, 0)\n          }\n        }\n      }\n    }\n\n    const checkActivePin = (pin: number) => {\n      if (Array.isArray(val.value)) {\n        return pin * props.step > val.value[0] && pin * props.step < val.value[1]\n      } else {\n        return pin * props.step < val.value\n      }\n    }\n\n    const pinPositionStep = computed(() => props.step / (props.max - props.min) * 100)\n    const getPinStyles = (pin: number) => ({\n      backgroundColor: checkActivePin(pin) ? getColor(props.color) : getHoverColor(getColor(props.color)),\n      [pinPositionStyle.value]: `${pin * pinPositionStep.value}%`,\n      transition: hasMouseDown.value ? 'none' : 'var(--va-slider-pin-transition)',\n    })\n\n    const getPos = (e: MouseEvent | Touch) => {\n      getStaticData()\n\n      return props.vertical ? offset.value - e.clientY : e.clientX - offset.value\n    }\n\n    const getStaticData = () => {\n      if (sliderContainer.value) {\n        size.value = sliderContainer.value[props.vertical ? 'offsetHeight' : 'offsetWidth']\n\n        offset.value = sliderContainer.value.getBoundingClientRect()[pinPositionStyle.value]\n      }\n    }\n\n    const getValueByIndex = (index: number) => {\n      return ((props.step * multiple.value) * index + (props.min * multiple.value)) / multiple.value\n    }\n\n    const getTrackLabel = (val: number, order?: number) => {\n      if (!props.trackLabel) { return val }\n\n      return typeof props.trackLabel === 'function'\n        ? props.trackLabel(val, order)\n        : props.trackLabel\n    }\n\n    const setCurrentValue = (newValue: number) => {\n      const slider = currentSliderDotIndex.value\n\n      if (Array.isArray(val.value) && Array.isArray(currentValue.value) && Array.isArray(props.modelValue)) {\n        if (isDiff(currentValue.value[slider], newValue)) {\n          currentValue.value.splice(slider, 1, newValue)\n          if (slider === 0) {\n            val.value = [currentValue.value.splice(slider, 1, newValue)[0], props.modelValue[1]]\n            currentValue.value = [...val.value]\n          } else {\n            val.value = [props.modelValue[0], currentValue.value.splice(slider, 1, newValue)[0]]\n            currentValue.value = [...val.value]\n          }\n        }\n      } else {\n        if (newValue < props.min || newValue > props.max) {\n          return false\n        }\n        if (isDiff(currentValue.value, newValue)) {\n          currentValue.value = newValue\n          val.value = newValue\n        }\n      }\n    }\n\n    const setValueOnPos = (pixelPosition: number) => {\n      const range = limit.value\n      const valueRange = valueLimit.value\n\n      // set focus on current thumb\n      const dotToFocus = Array.isArray(props.modelValue)\n        ? dots.value[currentSliderDotIndex.value]\n        : dot.value\n\n      dotToFocus?.focus()\n\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\n        if (currentSliderDotIndex.value) {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition <= position.value[0]) {\n            val.value[1] = val.value[0]\n            currentSliderDotIndex.value = 0\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        } else {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition >= position.value[1]) {\n            val.value[0] = val.value[1]\n            currentSliderDotIndex.value = 1\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        }\n      } else if (pixelPosition < range[0]) {\n        setCurrentValue(valueRange[0])\n      } else {\n        setCurrentValue(valueRange[1])\n      }\n    }\n\n    const limitValue = (val: number | number[]) => {\n      const inRange = (v: number) => {\n        if (v < props.min) {\n          return props.min\n        } else if (v > props.max) {\n          return props.max\n        }\n        return v\n      }\n\n      if (Array.isArray(val)) {\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 0) {\n          const v = inRange(val[1])\n          return [v, v]\n        }\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 1) {\n          const v = inRange(val[0])\n          return [v, v]\n        }\n        return val.map((v) => inRange(v))\n      } else {\n        return inRange(val)\n      }\n    }\n\n    const isDiff = (a: unknown, b: unknown) => JSON.stringify(a) !== JSON.stringify(b)\n\n    const clickOnContainer = (e: MouseEvent | TouchEvent) => {\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      const pos = ('touches' in e) ? getPos(e.touches[0]) : getPos(e)\n\n      if (Array.isArray(position.value)) {\n        currentSliderDotIndex.value = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n      }\n\n      hasMouseDown.value = true\n      setValueOnPos(pos)\n      moveStart(e, currentSliderDotIndex.value)\n    }\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', moving)\n      document.addEventListener('touchmove', moving, { passive: false })\n      document.addEventListener('mouseup', moveEnd)\n      document.addEventListener('mouseleave', moveEnd)\n      document.addEventListener('touchcancel', moveEnd)\n      document.addEventListener('touchend', moveEnd)\n      document.addEventListener('keydown', moveWithKeys)\n    }\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', moving)\n      document.removeEventListener('touchmove', moving)\n      document.removeEventListener('mouseup', moveEnd)\n      document.removeEventListener('mouseleave', moveEnd)\n      document.removeEventListener('touchcancel', moveEnd)\n      document.removeEventListener('touchend', moveEnd)\n      document.removeEventListener('keydown', moveWithKeys)\n    }\n\n    const ariaLabelIdComputed = computed(() => `aria-label-id-${generateUniqueId()}`)\n\n    const ariaAttributesComputed = computed(() => ({\n      role: 'slider',\n      ariaValuemin: props.min,\n      ariaValuemax: props.max,\n      ariaLabelledby: ariaLabelIdComputed.value,\n      ariaOrientation: props.vertical ? 'vertical' : 'horizontal',\n      ariaDisabled: props.disabled,\n      ariaReadonly: props.readonly,\n      ariaValuenow: !Array.isArray(props.modelValue) ? props.modelValue : undefined,\n    }))\n\n    onMounted(() => {\n      if (validateSlider(props.modelValue, props.step, props.min, props.max, props.range)) {\n        getStaticData()\n        bindEvents()\n      }\n    })\n\n    onBeforeUnmount(unbindEvents)\n\n    watch([\n      val,\n      () => props.step,\n      () => props.min,\n      () => props.max,\n      () => props.range,\n    ], ([value, step, min, max, range]) => {\n      validateSlider(value, step, min, max, range)\n    })\n\n    watch(hasMouseDown, (hasMouseDown) => {\n      document.documentElement.style.cursor = hasMouseDown ? 'grabbing' : ''\n    })\n\n    return {\n      getColor,\n      dot,\n      dots,\n      setItemRefByIndex,\n      orders,\n      sliderContainer,\n      val,\n      getValueByOrder,\n      sliderClass,\n      dotClass,\n      labelStyles,\n      processedStyles,\n      getPinStyles,\n      dottedStyles,\n      getDottedStyles,\n      clickOnContainer,\n      hasMouseDown,\n      trackStyles,\n      pinsCol,\n      checkActivePin,\n      isFocused,\n      isActiveDot,\n      getTrackLabel,\n      currentSliderDotIndex,\n      ariaLabelIdComputed,\n      ariaAttributesComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-slider {\n  display: var(--va-slider-display);\n  align-items: var(--va-slider-align-items);\n  font-family: var(--va-font-family);\n\n  &__input-wrapper {\n    position: var(--va-slider-input-wrapper-position);\n    display: var(--va-slider-input-wrapper-display);\n  }\n\n  &__container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: grab;\n  }\n\n  &__track {\n    position: var(--va-slider-track-position);\n    border-radius: var(--va-slider-track-border-radius);\n    transition: var(--va-slider-track-transition);\n    opacity: var(--va-slider-track-opacity);\n\n    &--active {\n      transition: 0s;\n    }\n  }\n\n  &__track--selected {\n    opacity: 1;\n  }\n\n  &__handler {\n    position: var(--va-slider-handler-position);\n    width: var(--va-slider-handler-width);\n    height: var(--va-slider-handler-height);\n    background: var(--va-slider-handler-background);\n    border: var(--va-slider-handler-border);\n    border-radius: var(--va-slider-handler-border-radius);\n    outline: var(--va-slider-handler-outline);\n    left: var(--va-slider-handler-left);\n    transition: var(--va-slider-handler-transition);\n\n    &__dot--focus {\n      transform: var(--va-slider-dot-transform);\n      display: var(--va-slider-dot-display);\n      width: var(--va-slider-dot-width);\n      height: var(--va-slider-dot-height);\n      position: var(--va-slider-dot-position);\n      border-radius: var(--va-slider-dot-border-radius);\n      opacity: var(--va-slider-dot-opacity);\n      pointer-events: var(--va-slider-dot-pointer-events);\n    }\n\n    &__dot--value {\n      transform: var(--va-slider-dot-value-transform);\n      user-select: var(--va-slider-dot-value-user-select);\n      font-size: var(--va-slider-dot-value-font-size);\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\n      line-height: var(--va-slider-dot-value-line-height);\n      font-weight: var(--va-slider-dot-value-font-weight);\n      text-transform: var(--va-slider-dot-value-text-transform);\n      white-space: var(--va-slider-dot-value-white-space);\n    }\n  }\n\n  .va-input__label {\n    user-select: var(--va-slider-input-label-user-select);\n    font-size: var(--va-slider-input-label-font-size);\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\n    line-height: var(--va-slider-input-label-line-height);\n    font-weight: var(--va-slider-input-label-font-weight);\n    text-transform: var(--va-slider-input-label-text-transform);\n  }\n\n  .va-input__label--inverse {\n    user-select: var(--va-slider-input-label-inverse-user-select);\n    font-size: var(--va-slider-input-label-inverse-font-size);\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\n    line-height: var(--va-slider-input-label-inverse-line-height);\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\n  }\n\n  &--grabbing {\n    .va-slider__container {\n      cursor: grabbing;\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n\n  &--readonly {\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n}\n\n.va-slider--horizontal {\n  .va-slider__input-wrapper {\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\n\n    &:last-of-type {\n      margin-left: 1rem;\n    }\n  }\n\n  .va-slider {\n    &__container {\n      width: 100%;\n      height: 1.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-horizontal-track-height);\n      width: var(--va-slider-horizontal-track-width);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.125rem;\n      height: 0.75rem;\n    }\n\n    &__handler {\n      transform: var(--va-slider-horizontal-handler-transform);\n\n      &--inactive {\n        transition: left 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-horizontal-dot-value-position);\n        top: var(--va-slider-horizontal-dot-value-top);\n        left: var(--va-slider-horizontal-dot-value-left);\n      }\n    }\n  }\n\n  .va-input__label {\n    margin-right: 1rem;\n  }\n\n  .va-input__label--inverse {\n    margin-left: 1rem;\n  }\n}\n\n.va-slider--vertical {\n  height: var(--va-slider-vertical-height);\n  padding: var(--va-slider-vertical-padding);\n  flex-direction: var(--va-slider-vertical-flex-direction);\n  align-items: var(--va-slider-vertical-align-items);\n\n  .va-input__label {\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\n  }\n\n  .va-input__label--inverse {\n    left: var(--va-slider-vertical-label-inverse-left);\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\n  }\n\n  .va-slider {\n    &__input-wrapper {\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\n      position: var(--va-slider-vertical-input-wrapper-position);\n      display: var(--va-slider-vertical-input-wrapper-display);\n\n      &:last-of-type {\n        margin-top: 1rem;\n      }\n    }\n\n    &__container {\n      height: 100%;\n      width: 0.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-vertical-track-height);\n      width: var(--va-slider-vertical-track-width);\n      bottom: var(--va-slider-vertical-track-bottom);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.75rem;\n      height: 0.125rem;\n      left: -2px;\n    }\n\n    &__handler {\n      transform: var(--va-slider-vertical-handler-transform);\n\n      &--inactive {\n        transition: bottom 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-vertical-dot-value-position);\n        top: var(--va-slider-vertical-dot-value-top);\n        left: var(--va-slider-vertical-dot-value-left);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-slider\"\n    :class=\"sliderClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <div\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\n      class=\"va-slider__input-wrapper\"\n      aria-hidden=\"true\"\n    >\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\n    </div>\n    <span\n      v-if=\"($slots.label || label) && !invertLabel\"\n      class=\"va-input__label\"\n      :id=\"ariaLabelIdComputed\"\n      :style=\"labelStyles\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <span\n      v-if=\"vertical ? iconAppend : iconPrepend\"\n      class=\"va-input__label\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconAppend : iconPrepend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <div\n      ref=\"sliderContainer\"\n      class=\"va-slider__container\"\n      @mousedown=\"clickOnContainer\"\n      @mouseup=\"hasMouseDown = false\"\n      @touchstart=\"clickOnContainer\"\n    >\n      <div\n        class=\"va-slider__track\"\n        aria-hidden=\"true\"\n        :style=\"trackStyles\"\n      />\n      <template v-if=\"pins\">\n        <div\n          v-for=\"(pin, i) in pinsCol\"\n          :key=\"i\"\n          class=\"va-slider__mark\"\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\n          :style=\"getPinStyles(pin)\"\n        />\n      </template>\n      <template v-if=\"$props.range\">\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          aria-hidden=\"true\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          v-for=\"order in orders\"\n          :key=\"'dot' + order\"\n          :ref=\"setItemRefByIndex(order)\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"getDottedStyles(order)\"\n          :tabindex=\"disabled || readonly ? undefined : 0\"\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(order)\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n            class=\"va-slider__handler__dot--focus\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder(order), order }\"\n            >\n              {{ getTrackLabel(getValueByOrder(order), order) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div\n          ref=\"process\"\n          aria-hidden=\"true\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          ref=\"dot\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"dottedStyles\"\n          :tabindex=\"$props.disabled || $props.readonly ? undefined : 0\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(0)\"\n            class=\"va-slider__handler__dot--focus\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            class=\"va-slider__handler__dot--value\"\n            :style=\"labelStyles\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder() }\"\n            >\n              {{ getTrackLabel(getValueByOrder()) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n    </div>\n    <span\n      v-if=\"vertical ? iconPrepend : iconAppend\"\n      class=\"va-input__label--inverse\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconPrepend : iconAppend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <span\n      v-if=\"($slots.label || label) && invertLabel\"\n      class=\"va-input__label va-input__label--inverse\"\n      :style=\"labelStyles\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\n      class=\"va-slider__input-wrapper\"\n    >\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, onMounted, onBeforeUnmount, shallowRef, CSSProperties } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { generateUniqueId } from '../../services/utils'\nimport { useColors, useArrayRefs, useBem } from '../../composables'\nimport { validateSlider } from './validateSlider'\n\nimport { VaIcon } from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaSlider',\n  components: { VaIcon },\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\n  props: {\n    range: { type: Boolean, default: false },\n    modelValue: ({ type: [Number, Array] as PropType<number | number[]>, default: 0 }),\n    trackLabel: ({ type: [Function, String] as PropType<string | ((val: number, order?: number) => string) | undefined> }),\n    color: { type: String, default: 'primary' },\n    trackColor: { type: String, default: '' },\n    labelColor: { type: String, default: '' },\n    trackLabelVisible: { type: Boolean, default: false },\n    min: { type: Number, default: 0 },\n    max: { type: Number, default: 100 },\n    step: { type: Number, default: 1 },\n    label: { type: String, default: '' },\n    invertLabel: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    pins: { type: Boolean, default: false },\n    iconPrepend: { type: String, default: '' },\n    iconAppend: { type: String, default: '' },\n    vertical: { type: Boolean, default: false },\n    showTrack: { type: Boolean, default: true },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const sliderContainer = shallowRef<HTMLElement>()\n    const dot = shallowRef<HTMLElement>()\n    const { setItemRefByIndex, itemRefs: dots } = useArrayRefs()\n\n    const isFocused = ref(false)\n    const flag = ref(false)\n    const offset = ref(0)\n    const size = ref(0)\n    const currentValue = ref(props.modelValue)\n    const currentSliderDotIndex = ref(0)\n    const hasMouseDown = ref(false)\n\n    const orders = computed(() => props.vertical ? [1, 0] : [0, 1])\n\n    const pinPositionStyle = computed(() => props.vertical ? 'bottom' : 'left')\n    const trackSizeStyle = computed(() => props.vertical ? 'height' : 'width')\n\n    const moreToLess = computed(() => Array.isArray(val.value) && (val.value[1] - props.step) < val.value[0])\n\n    const lessToMore = computed(() => Array.isArray(val.value) && (val.value[0] + props.step) > val.value[1])\n\n    const sliderClass = useBem('va-slider', () => ({\n      ...pick(props, ['disabled', 'readonly', 'vertical']),\n      active: isFocused.value,\n      horizontal: !props.vertical,\n      grabbing: hasMouseDown.value,\n    }))\n\n    const dotClass = useBem('va-slider__handler', () => ({\n      onFocus: !props.range && (flag.value || isFocused.value),\n      inactive: !isFocused.value,\n    }))\n\n    const labelStyles = computed(() => ({\n      color: props.labelColor ? getColor(props.labelColor) : getColor(props.color),\n    }))\n\n    const trackStyles = computed(() => ({\n      backgroundColor: props.trackColor\n        ? getColor(props.trackColor)\n        : getHoverColor(getColor(props.color)),\n    }))\n\n    const processedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          [trackSizeStyle.value]: `${val1 - val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [trackSizeStyle.value]: `${val}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      }\n    })\n\n    const dottedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return [\n          {\n            [pinPositionStyle.value]: `${val0}%`,\n            backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n          {\n            [pinPositionStyle.value]: `${val1}%`,\n            backgroundColor: isActiveDot(1) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n        ] as CSSProperties[]\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val}%`,\n          backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n          borderColor: getColor(props.color),\n        } as CSSProperties\n      }\n    })\n\n    const getDottedStyles = (index?: number) => props.range && index !== undefined\n      ? (dottedStyles.value as CSSProperties[])[index]\n      : dottedStyles.value\n\n    const val = computed({\n      get: () => props.modelValue,\n      set: (val) => {\n        if (!props.range) {\n          val = limitValue(val)\n        }\n\n        if (!flag.value) {\n          emit('change', val)\n        }\n\n        emit('update:modelValue', val)\n      },\n    })\n\n    const getValueByOrder = (order?: number) => props.range && order !== undefined\n      ? (val.value as number[])[order]\n      : val.value as number\n\n    const gap = computed(() => {\n      const total = (props.max - props.min) / props.step\n\n      return size.value / total\n    })\n\n    const multiple = computed(() => {\n      const decimals = `${props.step}`.split('.')[1]\n\n      return decimals ? Math.pow(10, decimals.length) : 1\n    })\n\n    const pinsCol = computed(() => ((props.max - props.min) / props.step) - 1)\n\n    const position = computed(() => {\n      return Array.isArray(props.modelValue)\n        ? [(props.modelValue[0] - props.min) / props.step * gap.value, (props.modelValue[1] - props.min) / props.step * gap.value]\n        : ((props.modelValue - props.min) / props.step * gap.value)\n    })\n\n    const limit = computed(() => [0, size.value])\n\n    const valueLimit = computed(() => [props.min, props.max])\n\n    const isActiveDot = (index: number) => {\n      if ((!isFocused.value && !flag.value) || props.disabled || props.readonly) {\n        return false\n      }\n\n      return props.range ? currentSliderDotIndex.value === index : currentSliderDotIndex.value === 0\n    }\n\n    const moveStart = (e: MouseEvent | TouchEvent, index = currentSliderDotIndex.value) => {\n      e.preventDefault() // prevent page scrolling\n\n      if (!index) {\n        if (!props.range) {\n          index = 0\n        } else if (Array.isArray(position.value)) {\n          const touch = 'touches' in e ? e.touches[0] : e\n          const pos = getPos(touch)\n\n          index = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n        }\n      }\n\n      if (Array.isArray(props.modelValue)) {\n        currentSliderDotIndex.value = index\n      }\n\n      Array.isArray(props.modelValue)\n        ? dots.value[index]?.focus()\n        : dot.value?.focus()\n\n      flag.value = true\n\n      emit('drag-start')\n    }\n\n    const moving = (e: TouchEvent | MouseEvent) => {\n      if (!hasMouseDown.value || !flag.value || props.disabled || props.readonly) { return }\n\n      e.preventDefault()\n\n      if ('touches' in e) {\n        setValueOnPos(getPos(e.touches[0]))\n      } else {\n        setValueOnPos(getPos(e))\n      }\n    }\n\n    const moveEnd = () => {\n      if (!props.disabled && !props.readonly) {\n        if (flag.value) {\n          emit('drag-end')\n          emit('change', props.modelValue)\n        } else {\n          return false\n        }\n\n        flag.value = false\n        hasMouseDown.value = false\n      }\n    }\n\n    const moveWithKeys = (event: KeyboardEvent) => {\n      // don't do anything if a dot isn't focused or if the slider's disabled or readonly\n      if (![dots.value[0], dots.value[1], dot.value].includes(document.activeElement as HTMLElement)) {\n        return\n      }\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      /*\n        where: where to move\n          0 - to left\n          1 - to right\n\n        which: which dot to move (only makes sense when isRange is true)\n          0 - left dot\n          1 - right dot\n        */\n      const moveDot = (isRange: boolean, where: number, which: number) => {\n        if (isRange && Array.isArray(val.value)) {\n          if (!props.pins) {\n            return val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = val.value[which] / onePinInterval | 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value[which] !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value.splice(which, 1, nearestPinVal)\n          } else {\n            val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n        } else {\n          if (!props.pins && !Array.isArray(val.value)) {\n            val.value += where ? props.step : -props.step\n            return\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = !Array.isArray(val.value) ? val.value / onePinInterval | 0 : 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value = nearestPinVal\n          } else {\n            val.value += where ? props.step : -props.step\n          }\n        }\n      }\n\n      // prevent page scroll\n      if (['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault()\n      }\n\n      const isActive = (el?: HTMLElement) => el === document.activeElement\n\n      if (props.range && Array.isArray(val.value)) {\n        const isVerticalDot0More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowUp'\n        const isVerticalDot0Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowDown'\n        const isVerticalDot1More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowUp'\n        const isVerticalDot1Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowDown'\n        const isHorizontalDot0Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowLeft'\n        const isHorizontalDot0More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowRight'\n        const isHorizontalDot1Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowLeft'\n        const isHorizontalDot1More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowRight'\n\n        switch (true) {\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && moreToLess.value && val.value[0] !== props.min:\n            dots.value[0]?.focus()\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && lessToMore.value && val.value[1] !== props.max:\n            dots.value[1]?.focus()\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && val.value[0] !== props.min:\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && val.value[1] !== props.max:\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && val.value[1] !== props.min:\n            moveDot(true, 0, 1)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && val.value[0] !== props.max:\n            moveDot(true, 1, 0)\n            break\n          default:\n            break\n        }\n      } else {\n        if (props.vertical) {\n          if (event.key === 'ArrowDown') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowUp') {\n            moveDot(false, 1, 0)\n          }\n        } else {\n          if (event.key === 'ArrowLeft') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowRight') {\n            moveDot(false, 1, 0)\n          }\n        }\n      }\n    }\n\n    const checkActivePin = (pin: number) => {\n      if (Array.isArray(val.value)) {\n        return pin * props.step > val.value[0] && pin * props.step < val.value[1]\n      } else {\n        return pin * props.step < val.value\n      }\n    }\n\n    const pinPositionStep = computed(() => props.step / (props.max - props.min) * 100)\n    const getPinStyles = (pin: number) => ({\n      backgroundColor: checkActivePin(pin) ? getColor(props.color) : getHoverColor(getColor(props.color)),\n      [pinPositionStyle.value]: `${pin * pinPositionStep.value}%`,\n      transition: hasMouseDown.value ? 'none' : 'var(--va-slider-pin-transition)',\n    })\n\n    const getPos = (e: MouseEvent | Touch) => {\n      getStaticData()\n\n      return props.vertical ? offset.value - e.clientY : e.clientX - offset.value\n    }\n\n    const getStaticData = () => {\n      if (sliderContainer.value) {\n        size.value = sliderContainer.value[props.vertical ? 'offsetHeight' : 'offsetWidth']\n\n        offset.value = sliderContainer.value.getBoundingClientRect()[pinPositionStyle.value]\n      }\n    }\n\n    const getValueByIndex = (index: number) => {\n      return ((props.step * multiple.value) * index + (props.min * multiple.value)) / multiple.value\n    }\n\n    const getTrackLabel = (val: number, order?: number) => {\n      if (!props.trackLabel) { return val }\n\n      return typeof props.trackLabel === 'function'\n        ? props.trackLabel(val, order)\n        : props.trackLabel\n    }\n\n    const setCurrentValue = (newValue: number) => {\n      const slider = currentSliderDotIndex.value\n\n      if (Array.isArray(val.value) && Array.isArray(currentValue.value) && Array.isArray(props.modelValue)) {\n        if (isDiff(currentValue.value[slider], newValue)) {\n          currentValue.value.splice(slider, 1, newValue)\n          if (slider === 0) {\n            val.value = [currentValue.value.splice(slider, 1, newValue)[0], props.modelValue[1]]\n            currentValue.value = [...val.value]\n          } else {\n            val.value = [props.modelValue[0], currentValue.value.splice(slider, 1, newValue)[0]]\n            currentValue.value = [...val.value]\n          }\n        }\n      } else {\n        if (newValue < props.min || newValue > props.max) {\n          return false\n        }\n        if (isDiff(currentValue.value, newValue)) {\n          currentValue.value = newValue\n          val.value = newValue\n        }\n      }\n    }\n\n    const setValueOnPos = (pixelPosition: number) => {\n      const range = limit.value\n      const valueRange = valueLimit.value\n\n      // set focus on current thumb\n      const dotToFocus = Array.isArray(props.modelValue)\n        ? dots.value[currentSliderDotIndex.value]\n        : dot.value\n\n      dotToFocus?.focus()\n\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\n        if (currentSliderDotIndex.value) {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition <= position.value[0]) {\n            val.value[1] = val.value[0]\n            currentSliderDotIndex.value = 0\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        } else {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition >= position.value[1]) {\n            val.value[0] = val.value[1]\n            currentSliderDotIndex.value = 1\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        }\n      } else if (pixelPosition < range[0]) {\n        setCurrentValue(valueRange[0])\n      } else {\n        setCurrentValue(valueRange[1])\n      }\n    }\n\n    const limitValue = (val: number | number[]) => {\n      const inRange = (v: number) => {\n        if (v < props.min) {\n          return props.min\n        } else if (v > props.max) {\n          return props.max\n        }\n        return v\n      }\n\n      if (Array.isArray(val)) {\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 0) {\n          const v = inRange(val[1])\n          return [v, v]\n        }\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 1) {\n          const v = inRange(val[0])\n          return [v, v]\n        }\n        return val.map((v) => inRange(v))\n      } else {\n        return inRange(val)\n      }\n    }\n\n    const isDiff = (a: unknown, b: unknown) => JSON.stringify(a) !== JSON.stringify(b)\n\n    const clickOnContainer = (e: MouseEvent | TouchEvent) => {\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      const pos = ('touches' in e) ? getPos(e.touches[0]) : getPos(e)\n\n      if (Array.isArray(position.value)) {\n        currentSliderDotIndex.value = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n      }\n\n      hasMouseDown.value = true\n      setValueOnPos(pos)\n      moveStart(e, currentSliderDotIndex.value)\n    }\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', moving)\n      document.addEventListener('touchmove', moving, { passive: false })\n      document.addEventListener('mouseup', moveEnd)\n      document.addEventListener('mouseleave', moveEnd)\n      document.addEventListener('touchcancel', moveEnd)\n      document.addEventListener('touchend', moveEnd)\n      document.addEventListener('keydown', moveWithKeys)\n    }\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', moving)\n      document.removeEventListener('touchmove', moving)\n      document.removeEventListener('mouseup', moveEnd)\n      document.removeEventListener('mouseleave', moveEnd)\n      document.removeEventListener('touchcancel', moveEnd)\n      document.removeEventListener('touchend', moveEnd)\n      document.removeEventListener('keydown', moveWithKeys)\n    }\n\n    const ariaLabelIdComputed = computed(() => `aria-label-id-${generateUniqueId()}`)\n\n    const ariaAttributesComputed = computed(() => ({\n      role: 'slider',\n      ariaValuemin: props.min,\n      ariaValuemax: props.max,\n      ariaLabelledby: ariaLabelIdComputed.value,\n      ariaOrientation: props.vertical ? 'vertical' : 'horizontal',\n      ariaDisabled: props.disabled,\n      ariaReadonly: props.readonly,\n      ariaValuenow: !Array.isArray(props.modelValue) ? props.modelValue : undefined,\n    }))\n\n    onMounted(() => {\n      if (validateSlider(props.modelValue, props.step, props.min, props.max, props.range)) {\n        getStaticData()\n        bindEvents()\n      }\n    })\n\n    onBeforeUnmount(unbindEvents)\n\n    watch([\n      val,\n      () => props.step,\n      () => props.min,\n      () => props.max,\n      () => props.range,\n    ], ([value, step, min, max, range]) => {\n      validateSlider(value, step, min, max, range)\n    })\n\n    watch(hasMouseDown, (hasMouseDown) => {\n      document.documentElement.style.cursor = hasMouseDown ? 'grabbing' : ''\n    })\n\n    return {\n      getColor,\n      dot,\n      dots,\n      setItemRefByIndex,\n      orders,\n      sliderContainer,\n      val,\n      getValueByOrder,\n      sliderClass,\n      dotClass,\n      labelStyles,\n      processedStyles,\n      getPinStyles,\n      dottedStyles,\n      getDottedStyles,\n      clickOnContainer,\n      hasMouseDown,\n      trackStyles,\n      pinsCol,\n      checkActivePin,\n      isFocused,\n      isActiveDot,\n      getTrackLabel,\n      currentSliderDotIndex,\n      ariaLabelIdComputed,\n      ariaAttributesComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-slider {\n  display: var(--va-slider-display);\n  align-items: var(--va-slider-align-items);\n  font-family: var(--va-font-family);\n\n  &__input-wrapper {\n    position: var(--va-slider-input-wrapper-position);\n    display: var(--va-slider-input-wrapper-display);\n  }\n\n  &__container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: grab;\n  }\n\n  &__track {\n    position: var(--va-slider-track-position);\n    border-radius: var(--va-slider-track-border-radius);\n    transition: var(--va-slider-track-transition);\n    opacity: var(--va-slider-track-opacity);\n\n    &--active {\n      transition: 0s;\n    }\n  }\n\n  &__track--selected {\n    opacity: 1;\n  }\n\n  &__handler {\n    position: var(--va-slider-handler-position);\n    width: var(--va-slider-handler-width);\n    height: var(--va-slider-handler-height);\n    background: var(--va-slider-handler-background);\n    border: var(--va-slider-handler-border);\n    border-radius: var(--va-slider-handler-border-radius);\n    outline: var(--va-slider-handler-outline);\n    left: var(--va-slider-handler-left);\n    transition: var(--va-slider-handler-transition);\n\n    &__dot--focus {\n      transform: var(--va-slider-dot-transform);\n      display: var(--va-slider-dot-display);\n      width: var(--va-slider-dot-width);\n      height: var(--va-slider-dot-height);\n      position: var(--va-slider-dot-position);\n      border-radius: var(--va-slider-dot-border-radius);\n      opacity: var(--va-slider-dot-opacity);\n      pointer-events: var(--va-slider-dot-pointer-events);\n    }\n\n    &__dot--value {\n      transform: var(--va-slider-dot-value-transform);\n      user-select: var(--va-slider-dot-value-user-select);\n      font-size: var(--va-slider-dot-value-font-size);\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\n      line-height: var(--va-slider-dot-value-line-height);\n      font-weight: var(--va-slider-dot-value-font-weight);\n      text-transform: var(--va-slider-dot-value-text-transform);\n      white-space: var(--va-slider-dot-value-white-space);\n    }\n  }\n\n  .va-input__label {\n    user-select: var(--va-slider-input-label-user-select);\n    font-size: var(--va-slider-input-label-font-size);\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\n    line-height: var(--va-slider-input-label-line-height);\n    font-weight: var(--va-slider-input-label-font-weight);\n    text-transform: var(--va-slider-input-label-text-transform);\n  }\n\n  .va-input__label--inverse {\n    user-select: var(--va-slider-input-label-inverse-user-select);\n    font-size: var(--va-slider-input-label-inverse-font-size);\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\n    line-height: var(--va-slider-input-label-inverse-line-height);\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\n  }\n\n  &--grabbing {\n    .va-slider__container {\n      cursor: grabbing;\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n\n  &--readonly {\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n}\n\n.va-slider--horizontal {\n  .va-slider__input-wrapper {\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\n\n    &:last-of-type {\n      margin-left: 1rem;\n    }\n  }\n\n  .va-slider {\n    &__container {\n      width: 100%;\n      height: 1.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-horizontal-track-height);\n      width: var(--va-slider-horizontal-track-width);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.125rem;\n      height: 0.75rem;\n    }\n\n    &__handler {\n      transform: var(--va-slider-horizontal-handler-transform);\n\n      &--inactive {\n        transition: left 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-horizontal-dot-value-position);\n        top: var(--va-slider-horizontal-dot-value-top);\n        left: var(--va-slider-horizontal-dot-value-left);\n      }\n    }\n  }\n\n  .va-input__label {\n    margin-right: 1rem;\n  }\n\n  .va-input__label--inverse {\n    margin-left: 1rem;\n  }\n}\n\n.va-slider--vertical {\n  height: var(--va-slider-vertical-height);\n  padding: var(--va-slider-vertical-padding);\n  flex-direction: var(--va-slider-vertical-flex-direction);\n  align-items: var(--va-slider-vertical-align-items);\n\n  .va-input__label {\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\n  }\n\n  .va-input__label--inverse {\n    left: var(--va-slider-vertical-label-inverse-left);\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\n  }\n\n  .va-slider {\n    &__input-wrapper {\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\n      position: var(--va-slider-vertical-input-wrapper-position);\n      display: var(--va-slider-vertical-input-wrapper-display);\n\n      &:last-of-type {\n        margin-top: 1rem;\n      }\n    }\n\n    &__container {\n      height: 100%;\n      width: 0.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-vertical-track-height);\n      width: var(--va-slider-vertical-track-width);\n      bottom: var(--va-slider-vertical-track-bottom);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.75rem;\n      height: 0.125rem;\n      left: -2px;\n    }\n\n    &__handler {\n      transform: var(--va-slider-vertical-handler-transform);\n\n      &--inactive {\n        transition: bottom 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-vertical-dot-value-position);\n        top: var(--va-slider-vertical-dot-value-top);\n        left: var(--va-slider-vertical-dot-value-left);\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaSlider from './VaSlider.vue'\n\nexport const VaSlider = withConfigTransport(_VaSlider)\n"],"names":["validateSlider","value","step","min","max","range","Array","isArray","warn","inRange","v","map","script","defineComponent","name","components","VaIcon","emits","props","type","Boolean","default","modelValue","Number","trackLabel","Function","String","color","trackColor","labelColor","trackLabelVisible","label","invertLabel","disabled","readonly","pins","iconPrepend","iconAppend","vertical","showTrack","setup","emit","getColor","getHoverColor","useColors","sliderContainer","shallowRef","dot","setItemRefByIndex","itemRefs","dots","useArrayRefs","isFocused","ref","flag","offset","size","currentValue","currentSliderDotIndex","hasMouseDown","orders","computed","pinPositionStyle","trackSizeStyle","moreToLess","val","lessToMore","sliderClass","useBem","pick","active","horizontal","grabbing","dotClass","onFocus","inactive","labelStyles","trackStyles","backgroundColor","processedStyles","validatedValue","limitValue","val0","val1","visibility","dottedStyles","isActiveDot","borderColor","get","set","gap","total","multiple","decimals","split","Math","pow","length","pinsCol","position","limit","valueLimit","index","moving","e","preventDefault","setValueOnPos","getPos","touches","moveEnd","moveWithKeys","event","includes","document","activeElement","moveDot","isRange","where","which","splice","onePinInterval","nearestPinVal","key","isActive","el","isVerticalDot0More","isVerticalDot0Less","isVerticalDot1More","isVerticalDot1Less","isHorizontalDot0Less","isHorizontalDot0More","isHorizontalDot1Less","isHorizontalDot1More","_a","focus","_b","checkActivePin","pin","pinPositionStep","getStaticData","clientY","clientX","getBoundingClientRect","getValueByIndex","setCurrentValue","newValue","slider","isDiff","pixelPosition","valueRange","dotToFocus","round","a","b","JSON","stringify","ariaLabelIdComputed","generateUniqueId","ariaAttributesComputed","role","ariaValuemin","ariaValuemax","ariaLabelledby","ariaOrientation","ariaDisabled","ariaReadonly","ariaValuenow","undefined","onMounted","addEventListener","passive","onBeforeUnmount","removeEventListener","watch","documentElement","style","cursor","getValueByOrder","order","getPinStyles","transition","getDottedStyles","clickOnContainer","pos","touch","moveStart","getTrackLabel","class","_ctx","_attrs","$slots","append","prepend","_push","_parent","_ssrRenderAttr","$props","i","_ssrRenderClass","_ssrRenderStyle","_ssrRenderList","_ssrInterpolate","VaSlider","withConfigTransport","_VaSlider"],"mappings":"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"}