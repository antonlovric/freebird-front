{"version":3,"file":"index29.js","sources":["../../src/components/va-form/VaForm.vue","../../src/components/va-form/VaForm.vue?vue&type=template&id=848ce870&lang.js","../../src/components/va-form/index.ts"],"sourcesContent":["<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, Ref, onMounted, onUnmounted, nextTick, provide, inject } from 'vue'\n\nimport { FormServiceKey, FormChild, Form } from './consts'\n\nconst isVaForm = (value: any): value is Form => !!value.focusInvalid\n\nexport default defineComponent({\n  name: 'VaForm',\n  emits: ['validation'],\n  props: {\n    autofocus: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n  },\n\n  setup (props, { emit }) {\n    const nestedFormElements: Ref<(FormChild | Form)[]> = ref([])\n\n    const parentFormProvider = () => inject(FormServiceKey, undefined)\n\n    provide(FormServiceKey, {\n      onChildMounted: (child: FormChild | Form) => childMountedHandler(child),\n      onChildUnmounted: (removableChild: FormChild | Form) => childUnmountedHandler(removableChild),\n    })\n\n    const childMountedHandler = (child: FormChild | Form) => {\n      nestedFormElements.value.push(child)\n    }\n\n    const childUnmountedHandler = (removableChild: FormChild | Form) => {\n      nestedFormElements.value = nestedFormElements.value.filter(child => child !== removableChild)\n    }\n\n    /** @public */\n    const reset = () => {\n      nestedFormElements.value\n        .filter(({ reset }) => reset)\n        .forEach((item) => { item.reset() })\n    }\n\n    const resetValidation = () => {\n      nestedFormElements.value\n        .filter(({ resetValidation }) => resetValidation)\n        .forEach((item: any) => { item.resetValidation() })\n    }\n\n    const focus = () => { nestedFormElements.value.find(({ focus }) => focus)?.focus() }\n\n    const focusInvalid = () => {\n      const invalidComponent = nestedFormElements.value\n        .find((item) => !isVaForm(item) && item.hasError())\n\n      if (invalidComponent) {\n        invalidComponent.focus()\n      } else {\n        nestedFormElements.value\n          .forEach(item => isVaForm(item) && item.focusInvalid())\n      }\n    }\n\n    // validation for every nested child\n    const validate = () => { // NOTE: temporarily synchronous validation\n      const formValid = nestedFormElements.value\n        .filter(({ validate }) => validate)\n        .map((child) => child.validate()) // more readable than with 'forEach'\n        .every((isValid) => isValid)\n\n      emit('validation', formValid)\n\n      return formValid\n    }\n\n    const publicMethods: Form = {\n      reset,\n      resetValidation,\n      focus,\n      focusInvalid,\n      validate,\n    }\n\n    onMounted(() => {\n      parentFormProvider()?.onChildMounted?.(publicMethods)\n\n      if (props.autofocus) { nextTick(focus) }\n    })\n\n    onUnmounted(() => {\n      parentFormProvider()?.onChildUnmounted?.(publicMethods)\n    })\n\n    return publicMethods\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, Ref, onMounted, onUnmounted, nextTick, provide, inject } from 'vue'\n\nimport { FormServiceKey, FormChild, Form } from './consts'\n\nconst isVaForm = (value: any): value is Form => !!value.focusInvalid\n\nexport default defineComponent({\n  name: 'VaForm',\n  emits: ['validation'],\n  props: {\n    autofocus: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n  },\n\n  setup (props, { emit }) {\n    const nestedFormElements: Ref<(FormChild | Form)[]> = ref([])\n\n    const parentFormProvider = () => inject(FormServiceKey, undefined)\n\n    provide(FormServiceKey, {\n      onChildMounted: (child: FormChild | Form) => childMountedHandler(child),\n      onChildUnmounted: (removableChild: FormChild | Form) => childUnmountedHandler(removableChild),\n    })\n\n    const childMountedHandler = (child: FormChild | Form) => {\n      nestedFormElements.value.push(child)\n    }\n\n    const childUnmountedHandler = (removableChild: FormChild | Form) => {\n      nestedFormElements.value = nestedFormElements.value.filter(child => child !== removableChild)\n    }\n\n    /** @public */\n    const reset = () => {\n      nestedFormElements.value\n        .filter(({ reset }) => reset)\n        .forEach((item) => { item.reset() })\n    }\n\n    const resetValidation = () => {\n      nestedFormElements.value\n        .filter(({ resetValidation }) => resetValidation)\n        .forEach((item: any) => { item.resetValidation() })\n    }\n\n    const focus = () => { nestedFormElements.value.find(({ focus }) => focus)?.focus() }\n\n    const focusInvalid = () => {\n      const invalidComponent = nestedFormElements.value\n        .find((item) => !isVaForm(item) && item.hasError())\n\n      if (invalidComponent) {\n        invalidComponent.focus()\n      } else {\n        nestedFormElements.value\n          .forEach(item => isVaForm(item) && item.focusInvalid())\n      }\n    }\n\n    // validation for every nested child\n    const validate = () => { // NOTE: temporarily synchronous validation\n      const formValid = nestedFormElements.value\n        .filter(({ validate }) => validate)\n        .map((child) => child.validate()) // more readable than with 'forEach'\n        .every((isValid) => isValid)\n\n      emit('validation', formValid)\n\n      return formValid\n    }\n\n    const publicMethods: Form = {\n      reset,\n      resetValidation,\n      focus,\n      focusInvalid,\n      validate,\n    }\n\n    onMounted(() => {\n      parentFormProvider()?.onChildMounted?.(publicMethods)\n\n      if (props.autofocus) { nextTick(focus) }\n    })\n\n    onUnmounted(() => {\n      parentFormProvider()?.onChildUnmounted?.(publicMethods)\n    })\n\n    return publicMethods\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaForm from './VaForm.vue'\n\nexport const VaForm = withConfigTransport(_VaForm)\n"],"names":["isVaForm","value","focusInvalid","script","defineComponent","name","emits","props","autofocus","type","Boolean","default","tag","String","setup","emit","nestedFormElements","ref","parentFormProvider","inject","FormServiceKey","undefined","provide","onChildMounted","child","childMountedHandler","onChildUnmounted","removableChild","childUnmountedHandler","push","filter","focus","_a","find","publicMethods","reset","forEach","item","resetValidation","invalidComponent","hasError","validate","formValid","map","every","isValid","onMounted","_b","call","nextTick","onUnmounted","_ctx","_mergeProps","class","_attrs","_","_push","_parent","_scopeId","_renderSlot","$slots","VaForm","withConfigTransport","_VaForm"],"mappings":"ubAcA,MAAMA,SAAYC,KAAgCA,EAAMC,aAExD,IAAAC,EAAeC,EAAgB,CAC7BC,KAAM,SACNC,MAAO,CAAC,cACRC,MAAO,CACLC,UAAW,CAAEC,KAAMC,QAASC,SAAS,GACrCC,IAAK,CAAEH,KAAMI,OAAQF,QAAS,QAGhCG,MAAOP,GAAOQ,KAAEA,IACd,MAAMC,EAAgDC,EAAI,IAEpDC,mBAAqB,IAAMC,EAAOC,OAAgBC,GAExDC,EAAQF,EAAgB,CACtBG,eAAiBC,GAA4BC,oBAAoBD,GACjEE,iBAAmBC,GAAqCC,sBAAsBD,KAGhF,MAAMF,oBAAuBD,IAC3BR,EAAmBf,MAAM4B,KAAKL,IAG1BI,sBAAyBD,IAC7BX,EAAmBf,MAAQe,EAAmBf,MAAM6B,QAAON,GAASA,IAAUG,KAgB1EI,MAAQ,WAA6D,QAArDC,EAAAhB,EAAmBf,MAAMgC,MAAK,EAAGF,MAAAA,KAAYA,WAAQ,IAAAC,GAAAA,EAAAD,SA0BrEG,EAAsB,CAC1BC,MAvCY,KACZnB,EAAmBf,MAChB6B,QAAO,EAAGK,MAAAA,KAAYA,IACtBC,SAASC,IAAWA,EAAKF,YAqC5BG,gBAlCsB,KACtBtB,EAAmBf,MAChB6B,QAAO,EAAGQ,gBAAAA,KAAsBA,IAChCF,SAASC,IAAgBA,EAAKC,sBAgCjCP,MAAAA,MACA7B,aA5BmB,KACnB,MAAMqC,EAAmBvB,EAAmBf,MACzCgC,MAAMI,IAAUrC,SAASqC,IAASA,EAAKG,aAEtCD,EACFA,EAAiBR,QAEjBf,EAAmBf,MAChBmC,SAAQC,GAAQrC,SAASqC,IAASA,EAAKnC,kBAqB5CuC,SAhBe,KACf,MAAMC,EAAY1B,EAAmBf,MAClC6B,QAAO,EAAGW,SAAAA,KAAeA,IACzBE,KAAKnB,GAAUA,EAAMiB,aACrBG,OAAOC,GAAYA,IAItB,OAFA9B,EAAK,aAAc2B,GAEZA,IAqBT,OAVAI,GAAU,aAC+B,QAAvCC,EAAoB,QAApBf,EAAAd,4BAAoB,IAAAc,OAAA,EAAAA,EAAET,sBAAiB,IAAAwB,GAAAA,EAAAC,KAAAhB,EAAAE,GAEnC3B,EAAMC,WAAayC,EAASlB,UAGlCmB,GAAY,aAC+B,QAAzCH,EAAoB,QAApBf,EAAAd,4BAAoB,IAAAc,OAAA,EAAAA,EAAEN,wBAAmB,IAAAqB,GAAAA,EAAAC,KAAAhB,EAAAE,MAGpCA,6DChGFiB,EAAGvC,KAAAwC,EAAA,CADRC,MAAM,WAAQC,GAAA,YADhB,CAKWC,EAAAC,EAAAC,EAAAC,kBADTC,EAAOR,EAAAS,OAAA,gHCFEC,EAASC,EAAoBC"}