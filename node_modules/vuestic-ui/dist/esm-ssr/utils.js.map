{"version":3,"file":"utils.js","sources":["../../src/services/utils.ts"],"sourcesContent":["//  @ts-nocheck\nimport isObject from 'lodash/isObject.js'\nimport { __DEV__ } from '../utils/global-utils'\n\nexport const sleep = (ms = 0) => {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n// Taken from vuetify pretty much.\nexport const deepEqual = (a, b) => {\n  if (a === b) { return true }\n\n  // If the values aren't objects, they were already checked for equality\n  if (a !== Object(a) || b !== Object(b)) {\n    return false\n  }\n\n  // Handle dates as a special case\n  if (a instanceof Date && b instanceof Date) {\n    if (a.getTime() !== b.getTime()) { return false }\n  }\n\n  const props = Object.keys(a)\n\n  // Different number of props, don't bother to check\n  if (props.length !== Object.keys(b).length) {\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\n// vuestic-ui warn, currently is mostly a placeholder, but later might provide ability to disable warns etc.\nexport const warn = (...attrs) => {\n  if (__DEV__) {\n    // eslint-disable-next-line  no-console\n    console.warn(...attrs)\n  }\n  return false\n}\n\nexport const hasOwnProperty = (object, key) => {\n  // See https://eslint.org/docs/rules/no-prototype-builtins for explanation\n  // on why we don't use object.hasOwnProperty directly.\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n\n// Find value in the object with an array of keys\nexport const getNestedValue = (option, propsArray) => {\n  if (propsArray.length === 0) { return option }\n\n  const nestedItem = option[propsArray[0]]\n  if (!isObject(nestedItem)) {\n    if (propsArray.length === 1) {\n      return nestedItem\n    }\n    return undefined\n  }\n  return getNestedValue(nestedItem, propsArray.slice(1))\n}\n\n/**\n * Finds value in the object using string with dots 'key.key.key'\n *\n * @param option\n * @param prop\n */\nexport const getValueByPath = <T extends Record<string, unknown>>(option: T, prop: string | keyof T) => {\n  if (prop in option) {\n    return option[prop]\n  }\n  prop = prop.replace(/^\\./, '') // remove first point symbol\n  return getNestedValue(option, prop.split('.'))\n}\n\n/**\n * Finds value of nested property inside of an object.\n *\n * @param option - Object to look properties inside\n * @param prop - string or function used to find nested property\n */\nexport const getValueByKey = <T extends (string | number | Record<string, unknown>)> (\n  option: T,\n  prop: string | ((option: T) => any),\n): any => {\n  // Can't access not object option\n  if (typeof option !== 'object' || !option) { return undefined }\n\n  if (!prop) { return option }\n  if (typeof prop === 'string') { return getValueByPath(option, prop) }\n  if (typeof prop === 'function') { return prop(option) }\n  return option\n}\n\nconst getRandomString = (stringLength = 4): string => {\n  return Math.random().toString(36).substring(2, stringLength + 2)\n}\n\nexport const generateUniqueId = () => {\n  return `${getRandomString(8)}-${getRandomString(4)}-${getRandomString(4)}`\n}\n"],"names":["sleep","ms","Promise","resolve","setTimeout","warn","attrs","__DEV__","console","hasOwnProperty","object","key","Object","prototype","call","getNestedValue","option","propsArray","length","nestedItem","isObject","slice","getValueByPath","prop","replace","split","getValueByKey","getRandomString","stringLength","Math","random","toString","substring","generateUniqueId"],"mappings":"mFAIaA,MAAQ,CAACC,EAAK,IAClB,IAAIC,SAAQC,GAAWC,WAAWD,EAASF,KA4BvCI,KAAO,IAAIC,KAClBC,GAEFC,QAAQH,QAAQC,IAEX,GAGIG,eAAiB,CAACC,EAAQC,IAG9BC,OAAOC,UAAUJ,eAAeK,KAAKJ,EAAQC,GAIzCI,eAAiB,CAACC,EAAQC,KACrC,GAA0B,IAAtBA,EAAWC,OAAgB,OAAOF,EAEtC,MAAMG,EAAaH,EAAOC,EAAW,IACrC,OAAKG,EAASD,GAMPJ,eAAeI,EAAYF,EAAWI,MAAM,IALvB,IAAtBJ,EAAWC,OACNC,OAET,GAWSG,eAAiB,CAAoCN,EAAWO,IACvEA,KAAQP,EACHA,EAAOO,IAEhBA,EAAOA,EAAKC,QAAQ,MAAO,IACpBT,eAAeC,EAAQO,EAAKE,MAAM,OAS9BC,cAAgB,CAC3BV,EACAO,KAGA,GAAsB,iBAAXP,GAAwBA,EAEnC,OAAKO,EACe,iBAATA,EAA4BD,eAAeN,EAAQO,GAC1C,mBAATA,EAA8BA,EAAKP,GACvCA,EAHaA,GAMhBW,gBAAkB,CAACC,EAAe,IAC/BC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAGJ,EAAe,GAGnDK,iBAAmB,IACvB,GAAGN,gBAAgB,MAAMA,gBAAgB,MAAMA,gBAAgB"}