{"version":3,"file":"index27.js","sources":["../../src/composables/useClickOutside.ts","../../src/composables/useDebounce.ts","../../src/components/va-dropdown/VaDropdown.vue","../../src/components/va-dropdown/VaDropdown.vue?vue&type=template&id=6d4e48a8&lang.js","../../src/components/va-dropdown/components/VaDropdownContent/VaDropdownContent.vue","../../src/components/va-dropdown/components/VaDropdownContent/VaDropdownContent.vue?vue&type=template&id=e6910544&lang.js","../../src/components/va-dropdown/components/VaDropdownContent/index.ts","../../src/components/va-dropdown/index.ts"],"sourcesContent":["import { Ref, unref } from 'vue'\nimport { useCaptureEvent } from './useCaptureEvent'\n\nconst checkIfElementChild = (parent: HTMLElement, child: HTMLElement | null | undefined): boolean => {\n  if (!child) { return false }\n  if (child.parentElement === parent) { return true }\n\n  return parent.contains(child)\n}\n\ntype MaybeRef<T> = T | Ref<T>\ntype MaybeArray<T> = T | T[]\n\nconst safeArray = <T>(a: MaybeArray<T>) => Array.isArray(a) ? a : [a]\n\nexport const useClickOutside = (elements: MaybeArray<MaybeRef<HTMLElement | undefined>>, cb: (el: HTMLElement) => void) => {\n  useCaptureEvent('click', (event: MouseEvent) => {\n    const clickTarget = event.target as HTMLElement\n\n    const isClickInside = safeArray(elements)\n      .some((element) => unref(element) && checkIfElementChild(unref(element) as HTMLElement, clickTarget))\n\n    if (!isClickInside) { cb(clickTarget) }\n  })\n}\n","import { isRef, Ref, unref, watch } from 'vue'\nimport debounce from 'lodash/debounce.js'\n\nexport const useDebounce = <T>(onUpdate: () => any, timeout: Ref<number> | number) => {\n  const createDebounced = () => {\n    return debounce(() => {\n      onUpdate()\n    }, unref(timeout))\n  }\n\n  let debounced = createDebounced()\n\n  if (isRef(timeout)) {\n    watch(timeout, () => { debounced = createDebounced() })\n  }\n\n  return {\n    // todo check if we need to create proxy here\n    debounced,\n  }\n}\n\n/** Used for debounced callbacks. Can be used to show cb near debounce call in code structure. */\nexport const useDebounceFn = (timeout: Ref<number> | number) => {\n  let callback: (() => void) | null = null\n  const createDebounced = () => {\n    return debounce(() => {\n      callback?.()\n      callback = null\n    }, unref(timeout))\n  }\n\n  let debounced = createDebounced()\n\n  if (isRef(timeout)) {\n    watch(timeout, () => { debounced = createDebounced() })\n  }\n\n  return {\n    // todo check if we need to create proxy here\n    debounced: (cb: (() => void)) => { callback = cb; debounced() },\n    cancel: () => debounced.cancel(),\n  }\n}\n","<template>\n  <div\n    class=\"va-dropdown\"\n    :class=\"computedClass\"\n    aria-haspopup=\"listbox\"\n    :aria-disabled=\"$props.disabled\"\n    :aria-expanded=\"!!valueComputed\"\n  >\n    <div\n      ref=\"anchorRef\"\n      class=\"va-dropdown__anchor\"\n      @click=\"onAnchorClick\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n    >\n      <slot name=\"anchor\" />\n    </div>\n    <template v-if=\"valueComputed\">\n      <teleport :to=\"attachElement\" :disabled=\"disableAttachment\">\n        <div\n          ref=\"contentRef\"\n          class=\"va-dropdown__content-wrapper\"\n          @mouseover=\"$props.isContentHoverable && onMouseEnter()\"\n          @mouseout=\"onMouseLeave\"\n          @click.stop=\"emitAndClose('dropdown-content-click', closeOnContentClick)\"\n        >\n          <slot />\n        </div>\n      </teleport>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, shallowRef, toRef } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport {\n  useStateful, useStatefulEmits, useStatefulProps,\n  useDebounceFn,\n  usePopover, placementsPositions, Placement,\n  useClickOutside,\n  useBem,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaDropdown',\n\n  props: {\n    ...useStatefulProps,\n    stateful: { default: true },\n    modelValue: { type: Boolean, default: false },\n    disabled: { type: Boolean },\n    readonly: { type: Boolean },\n    anchorSelector: { type: String, default: '' },\n    attachElement: { type: String, default: 'body' },\n    disableAttachment: { type: Boolean, default: false },\n    keepAnchorWidth: { type: Boolean, default: false },\n    isContentHoverable: { type: Boolean, default: true },\n    closeOnContentClick: { type: Boolean, default: true },\n    closeOnClickOutside: { type: Boolean, default: true },\n    closeOnAnchorClick: { type: Boolean, default: true },\n    hoverOverTimeout: { type: Number, default: 30 },\n    hoverOutTimeout: { type: Number, default: 200 },\n    offset: { type: [Array, Number] as PropType<number | [number, number]>, default: 0 },\n    trigger: {\n      type: String as PropType<'click' | 'hover' | 'none'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'hover', 'none'].includes(value),\n    },\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (value: string) => placementsPositions.includes(value),\n    },\n  },\n\n  emits: [...useStatefulEmits, 'anchor-click', 'dropdown-content-click', 'click-outside'],\n\n  setup (props, { emit }) {\n    const anchorRef = shallowRef<HTMLElement>()\n    const contentRef = shallowRef<HTMLElement>()\n\n    const { valueComputed: statefulVal } = useStateful(props, emit)\n    const valueComputed = computed({\n      get: () => statefulVal.value && !props.disabled && !props.readonly,\n      set (val) { statefulVal.value = val },\n    })\n\n    const computedClass = useBem('va-dropdown', () => pick(props, ['disabled']))\n\n    // to be able to select specific anchor element inside anchorRef\n    const computedAnchorRef = computed(() => (\n      anchorRef.value && props.anchorSelector\n        ? anchorRef.value.querySelector(props.anchorSelector) || anchorRef.value\n        : anchorRef.value\n      ) as HTMLElement | undefined)\n\n    usePopover(computedAnchorRef, contentRef, computed(() => ({\n      placement: props.placement,\n      keepAnchorWidth: props.keepAnchorWidth,\n      offset: props.offset,\n      stickToEdges: true,\n      autoPlacement: true,\n      root: props.attachElement,\n    })))\n\n    const { debounced: debounceHover, cancel: cancelHoverDebounce } = useDebounceFn(toRef(props, 'hoverOverTimeout'))\n    const onMouseEnter = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      debounceHover(() => { valueComputed.value = true })\n      cancelUnHoverDebounce()\n    }\n\n    const { debounced: debounceUnHover, cancel: cancelUnHoverDebounce } = useDebounceFn(toRef(props, 'hoverOutTimeout'))\n    const onMouseLeave = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      if (props.isContentHoverable) {\n        debounceUnHover(() => { valueComputed.value = false })\n      } else {\n        valueComputed.value = false\n      }\n      cancelHoverDebounce()\n    }\n\n    const emitAndClose = (eventName: string, close?: boolean) => {\n      emit(eventName)\n      if (close) { valueComputed.value = false }\n    }\n\n    const onAnchorClick = () => {\n      if (props.trigger !== 'click' || props.disabled) { return }\n\n      if (valueComputed.value) {\n        emitAndClose('anchor-click', props.closeOnAnchorClick)\n      } else {\n        valueComputed.value = true\n        emit('anchor-click')\n      }\n    }\n\n    useClickOutside([anchorRef, contentRef], () => {\n      if (props.closeOnClickOutside && valueComputed.value) {\n        emitAndClose('click-outside', props.closeOnClickOutside)\n      }\n    })\n\n    return {\n      valueComputed,\n      anchorRef,\n      contentRef,\n      computedClass,\n      emitAndClose,\n      onAnchorClick,\n      onMouseEnter,\n      onMouseLeave,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-dropdown {\n  /* Solved the alignment problem (if we try to align inline and block elements) */\n  line-height: var(--va-dropdown-line-height);\n  font-family: var(--va-font-family);\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__content-wrapper {\n    /* overflow: hidden; */\n    z-index: var(--va-dropdown-content-wrapper-z-index);\n    font-family: var(--va-font-family);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-dropdown\"\n    :class=\"computedClass\"\n    aria-haspopup=\"listbox\"\n    :aria-disabled=\"$props.disabled\"\n    :aria-expanded=\"!!valueComputed\"\n  >\n    <div\n      ref=\"anchorRef\"\n      class=\"va-dropdown__anchor\"\n      @click=\"onAnchorClick\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n    >\n      <slot name=\"anchor\" />\n    </div>\n    <template v-if=\"valueComputed\">\n      <teleport :to=\"attachElement\" :disabled=\"disableAttachment\">\n        <div\n          ref=\"contentRef\"\n          class=\"va-dropdown__content-wrapper\"\n          @mouseover=\"$props.isContentHoverable && onMouseEnter()\"\n          @mouseout=\"onMouseLeave\"\n          @click.stop=\"emitAndClose('dropdown-content-click', closeOnContentClick)\"\n        >\n          <slot />\n        </div>\n      </teleport>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, shallowRef, toRef } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport {\n  useStateful, useStatefulEmits, useStatefulProps,\n  useDebounceFn,\n  usePopover, placementsPositions, Placement,\n  useClickOutside,\n  useBem,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaDropdown',\n\n  props: {\n    ...useStatefulProps,\n    stateful: { default: true },\n    modelValue: { type: Boolean, default: false },\n    disabled: { type: Boolean },\n    readonly: { type: Boolean },\n    anchorSelector: { type: String, default: '' },\n    attachElement: { type: String, default: 'body' },\n    disableAttachment: { type: Boolean, default: false },\n    keepAnchorWidth: { type: Boolean, default: false },\n    isContentHoverable: { type: Boolean, default: true },\n    closeOnContentClick: { type: Boolean, default: true },\n    closeOnClickOutside: { type: Boolean, default: true },\n    closeOnAnchorClick: { type: Boolean, default: true },\n    hoverOverTimeout: { type: Number, default: 30 },\n    hoverOutTimeout: { type: Number, default: 200 },\n    offset: { type: [Array, Number] as PropType<number | [number, number]>, default: 0 },\n    trigger: {\n      type: String as PropType<'click' | 'hover' | 'none'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'hover', 'none'].includes(value),\n    },\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (value: string) => placementsPositions.includes(value),\n    },\n  },\n\n  emits: [...useStatefulEmits, 'anchor-click', 'dropdown-content-click', 'click-outside'],\n\n  setup (props, { emit }) {\n    const anchorRef = shallowRef<HTMLElement>()\n    const contentRef = shallowRef<HTMLElement>()\n\n    const { valueComputed: statefulVal } = useStateful(props, emit)\n    const valueComputed = computed({\n      get: () => statefulVal.value && !props.disabled && !props.readonly,\n      set (val) { statefulVal.value = val },\n    })\n\n    const computedClass = useBem('va-dropdown', () => pick(props, ['disabled']))\n\n    // to be able to select specific anchor element inside anchorRef\n    const computedAnchorRef = computed(() => (\n      anchorRef.value && props.anchorSelector\n        ? anchorRef.value.querySelector(props.anchorSelector) || anchorRef.value\n        : anchorRef.value\n      ) as HTMLElement | undefined)\n\n    usePopover(computedAnchorRef, contentRef, computed(() => ({\n      placement: props.placement,\n      keepAnchorWidth: props.keepAnchorWidth,\n      offset: props.offset,\n      stickToEdges: true,\n      autoPlacement: true,\n      root: props.attachElement,\n    })))\n\n    const { debounced: debounceHover, cancel: cancelHoverDebounce } = useDebounceFn(toRef(props, 'hoverOverTimeout'))\n    const onMouseEnter = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      debounceHover(() => { valueComputed.value = true })\n      cancelUnHoverDebounce()\n    }\n\n    const { debounced: debounceUnHover, cancel: cancelUnHoverDebounce } = useDebounceFn(toRef(props, 'hoverOutTimeout'))\n    const onMouseLeave = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      if (props.isContentHoverable) {\n        debounceUnHover(() => { valueComputed.value = false })\n      } else {\n        valueComputed.value = false\n      }\n      cancelHoverDebounce()\n    }\n\n    const emitAndClose = (eventName: string, close?: boolean) => {\n      emit(eventName)\n      if (close) { valueComputed.value = false }\n    }\n\n    const onAnchorClick = () => {\n      if (props.trigger !== 'click' || props.disabled) { return }\n\n      if (valueComputed.value) {\n        emitAndClose('anchor-click', props.closeOnAnchorClick)\n      } else {\n        valueComputed.value = true\n        emit('anchor-click')\n      }\n    }\n\n    useClickOutside([anchorRef, contentRef], () => {\n      if (props.closeOnClickOutside && valueComputed.value) {\n        emitAndClose('click-outside', props.closeOnClickOutside)\n      }\n    })\n\n    return {\n      valueComputed,\n      anchorRef,\n      contentRef,\n      computedClass,\n      emitAndClose,\n      onAnchorClick,\n      onMouseEnter,\n      onMouseLeave,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-dropdown {\n  /* Solved the alignment problem (if we try to align inline and block elements) */\n  line-height: var(--va-dropdown-line-height);\n  font-family: var(--va-font-family);\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__content-wrapper {\n    /* overflow: hidden; */\n    z-index: var(--va-dropdown-content-wrapper-z-index);\n    font-family: var(--va-font-family);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-dropdown__content\"\n    :style=\"computedStyle\"\n    role=\"listbox\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useColors, useTextColor } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDropdownContent',\n  props: {\n    noPadding: { type: Boolean, default: false },\n    background: { type: String, default: 'white' },\n    textColor: { type: String },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'background'))\n\n    const computedStyle = computed(() => ({\n      background: getColor(props.background, undefined, true),\n      color: textColorComputed.value,\n      padding: props.noPadding ? 0 : undefined,\n    }))\n\n    return { computedStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-dropdown {\n  &__content {\n    padding: var(--va-dropdown-content-padding);\n    box-shadow: var(--va-dropdown-content-box-shadow);\n    border-radius: var(--va-dropdown-content-border-radius);\n    font-family: var(--va-font-family);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-dropdown__content\"\n    :style=\"computedStyle\"\n    role=\"listbox\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useColors, useTextColor } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDropdownContent',\n  props: {\n    noPadding: { type: Boolean, default: false },\n    background: { type: String, default: 'white' },\n    textColor: { type: String },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'background'))\n\n    const computedStyle = computed(() => ({\n      background: getColor(props.background, undefined, true),\n      color: textColorComputed.value,\n      padding: props.noPadding ? 0 : undefined,\n    }))\n\n    return { computedStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-dropdown {\n  &__content {\n    padding: var(--va-dropdown-content-padding);\n    box-shadow: var(--va-dropdown-content-box-shadow);\n    border-radius: var(--va-dropdown-content-border-radius);\n    font-family: var(--va-font-family);\n  }\n}\n</style>\n","import withConfigTransport from '../../../../services/config-transport/withConfigTransport'\nimport _VaDropdownContent from './VaDropdownContent.vue'\n\nexport const VaDropdownContent = withConfigTransport(_VaDropdownContent)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaDropdown from './VaDropdown.vue'\n\nexport const VaDropdown = withConfigTransport(_VaDropdown)\nexport { VaDropdownContent } from './components/VaDropdownContent'\n"],"names":["useClickOutside","elements","cb","useCaptureEvent","event","clickTarget","target","a","Array","isArray","some","element","unref","parent","child","parentElement","contains","useDebounceFn","timeout","callback","createDebounced","debounce","debounced","isRef","watch","cancel","script$1","defineComponent","name","props","useStatefulProps","stateful","default","modelValue","type","Boolean","disabled","readonly","anchorSelector","String","attachElement","disableAttachment","keepAnchorWidth","isContentHoverable","closeOnContentClick","closeOnClickOutside","closeOnAnchorClick","hoverOverTimeout","Number","hoverOutTimeout","offset","trigger","validator","value","includes","placement","placementsPositions","emits","useStatefulEmits","setup","emit","anchorRef","shallowRef","contentRef","valueComputed","statefulVal","useStateful","computed","get","set","val","computedClass","useBem","pick","computedAnchorRef","querySelector","usePopover","stickToEdges","autoPlacement","root","debounceHover","cancelHoverDebounce","toRef","debounceUnHover","cancelUnHoverDebounce","emitAndClose","eventName","close","onAnchorClick","onMouseEnter","onMouseLeave","class","_ctx","$props","_push","_parent","script","noPadding","background","textColor","getColor","useColors","textColorComputed","useTextColor","computedStyle","undefined","color","padding","style","role","VaDropdownContent","withConfigTransport","_VaDropdownContent","VaDropdown","_VaDropdown"],"mappings":"qwBAGA,MAYaA,gBAAkB,CAACC,EAAyDC,KACvFC,EAAgB,SAAUC,IACxB,MAAMC,EAAcD,EAAME,OAJZ,IAAIC,GAAAA,EAMcN,EANOO,MAAMC,QAAQF,GAAKA,EAAI,CAACA,IAO5DG,MAAMC,IAAYC,OAAAA,EAAMD,KAjBFE,EAiBkCD,EAAMD,MAjBnBG,EAiB4CT,KAfxFS,EAAMC,gBAAkBF,GAErBA,EAAOG,SAASF,KAJG,IAACD,EAAqBC,MAmBxBZ,EAAGG,OCChBY,cAAiBC,IAC5B,IAAIC,EAAgC,KACpC,MAAMC,gBAAkB,IACfC,GAAS,KACdF,MAAAA,GAAAA,IACAA,EAAW,OACVP,EAAMM,IAGX,IAAII,EAAYF,kBAMhB,OAJIG,EAAML,IACRM,EAAMN,GAAS,KAAQI,EAAYF,qBAG9B,CAELE,UAAYpB,IAAuBiB,EAAWjB,EAAIoB,KAClDG,OAAQ,IAAMH,EAAUG,WCI5B,IAAAC,EAAeC,EAAgB,CAC7BC,KAAM,aAENC,MAAO,IACFC,EACHC,SAAU,CAAEC,SAAS,GACrBC,WAAY,CAAEC,KAAMC,QAASH,SAAS,GACtCI,SAAU,CAAEF,KAAMC,SAClBE,SAAU,CAAEH,KAAMC,SAClBG,eAAgB,CAAEJ,KAAMK,OAAQP,QAAS,IACzCQ,cAAe,CAAEN,KAAMK,OAAQP,QAAS,QACxCS,kBAAmB,CAAEP,KAAMC,QAASH,SAAS,GAC7CU,gBAAiB,CAAER,KAAMC,QAASH,SAAS,GAC3CW,mBAAoB,CAAET,KAAMC,QAASH,SAAS,GAC9CY,oBAAqB,CAAEV,KAAMC,QAASH,SAAS,GAC/Ca,oBAAqB,CAAEX,KAAMC,QAASH,SAAS,GAC/Cc,mBAAoB,CAAEZ,KAAMC,QAASH,SAAS,GAC9Ce,iBAAkB,CAAEb,KAAMc,OAAQhB,QAAS,IAC3CiB,gBAAiB,CAAEf,KAAMc,OAAQhB,QAAS,KAC1CkB,OAAQ,CAAEhB,KAAM,CAAC1B,MAAOwC,QAAgDhB,QAAS,GACjFmB,QAAS,CACPjB,KAAMK,OACNP,QAAS,QACToB,UAAYC,GAAkB,CAAC,QAAS,QAAS,QAAQC,SAASD,IAEpEE,UAAW,CACTrB,KAAMK,OACNP,QAAS,SACToB,UAAYC,GAAkBG,EAAoBF,SAASD,KAI/DI,MAAO,IAAIC,EAAkB,eAAgB,yBAA0B,iBAEvEC,MAAO9B,GAAO+B,KAAEA,IACd,MAAMC,EAAYC,IACZC,EAAaD,KAEXE,cAAeC,GAAgBC,EAAYrC,EAAO+B,GACpDI,EAAgBG,EAAS,CAC7BC,IAAK,IAAMH,EAAYZ,QAAUxB,EAAMO,WAAaP,EAAMQ,SAC1DgC,IAAKC,GAAOL,EAAYZ,MAAQiB,KAG5BC,EAAgBC,EAAO,eAAe,IAAMC,EAAK5C,EAAO,CAAC,eAGzD6C,EAAoBP,GAAS,IACjCN,EAAUR,OAASxB,EAAMS,gBACrBuB,EAAUR,MAAMsB,cAAc9C,EAAMS,iBACpCuB,EAAUR,QAGhBuB,EAAWF,EAAmBX,EAAYI,GAAS,KAAO,CACxDZ,UAAW1B,EAAM0B,UACjBb,gBAAiBb,EAAMa,gBACvBQ,OAAQrB,EAAMqB,OACd2B,cAAc,EACdC,eAAe,EACfC,KAAMlD,EAAMW,mBAGd,MAAQlB,UAAW0D,EAAevD,OAAQwD,GAAwBhE,cAAciE,EAAMrD,EAAO,sBAQrFP,UAAW6D,EAAiB1D,OAAQ2D,GAA0BnE,cAAciE,EAAMrD,EAAO,oBAY3FwD,aAAe,CAACC,EAAmBC,KACvC3B,EAAK0B,GACDC,IAASvB,EAAcX,OAAQ,IAoBrC,OANArD,gBAAgB,CAAC6D,EAAWE,IAAa,KACnClC,EAAMgB,qBAAuBmB,EAAcX,OAC7CgC,aAAa,gBAAiBxD,EAAMgB,wBAIjC,CACLmB,cAAAA,EACAH,UAAAA,EACAE,WAAAA,EACAQ,cAAAA,EACAc,aAAAA,aACAG,cAvBoB,KACE,UAAlB3D,EAAMsB,SAAuBtB,EAAMO,WAEnC4B,EAAcX,MAChBgC,aAAa,eAAgBxD,EAAMiB,qBAEnCkB,EAAcX,OAAQ,EACtBO,EAAK,mBAiBP6B,aAhDmB,KACG,UAAlB5D,EAAMsB,SAAuBtB,EAAMO,WAEvC4C,GAAc,KAAQhB,EAAcX,OAAQ,KAC5C+B,MA6CAM,aAzCmB,KACG,UAAlB7D,EAAMsB,SAAuBtB,EAAMO,WAEnCP,EAAMc,mBACRwC,GAAgB,KAAQnB,EAAcX,OAAQ,KAE9CW,EAAcX,OAAQ,EAExB4B,0EC1HFU,MAAK,CAAC,cACEC,EAAarB,eACrB,gBAAc,UACb,gBAAeqB,EAAMC,OAACzD,SACtB,kBAAiBwD,EAAa5B,qGAWf4B,EAAa5B,mBAWjB8B,oGAVKF,EAAApD,cAA0BoD,EAAiBnD,kBAAAsD,wFCHhE,IAAAC,EAAerE,EAAgB,CAC7BC,KAAM,oBACNC,MAAO,CACLoE,UAAW,CAAE/D,KAAMC,QAASH,SAAS,GACrCkE,WAAY,CAAEhE,KAAMK,OAAQP,QAAS,SACrCmE,UAAW,CAAEjE,KAAMK,SAGrBoB,MAAO9B,GACL,MAAMuE,SAAEA,GAAaC,KACfC,kBAAEA,GAAsBC,EAAarB,EAAMrD,EAAO,eAQxD,MAAO,CAAE2E,cANarC,GAAS,KAAO,CACpC+B,WAAYE,EAASvE,EAAMqE,gBAAYO,GAAW,GAClDC,MAAOJ,EAAkBjD,MACzBsD,QAAS9E,EAAMoE,UAAY,OAAIQ,wEC5BjCd,MAAM,uBACLiB,MAAOhB,EAAaY,cACrBK,KAAK,iKCDIC,EAAoBC,EAAoBC,GCAxCC,EAAaF,EAAoBG"}