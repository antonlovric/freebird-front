{"version":3,"file":"VaTimePicker.js","sources":["../../src/components/va-time-picker/hooks/useTimePicker.ts","../../src/components/va-time-picker/components/VaTimePickerColumn/VaTimePickerColumn.vue","../../src/components/va-time-picker/components/VaTimePickerColumn/VaTimePickerColumn.vue?vue&type=template&id=73d5f299&lang.js","../../src/components/va-time-picker/VaTimePicker.vue","../../src/components/va-time-picker/components/VaTimePickerColumn/index.ts","../../src/components/va-time-picker/VaTimePicker.vue?vue&type=template&id=a2549b6e&lang.js"],"sourcesContent":["import { computed, ref, Ref, toRefs, watch } from 'vue'\nimport { TimePickerProps, ModelValueRef } from '../types'\n\n// Use safeModelValue if we need to update model value\nconst safeModelValue = (m: ModelValueRef) => m.value ? m.value : new Date(new Date().setHours(0, 0, 0, 0))\n\nconst createNumbersArray = (length: number) => Array.from(Array(length).keys())\n\n/**\n * Convert 00:00 -> 12:00 am, 00:01 -> 01:00 am.\n * So we need to changed 12 and 0 between two formats\n */\nconst from24to12 = (h: number) => (h === 0 ? 12 : h) - Number(h > 12) * 12\nconst from12to24 = (h: number, isAM = false) => (h === 12 ? 0 : h) + Number(isAM) * 12\n\nconst createHoursColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  const computedSize = computed(() => props.ampm ? 12 : 24)\n\n  const items = computed(() => {\n    let array = createNumbersArray(computedSize.value)\n\n    if (props.hoursFilter) {\n      array = array.filter((i) => props.hoursFilter!(props.ampm ? i + 12 * Number(isPM.value) : i))\n    }\n\n    return array.map((n) => {\n      return props.ampm ? from24to12(n) : n\n    })\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      if (props.ampm) {\n        const h = from24to12(modelValue.value.getHours() - 12 * Number(isPM.value))\n        return items.value.findIndex((i) => i === h)\n      }\n\n      const h = modelValue.value.getHours()\n\n      return items.value.findIndex((i) => i === h)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const hours = props.ampm ? from12to24(items.value[newIndex], isPM.value) : items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setHours(hours))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createMinutesColumn = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.minutesFilter) { return array }\n\n    return array.filter(props.minutesFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const m = modelValue.value.getMinutes()\n\n      return items.value.findIndex((i) => i === m)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setMinutes(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createSecondsColumn = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.secondsFilter) { return array }\n\n    return array.filter(props.secondsFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const s = modelValue.value.getSeconds()\n\n      return items.value.findIndex((i) => i === s)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setSeconds(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createPeriodColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  return computed(() => ({\n    items: ['AM', 'PM'],\n    activeItem: computed({\n      get: () => {\n        if (!modelValue.value) { return -1 }\n        return Number(isPM.value)\n      },\n      set: (val) => {\n        isPM.value = Boolean(val)\n        const h = safeModelValue(modelValue).getHours()\n        let h24 = isPM.value ? h + 12 : h\n\n        if (isPM.value && h <= 12) { h24 = h + 12 }\n        if (!isPM.value && h >= 12) { h24 = h - 12 }\n\n        // If there is no hoursFilter - it must be valid, otherwise validate hours\n        const isValidFilteredHour = !props.hoursFilter || props.hoursFilter(h24)\n\n        if (props.periodUpdatesModelValue && isValidFilteredHour) {\n          modelValue.value = new Date(safeModelValue(modelValue).setHours(h24))\n        }\n      },\n    }),\n  }))\n}\n\nexport const useTimePicker = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const { view } = toRefs(props)\n\n  const isPM = ref(false)\n  watch(modelValue, () => { isPM.value = safeModelValue(modelValue).getHours() >= 12 }, { immediate: true })\n\n  const hoursColumn = createHoursColumn(props, modelValue, isPM)\n  const minutesColumn = createMinutesColumn(props, modelValue)\n  const secondsColumn = createSecondsColumn(props, modelValue)\n  const periodColumn = createPeriodColumn(props, modelValue, isPM)\n\n  const columns = computed(() => {\n    const array = []\n\n    if (view.value === 'hours') {\n      array.push(hoursColumn.value)\n    } else if (view.value === 'minutes') {\n      array.push(hoursColumn.value, minutesColumn.value)\n    } else if (view.value === 'seconds') {\n      array.push(hoursColumn.value, minutesColumn.value, secondsColumn.value)\n    }\n    if (props.ampm && !props.hidePeriodSwitch) {\n      array.push(periodColumn.value)\n    }\n\n    return array\n  })\n\n  return {\n    columns,\n    isPM,\n  }\n}\n","<template>\n  <div\n    ref=\"rootElement\"\n    tabindex=\"0\"\n    class=\"va-time-picker-column\"\n    @keydown.down.stop.prevent=\"makeActiveNext()\"\n    @keydown.space.stop.prevent=\"makeActiveNext(5)\"\n    @keydown.up.stop.prevent=\"makeActivePrev()\"\n    @scroll.passive=\"onScroll\"\n    @touchmove.passive=\"onScroll\"\n  >\n    <div\n      v-for=\"(item, index) in items\" :key=\"item\"\n      class=\"va-time-picker-cell\"\n      :class=\"{ 'va-time-picker-cell--active': index === $props.activeItemIndex }\"\n      @click=\"onCellClick(index)\"\n    >\n      <slot name=\"cell\" v-bind=\"{ item, index, activeItemIndex, items, formattedItem: formatCell(item) }\">\n        {{ formatCell(item) }}\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, shallowRef, watch, onMounted, PropType } from 'vue'\n\nimport debounce from 'lodash/debounce.js'\nimport { useSyncProp, useFocus, useFocusEmits } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaTimePickerColumn',\n\n  props: {\n    items: { type: Array as PropType<string[] | number[]>, default: () => [] },\n    activeItemIndex: { type: Number, default: 0 },\n    cellHeight: { type: Number, default: 30 },\n  },\n\n  emits: ['item-selected', 'update:activeItemIndex', ...useFocusEmits],\n\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n    const { focus, blur } = useFocus(rootElement, emit)\n    const [syncActiveItemIndex] = useSyncProp('activeItemIndex', props, emit)\n\n    watch(syncActiveItemIndex, (newVal) => { scrollTo(newVal) })\n\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false))\n\n    const scrollTo = (index: number, animated = true) => {\n      nextTick(() => {\n        rootElement.value!.scrollTo({\n          behavior: animated ? 'smooth' : 'auto',\n          top: index * props.cellHeight,\n        })\n      })\n    }\n\n    const makeActiveByIndex = (index: number) => {\n      syncActiveItemIndex.value = index\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActiveNext = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActivePrev = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const onCellClick = (index: number) => {\n      syncActiveItemIndex.value = index\n    }\n\n    const formatCell = (n: number | string): string => {\n      if (!Number.isInteger(n)) { return n as string }\n\n      return n < 10 ? `0${n}` : `${n}`\n    }\n\n    const getIndex = () => {\n      const scrollTop = rootElement.value!.scrollTop\n      const calculatedIndex = Math.max(\n        (scrollTop - scrollTop % props.cellHeight) / props.cellHeight,\n        scrollTop / props.cellHeight,\n      )\n\n      if (syncActiveItemIndex.value * props.cellHeight < scrollTop) {\n        return Math.ceil(calculatedIndex)\n      } else if (syncActiveItemIndex.value * props.cellHeight > scrollTop) {\n        return Math.floor(calculatedIndex)\n      } else {\n        return Math.round(calculatedIndex)\n      }\n    }\n\n    const onScroll = debounce(() => {\n      if (rootElement.value && syncActiveItemIndex.value !== -1) {\n        syncActiveItemIndex.value = getIndex()\n      }\n    }, 200)\n\n    return {\n      rootElement,\n\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n      onScroll,\n\n      onCellClick,\n      formatCell,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import 'variables';\n  @import '../../../../styles/resources';\n\n  @mixin hiddenYScroll {\n    overflow-y: scroll;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n    &::-webkit-scrollbar { /* WebKit */\n      display: none;\n    }\n  }\n\n  .va-time-picker-column {\n    @include hiddenYScroll();\n\n    height: 100%;\n    border-right: var(--va-time-picker-column-border-right);\n\n    &::before,\n    &::after {\n      content: \"\";\n      display: block;\n      height: var(--va-time-picker-column-gap-height);\n      width: 100%;\n    }\n\n    &:last-child {\n      border-right: 0;\n    }\n\n    .va-time-picker-cell {\n      height: var(--va-time-picker-cell-height);\n      line-height: var(--va-time-picker-cell-height);\n      width: var(--va-time-picker-cell-width);\n      text-align: center;\n      cursor: var(--va-time-picker-cell-cursor);\n      user-select: none;\n\n      &--active {\n        position: relative;\n        color: var(--va-time-picker-cell-active-color);\n        z-index: 0;\n\n        &::before {\n          background: var(--va-time-picker-cell-active-background);\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          left: 0;\n          right: 0;\n          content: '';\n          z-index: -1;\n          opacity: var(--va-time-picker-cell-active-background-opacity);\n        }\n      }\n\n      &:hover {\n        background: var(--va-time-picker-cell-background-color-hover);\n      }\n    }\n\n    &:focus {\n      .va-time-picker-cell {\n        &--active {\n          @include focus-outline($radius: 4px, $offset: -2px);\n        }\n      }\n    }\n  }\n</style>\n","<template>\n  <div\n    ref=\"rootElement\"\n    tabindex=\"0\"\n    class=\"va-time-picker-column\"\n    @keydown.down.stop.prevent=\"makeActiveNext()\"\n    @keydown.space.stop.prevent=\"makeActiveNext(5)\"\n    @keydown.up.stop.prevent=\"makeActivePrev()\"\n    @scroll.passive=\"onScroll\"\n    @touchmove.passive=\"onScroll\"\n  >\n    <div\n      v-for=\"(item, index) in items\" :key=\"item\"\n      class=\"va-time-picker-cell\"\n      :class=\"{ 'va-time-picker-cell--active': index === $props.activeItemIndex }\"\n      @click=\"onCellClick(index)\"\n    >\n      <slot name=\"cell\" v-bind=\"{ item, index, activeItemIndex, items, formattedItem: formatCell(item) }\">\n        {{ formatCell(item) }}\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, shallowRef, watch, onMounted, PropType } from 'vue'\n\nimport debounce from 'lodash/debounce.js'\nimport { useSyncProp, useFocus, useFocusEmits } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaTimePickerColumn',\n\n  props: {\n    items: { type: Array as PropType<string[] | number[]>, default: () => [] },\n    activeItemIndex: { type: Number, default: 0 },\n    cellHeight: { type: Number, default: 30 },\n  },\n\n  emits: ['item-selected', 'update:activeItemIndex', ...useFocusEmits],\n\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n    const { focus, blur } = useFocus(rootElement, emit)\n    const [syncActiveItemIndex] = useSyncProp('activeItemIndex', props, emit)\n\n    watch(syncActiveItemIndex, (newVal) => { scrollTo(newVal) })\n\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false))\n\n    const scrollTo = (index: number, animated = true) => {\n      nextTick(() => {\n        rootElement.value!.scrollTo({\n          behavior: animated ? 'smooth' : 'auto',\n          top: index * props.cellHeight,\n        })\n      })\n    }\n\n    const makeActiveByIndex = (index: number) => {\n      syncActiveItemIndex.value = index\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActiveNext = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActivePrev = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const onCellClick = (index: number) => {\n      syncActiveItemIndex.value = index\n    }\n\n    const formatCell = (n: number | string): string => {\n      if (!Number.isInteger(n)) { return n as string }\n\n      return n < 10 ? `0${n}` : `${n}`\n    }\n\n    const getIndex = () => {\n      const scrollTop = rootElement.value!.scrollTop\n      const calculatedIndex = Math.max(\n        (scrollTop - scrollTop % props.cellHeight) / props.cellHeight,\n        scrollTop / props.cellHeight,\n      )\n\n      if (syncActiveItemIndex.value * props.cellHeight < scrollTop) {\n        return Math.ceil(calculatedIndex)\n      } else if (syncActiveItemIndex.value * props.cellHeight > scrollTop) {\n        return Math.floor(calculatedIndex)\n      } else {\n        return Math.round(calculatedIndex)\n      }\n    }\n\n    const onScroll = debounce(() => {\n      if (rootElement.value && syncActiveItemIndex.value !== -1) {\n        syncActiveItemIndex.value = getIndex()\n      }\n    }, 200)\n\n    return {\n      rootElement,\n\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n      onScroll,\n\n      onCellClick,\n      formatCell,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import 'variables';\n  @import '../../../../styles/resources';\n\n  @mixin hiddenYScroll {\n    overflow-y: scroll;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n    &::-webkit-scrollbar { /* WebKit */\n      display: none;\n    }\n  }\n\n  .va-time-picker-column {\n    @include hiddenYScroll();\n\n    height: 100%;\n    border-right: var(--va-time-picker-column-border-right);\n\n    &::before,\n    &::after {\n      content: \"\";\n      display: block;\n      height: var(--va-time-picker-column-gap-height);\n      width: 100%;\n    }\n\n    &:last-child {\n      border-right: 0;\n    }\n\n    .va-time-picker-cell {\n      height: var(--va-time-picker-cell-height);\n      line-height: var(--va-time-picker-cell-height);\n      width: var(--va-time-picker-cell-width);\n      text-align: center;\n      cursor: var(--va-time-picker-cell-cursor);\n      user-select: none;\n\n      &--active {\n        position: relative;\n        color: var(--va-time-picker-cell-active-color);\n        z-index: 0;\n\n        &::before {\n          background: var(--va-time-picker-cell-active-background);\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          left: 0;\n          right: 0;\n          content: '';\n          z-index: -1;\n          opacity: var(--va-time-picker-cell-active-background-opacity);\n        }\n      }\n\n      &:hover {\n        background: var(--va-time-picker-cell-background-color-hover);\n      }\n    }\n\n    &:focus {\n      .va-time-picker-cell {\n        &--active {\n          @include focus-outline($radius: 4px, $offset: -2px);\n        }\n      }\n    }\n  }\n</style>\n","<template>\n  <div\n    class=\"va-time-picker\"\n    :class=\"computedClasses\"\n    :style=\"computedStyles\"\n  >\n    <VaTimePickerColumn\n      v-for=\"(column, idx) in columns\" :key=\"idx\"\n      :ref=\"setItemRef\"\n      :items=\"column.items\"\n      :tabindex=\"disabled ? -1 : 0\"\n      :cell-height=\"$props.cellHeight\"\n      v-model:activeItemIndex=\"column.activeItem.value\"\n      @keydown.right.stop.prevent=\"focusNext()\"\n      @keydown.tab.exact.stop.prevent=\"focusNext()\"\n      @keydown.left.stop.prevent=\"focusPrev()\"\n      @keydown.shift.tab.stop.prevent=\"focusPrev()\"\n      @focus=\"activeColumnIndex = idx\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, PropType } from 'vue'\nimport { useTimePicker } from './hooks/useTimePicker'\n\nimport { VaTimePickerColumn } from './components/VaTimePickerColumn'\n\nimport {\n  useStatefulProps,\n  useStatefulEmits,\n  useStateful,\n  useFormProps,\n  useForm,\n  useArrayRefs,\n  useCSSVariables,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaTimePicker',\n\n  components: { VaTimePickerColumn },\n\n  props: {\n    ...useStatefulProps,\n    ...useFormProps,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true }, // Update model value when switching period automatically\n    view: { type: String as PropType<'hours' | 'minutes' | 'seconds'>, default: 'minutes' },\n    hoursFilter: { type: Function as PropType<(h: number) => boolean> },\n    minutesFilter: { type: Function as PropType<(h: number) => boolean> },\n    secondsFilter: { type: Function as PropType<(h: number) => boolean> },\n    framed: { type: Boolean, default: false },\n    cellHeight: { type: Number, default: 30 },\n    visibleCellsCount: { type: Number, default: 7 },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { columns, isPM } = useTimePicker(props, valueComputed)\n\n    const { setItemRef, itemRefs: pickers } = useArrayRefs()\n\n    const activeColumnIndex = ref<number>()\n\n    const focus = (idx = 0): void => {\n      pickers.value[idx]?.focus()\n    }\n\n    const blur = (idx?: number): void => {\n      idx ? pickers.value[idx]?.blur() : pickers.value.forEach((el) => el?.blur())\n    }\n\n    const { computedClasses: computedFormClasses } = useForm('va-time-picker', props)\n\n    const focusNext = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) + 1\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const focusPrev = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) - 1 + columns.value.length\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const computedClasses = computed(() => ({\n      ...computedFormClasses,\n      'va-time-picker--framed': props.framed,\n    }))\n\n    const computedStyles = useCSSVariables('va-time-picker', () => {\n      const gapHeight = (props.visibleCellsCount - 1) / 2 * props.cellHeight\n\n      return {\n        height: `${props.cellHeight * props.visibleCellsCount}px`,\n        'cell-height': `${props.cellHeight}px`,\n        'column-gap-height': `${gapHeight}px`,\n      }\n    })\n\n    return {\n      columns,\n      computedStyles,\n      computedClasses,\n      isPM,\n      pickers,\n      setItemRef,\n\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin after-overlay {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n  }\n\n  .va-time-picker {\n    display: var(--va-time-picker-display);\n    justify-content: center;\n    overflow: hidden;\n    height: var(--va-time-picker-height);\n    font-family: var(--va-font-family);\n\n    &--readonly {\n      @include after-overlay();\n    }\n\n    &--disabled {\n      @include after-overlay();\n\n      opacity: var(--va-time-picker-disabled-opacity);\n    }\n\n    &--framed {\n      position: relative;\n\n      &::before {\n        content: \"\";\n        height: var(--va-time-picker-cell-height);\n        width: 100%;\n        position: absolute;\n        top: 50%;\n        left: 0;\n        transform: translateY(-50%);\n        border-top: 1px solid var(--va-divider);\n        border-bottom: 1px solid var(--va-divider);\n        z-index: 0;\n      }\n    }\n  }\n</style>\n","import withConfigTransport from '../../../../services/config-transport/withConfigTransport'\nimport _VaTimePickerColumn from './VaTimePickerColumn.vue'\n\nexport const VaTimePickerColumn = withConfigTransport(_VaTimePickerColumn)\n","<template>\n  <div\n    class=\"va-time-picker\"\n    :class=\"computedClasses\"\n    :style=\"computedStyles\"\n  >\n    <VaTimePickerColumn\n      v-for=\"(column, idx) in columns\" :key=\"idx\"\n      :ref=\"setItemRef\"\n      :items=\"column.items\"\n      :tabindex=\"disabled ? -1 : 0\"\n      :cell-height=\"$props.cellHeight\"\n      v-model:activeItemIndex=\"column.activeItem.value\"\n      @keydown.right.stop.prevent=\"focusNext()\"\n      @keydown.tab.exact.stop.prevent=\"focusNext()\"\n      @keydown.left.stop.prevent=\"focusPrev()\"\n      @keydown.shift.tab.stop.prevent=\"focusPrev()\"\n      @focus=\"activeColumnIndex = idx\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, PropType } from 'vue'\nimport { useTimePicker } from './hooks/useTimePicker'\n\nimport { VaTimePickerColumn } from './components/VaTimePickerColumn'\n\nimport {\n  useStatefulProps,\n  useStatefulEmits,\n  useStateful,\n  useFormProps,\n  useForm,\n  useArrayRefs,\n  useCSSVariables,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaTimePicker',\n\n  components: { VaTimePickerColumn },\n\n  props: {\n    ...useStatefulProps,\n    ...useFormProps,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true }, // Update model value when switching period automatically\n    view: { type: String as PropType<'hours' | 'minutes' | 'seconds'>, default: 'minutes' },\n    hoursFilter: { type: Function as PropType<(h: number) => boolean> },\n    minutesFilter: { type: Function as PropType<(h: number) => boolean> },\n    secondsFilter: { type: Function as PropType<(h: number) => boolean> },\n    framed: { type: Boolean, default: false },\n    cellHeight: { type: Number, default: 30 },\n    visibleCellsCount: { type: Number, default: 7 },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { columns, isPM } = useTimePicker(props, valueComputed)\n\n    const { setItemRef, itemRefs: pickers } = useArrayRefs()\n\n    const activeColumnIndex = ref<number>()\n\n    const focus = (idx = 0): void => {\n      pickers.value[idx]?.focus()\n    }\n\n    const blur = (idx?: number): void => {\n      idx ? pickers.value[idx]?.blur() : pickers.value.forEach((el) => el?.blur())\n    }\n\n    const { computedClasses: computedFormClasses } = useForm('va-time-picker', props)\n\n    const focusNext = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) + 1\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const focusPrev = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) - 1 + columns.value.length\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const computedClasses = computed(() => ({\n      ...computedFormClasses,\n      'va-time-picker--framed': props.framed,\n    }))\n\n    const computedStyles = useCSSVariables('va-time-picker', () => {\n      const gapHeight = (props.visibleCellsCount - 1) / 2 * props.cellHeight\n\n      return {\n        height: `${props.cellHeight * props.visibleCellsCount}px`,\n        'cell-height': `${props.cellHeight}px`,\n        'column-gap-height': `${gapHeight}px`,\n      }\n    })\n\n    return {\n      columns,\n      computedStyles,\n      computedClasses,\n      isPM,\n      pickers,\n      setItemRef,\n\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin after-overlay {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n  }\n\n  .va-time-picker {\n    display: var(--va-time-picker-display);\n    justify-content: center;\n    overflow: hidden;\n    height: var(--va-time-picker-height);\n    font-family: var(--va-font-family);\n\n    &--readonly {\n      @include after-overlay();\n    }\n\n    &--disabled {\n      @include after-overlay();\n\n      opacity: var(--va-time-picker-disabled-opacity);\n    }\n\n    &--framed {\n      position: relative;\n\n      &::before {\n        content: \"\";\n        height: var(--va-time-picker-cell-height);\n        width: 100%;\n        position: absolute;\n        top: 50%;\n        left: 0;\n        transform: translateY(-50%);\n        border-top: 1px solid var(--va-divider);\n        border-bottom: 1px solid var(--va-divider);\n        z-index: 0;\n      }\n    }\n  }\n</style>\n"],"names":["safeModelValue","m","value","Date","setHours","createNumbersArray","length","Array","from","keys","from24to12","h","Number","createHoursColumn","props","modelValue","isPM","computedSize","computed","ampm","items","array","hoursFilter","filter","i","map","n","activeItem","get","getHours","findIndex","set","newIndex","readonly","hours","isAM","from12to24","useTimePicker","view","toRefs","ref","watch","immediate","hoursColumn","minutesColumn","minutesFilter","getMinutes","v","setMinutes","createMinutesColumn","secondsColumn","secondsFilter","s","getSeconds","setSeconds","createSecondsColumn","periodColumn","val","Boolean","h24","isValidFilteredHour","periodUpdatesModelValue","createPeriodColumn","columns","push","hidePeriodSwitch","script$1","defineComponent","name","type","default","activeItemIndex","cellHeight","emits","useFocusEmits","setup","emit","rootElement","shallowRef","focus","blur","useFocus","syncActiveItemIndex","useSyncProp","newVal","scrollTo","onMounted","index","animated","nextTick","behavior","top","onScroll","debounce","scrollTop","calculatedIndex","Math","max","ceil","floor","round","getIndex","makeActiveNext","times","makeActivePrev","makeActiveByIndex","onCellClick","formatCell","isInteger","tabindex","class","_ctx","item","$props","formattedItem","_push","_ssrInterpolate","script","components","VaTimePickerColumn","withConfigTransport","_VaTimePickerColumn","useStatefulProps","useFormProps","required","String","Function","framed","visibleCellsCount","useStatefulEmits","valueComputed","useStateful","setItemRef","itemRefs","pickers","useArrayRefs","activeColumnIndex","idx","_a","computedClasses","computedFormClasses","useForm","computedStyles","useCSSVariables","gapHeight","height","focusNext","nextIndex","focusPrev","forEach","el","style","column","key","$event"],"mappings":"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"}