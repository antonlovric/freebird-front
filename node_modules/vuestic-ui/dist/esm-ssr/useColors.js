import{m as o}from"./global-config.js";import{ColorTranslator as e}from"colortranslator";const colorToRgba=(o,s)=>new e(o).setA(s).RGBA,getTextColor=(o,s="dark",t="white")=>{const{R:r,G:n,B:l}=new e(o);return Math.sqrt(r*r*.241+n*n*.691+l*l*.068)>130?s:t},getBoxShadowColor=o=>new e(o).setA(.4).RGBA,getHoverColor=o=>new e(o).setA(.2).RGBA,getFocusColor=o=>new e(o).setA(.3).RGBA,shiftHSLAColor=(o,s)=>{const t=new e(o);return s.h&&t.setH(t.H+s.h),s.s&&t.setS(t.S+s.s),s.l&&t.setL(t.L+s.l),s.a&&t.setA(t.A+s.a),t.HSLA},setHSLAColor=(o,s)=>{const t=new e(o);return void 0!==s.h&&t.setH(s.h),void 0!==s.s&&t.setS(s.s),void 0!==s.l&&t.setL(s.l),void 0!==s.a&&t.setA(s.a),t.HSLA},getGradientBackground=o=>{const s=(o=>{const s=e.toHSLA(o,!1);if(s.s<10)return shiftHSLAColor(s,{h:2,s:5,l:10});if(s.s<30)return shiftHSLAColor(s,{s:-14,l:11});if(s.h>=0&&s.h<44||s.h>=285)return shiftHSLAColor(s,{h:11,s:27,l:8});if(s.h>=44&&s.h<85)return shiftHSLAColor(s,{h:3,l:9});if(s.h>=85&&s.h<165)return shiftHSLAColor(s,{h:16,l:14});if(s.h>=165&&s.h<285)return shiftHSLAColor(s,{h:-15,s:3,l:2});throw new Error("This method should handle all colors. But it didn't for some reason.")})(o);return`linear-gradient(to right, ${s}, ${e.toHSLA(o)})`},s={color:{type:String,default:""}},useColors=()=>{const e=o();if(!e)throw new Error("useColors must be used in setup function or Vuestic GlobalConfigPlugin is not registered!");const{setGlobalConfig:s,getGlobalConfig:t}=e,getColors=()=>t().colors||{},getColor=(o,e,s)=>{e||(e=getColors().primary);const t=getColors();return o||(o=e),t[o]?s?`var(--va-${o})`:t[o]:/^#([\da-f]{3}){1,2}$|^#([\da-f]{4}){1,2}$|(rgb|hsl)a?\((\s*-?\d+%?\s*,){2}(\s*-?\d+%?\s*,?\s*\)?)(,\s*(0?\.\d+)?|1)?\)/.test(o.toLocaleLowerCase())||s&&(o=>/var\(--.+\)/.test(o))(o)?o:("production"!==process.env.NODE_ENV&&console.warn(`'${o}' is not a proper color! Use HEX or default color themes\n      names (https://vuestic.dev/en/styles/colors#default-color-themes)`),e)};return{setColors:o=>{s((e=>({...e,colors:{...e.colors,...o}})))},getColors:getColors,getColor:getColor,getBoxShadowColor:getBoxShadowColor,getHoverColor:getHoverColor,getFocusColor:getFocusColor,getGradientBackground:getGradientBackground,getTextColor:getTextColor,shiftHSLAColor:shiftHSLAColor,setHSLAColor:setHSLAColor,colorsToCSSVariable:(o,e="va")=>Object.keys(o).filter((e=>void 0!==o[e])).reduce(((s,t)=>(s[`--${e}-${t}`]=getColor(o[t],void 0,!0),s)),{})}};export{getGradientBackground as a,s as b,getFocusColor as c,getHoverColor as d,colorToRgba as e,getBoxShadowColor as g,shiftHSLAColor as s,useColors as u};
//# sourceMappingURL=useColors.js.map
