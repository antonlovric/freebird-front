{"version":3,"file":"useTextColor.js","sources":["../../src/composables/useTextColor.ts"],"sourcesContent":["import { computed, getCurrentInstance, Ref, unref } from 'vue'\n\nimport { useColors } from './useColors'\n\ntype PropsType = {\n  textColor: string,\n  color?: string\n}\n\n/**\n * @param componentColor component color. By default `props.color`.\n * @param isTransparent if transparent will return component color as text color.\n * @returns Computed text color based on component's color if `props.textColor` if provided.\n */\nexport const useTextColor = (componentColor?: Ref<string> | undefined, isTransparent: boolean | Ref<boolean> = false) => {\n  const { props } = getCurrentInstance() as unknown as { props: PropsType }\n  const { getColor, getTextColor } = useColors()\n\n  const textColorComputed = computed(() => {\n    if (props.textColor) { return getColor(props.textColor) }\n\n    const componentColorHex = getColor(unref(componentColor) || props.color)\n    return unref(isTransparent) ? componentColorHex : getColor(getTextColor(componentColorHex))\n  })\n\n  return { textColorComputed }\n}\n"],"names":["useTextColor","componentColor","isTransparent","props","getCurrentInstance","getColor","getTextColor","useColors","textColorComputed","computed","textColor","componentColorHex","unref","color"],"mappings":"qGAca,MAAAA,aAAe,CAACC,EAA0CC,GAAwC,KAC7G,MAAMC,MAAEA,GAAUC,KACZC,SAAEA,EAAQC,aAAEA,GAAiBC,IASnC,MAAO,CAAEC,kBAPiBC,GAAS,KACjC,GAAIN,EAAMO,UAAa,OAAOL,EAASF,EAAMO,WAE7C,MAAMC,EAAoBN,EAASO,EAAMX,IAAmBE,EAAMU,OAClE,OAAOD,EAAMV,GAAiBS,EAAoBN,EAASC,EAAaK"}