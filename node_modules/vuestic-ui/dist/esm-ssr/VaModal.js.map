{"version":3,"file":"VaModal.js","sources":["../../src/components/va-modal/VaModal.vue","../../src/components/va-modal/VaModal.vue?vue&type=template&id=fb3de2a4&lang.js","../../src/components/va-modal/VaModal.ts"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-modal-entry\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n    :aria-labelledby=\"title\"\n    :class=\"$props.anchorClass\"\n  >\n    <div v-if=\"$slots.anchor\" class=\"va-modal__anchor\">\n      <slot name=\"anchor\" v-bind=\"{ show, hide, toggle }\" />\n    </div>\n\n    <teleport :to=\"attachElement\" :disabled=\"$props.disableAttachment\">\n      <modal-element\n        name=\"va-modal\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        :duration=\"300\"\n        v-bind=\"$attrs\"\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div class=\"va-modal\" v-if=\"valueComputed\">\n          <div\n            v-if=\"$props.overlay\"\n            class=\"va-modal__overlay\"\n            :style=\"computedOverlayStyles\"\n            @click=\"onOutsideClick\"\n          />\n          <div\n            class=\"va-modal__container\"\n            :style=\"computedModalContainerStyle\"\n          >\n            <div\n              class=\"va-modal__dialog\"\n              :class=\"computedClass\"\n              :style=\"computedDialogStyle\"\n            >\n              <va-icon\n                v-if=\"$props.fullscreen\"\n                name=\"close\"\n                class=\"va-modal__close\"\n                role=\"button\"\n                aria-label=\"close\"\n                aria-hidden=\"false\"\n                tabindex=\"0\"\n                @click=\"cancel\"\n                @keydown.space=\"cancel\"\n                @keydown.enter=\"cancel\"\n              />\n              <div\n                class=\"va-modal__inner\"\n                :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n              >\n                <div v-if=\"$slots.content\">\n                  <slot name=\"content\" v-bind=\"{ cancel, ok }\" />\n                </div>\n                <template v-if=\"!$slots.content\">\n                  <div\n                    v-if=\"title\"\n                    class=\"va-modal__title\"\n                    :style=\"{ color: getColor('primary') }\"\n                  >\n                    {{ $props.title }}\n                  </div>\n                  <div\n                    v-if=\"$slots.header\"\n                    class=\"va-modal__header\"\n                  >\n                    <slot name=\"header\" />\n                  </div>\n                  <div\n                    v-if=\"$props.message\"\n                    class=\"va-modal__message\"\n                  >\n                    {{ $props.message }}\n                  </div>\n                  <div\n                    v-if=\"$slots.default\"\n                    class=\"va-modal__message\"\n                  >\n                    <slot />\n                  </div>\n                  <div\n                    v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                    class=\"va-modal__footer\"\n                  >\n                    <va-button\n                      v-if=\"$props.cancelText\"\n                      color=\"gray\"\n                      class=\"mr-2\"\n                      flat\n                      @click=\"cancel\"\n                    >\n                      {{ $props.cancelText }}\n                    </va-button>\n                    <va-button @click=\"ok\">\n                      {{ $props.okText }}\n                    </va-button>\n                  </div>\n                  <div\n                    v-if=\"$slots.footer\"\n                    class=\"va-modal__footer\"\n                  >\n                    <slot name=\"footer\" />\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </modal-element>\n    </teleport>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch, h, Transition, defineComponent, PropType, computed, StyleValue, shallowRef, toRef } from 'vue'\n\nimport { useStateful, useStatefulProps, useStatefulEmits, useColors, useTextColor } from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaIcon } from '../va-icon'\n\nconst ModalElement = defineComponent({\n  name: 'ModalElement',\n  inheritAttrs: false,\n  props: {\n    isTransition: { type: Boolean, default: true },\n  },\n  setup: (props, { slots, attrs }) => () => props.isTransition\n    ? h(Transition, { ...attrs }, slots)\n    : slots.default?.(attrs),\n})\n\nexport default defineComponent({\n  name: 'VaModal',\n  inheritAttrs: false,\n  components: { VaButton, VaIcon, ModalElement },\n  emits: [\n    ...useStatefulEmits,\n    'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside',\n  ],\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: false },\n    attachElement: { type: String, default: 'body' },\n    disableAttachment: { type: Boolean, default: false },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    okText: { type: String, default: 'OK' },\n    cancelText: { type: String, default: 'Cancel' },\n    hideDefaultActions: { type: Boolean, default: false },\n    fullscreen: { type: Boolean, default: false },\n    mobileFullscreen: { type: Boolean, default: true },\n    noDismiss: { type: Boolean, default: false },\n    noOutsideDismiss: { type: Boolean, default: false },\n    noEscDismiss: { type: Boolean, default: false },\n    maxWidth: { type: String, default: '' },\n    maxHeight: { type: String, default: '' },\n    anchorClass: { type: String },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    fixedLayout: { type: Boolean, default: false },\n    withoutTransitions: { type: Boolean, default: false },\n    overlay: { type: Boolean, default: true },\n    overlayOpacity: { type: [Number, String], default: 0.6 },\n    blur: { type: Boolean, default: false },\n    zIndex: { type: [Number, String] },\n    backgroundColor: { type: String, default: 'white' },\n    noPadding: { type: Boolean, default: false },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'backgroundColor'))\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedClass = computed(() => ({\n      'va-modal--fullscreen': props.fullscreen,\n      'va-modal--mobile-fullscreen': props.mobileFullscreen,\n      'va-modal--fixed-layout': props.fixedLayout,\n      'va-modal--no-padding': props.noPadding,\n      [`va-modal--size-${props.size}`]: props.size !== 'medium',\n    }))\n    const computedModalContainerStyle = computed(() => ({ 'z-index': props.zIndex } as StyleValue))\n    const computedDialogStyle = computed(() => ({\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      color: textColorComputed.value,\n      background: getColor(props.backgroundColor),\n    }))\n    const computedOverlayStyles = computed(() => {\n      // NOTE Not sure exactly what that does.\n      // Supposedly solves some case when background wasn't shown.\n      // As a side effect removes background from nested modals.\n\n      const moreThanOneModalIsOpen = !!document.querySelectorAll('.va-modal__overlay').length\n\n      if (!props.overlay || moreThanOneModalIsOpen) { return }\n\n      return {\n        'background-color': `rgba(0, 0, 0, ${props.overlayOpacity})`,\n        'z-index': props.zIndex && Number(props.zIndex) - 1,\n      } as StyleValue\n    })\n\n    const show = () => { valueComputed.value = true }\n    const hide = () => { valueComputed.value = false }\n    const toggle = () => { valueComputed.value = !valueComputed.value }\n    const cancel = () => { hide(); emit('cancel') }\n    const ok = () => { hide(); emit('ok') }\n\n    const onOutsideClick = () => {\n      if (props.noOutsideDismiss || props.noDismiss) { return }\n\n      emit('click-outside')\n      cancel()\n    }\n\n    const onBeforeEnterTransition = (el: HTMLElement) => emit('before-open', el)\n    const onAfterEnterTransition = (el: HTMLElement) => emit('open', el)\n    const onBeforeLeaveTransition = (el: HTMLElement) => emit('before-close', el)\n    const onAfterLeaveTransition = (el: HTMLElement) => emit('close', el)\n\n    const listenKeyUp = (e: KeyboardEvent & { modalsCounter?: number }) => {\n      e.modalsCounter = e.modalsCounter ? e.modalsCounter + 1 : 1\n      const modalNumber = e.modalsCounter\n      const isOnTop = () => e.modalsCounter === modalNumber\n\n      const hideModal = () => {\n        if (e.code === 'Escape' && !props.noEscDismiss && !props.noDismiss && isOnTop()) {\n          cancel()\n        }\n      }\n\n      setTimeout(hideModal)\n    }\n\n    watch(valueComputed, (value: boolean) => {\n      if (value) {\n        window.addEventListener('keyup', listenKeyUp)\n      } else {\n        window.removeEventListener('keyup', listenKeyUp)\n      }\n\n      if (props.blur) {\n        if (value) {\n          document.body.classList.add('va-modal-overlay-background--blurred')\n        } else {\n          document.body.classList.remove('va-modal-overlay-background--blurred')\n        }\n      }\n    }, { immediate: true })\n\n    const publicMethods = {\n      show,\n      hide,\n      toggle,\n      cancel,\n      ok,\n      onOutsideClick,\n      onBeforeEnterTransition,\n      onAfterEnterTransition,\n      onBeforeLeaveTransition,\n      onAfterLeaveTransition,\n      listenKeyUp,\n    }\n\n    return {\n      getColor,\n      rootElement,\n      valueComputed,\n      computedClass,\n      computedDialogStyle,\n      computedModalContainerStyle,\n      computedOverlayStyles,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-modal-overlay-background--blurred > :not(div[class*=\"va-\"]) {\n  filter: blur(var(--va-modal-overlay-background-blur-radius));\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n  }\n\n  &-enter-from &__container,\n  &-leave-to &__container {\n    opacity: 0;\n    transform: translateY(-30%);\n  }\n\n  &-enter-active &__container,\n  &-leave-active &__container {\n    transition: var(--va-modal-opacity-transition), var(--va-modal-transform-transition);\n  }\n\n  &__dialog {\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n  }\n\n  &-enter-from &__overlay,\n  &-leave-to &__overlay {\n    opacity: 0;\n  }\n\n  &-enter-active &__overlay,\n  &-leave-active &_overlay {\n    transition: var(--va-modal-overlay-opacity-transition);\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      margin: 0 !important;\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: var(--va-modal-padding-top) 0 var(--va-modal-padding-bottom);\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n      }\n\n      .va-modal__message {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &--no-padding {\n    .va-modal__inner {\n      padding: 0;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: var(--va-modal-padding);\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-style: normal;\n    color: var(--va-secondary);\n    z-index: 1;\n\n    &:focus {\n      @include focus-outline;\n    }\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-modal-entry\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n    :aria-labelledby=\"title\"\n    :class=\"$props.anchorClass\"\n  >\n    <div v-if=\"$slots.anchor\" class=\"va-modal__anchor\">\n      <slot name=\"anchor\" v-bind=\"{ show, hide, toggle }\" />\n    </div>\n\n    <teleport :to=\"attachElement\" :disabled=\"$props.disableAttachment\">\n      <modal-element\n        name=\"va-modal\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        :duration=\"300\"\n        v-bind=\"$attrs\"\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div class=\"va-modal\" v-if=\"valueComputed\">\n          <div\n            v-if=\"$props.overlay\"\n            class=\"va-modal__overlay\"\n            :style=\"computedOverlayStyles\"\n            @click=\"onOutsideClick\"\n          />\n          <div\n            class=\"va-modal__container\"\n            :style=\"computedModalContainerStyle\"\n          >\n            <div\n              class=\"va-modal__dialog\"\n              :class=\"computedClass\"\n              :style=\"computedDialogStyle\"\n            >\n              <va-icon\n                v-if=\"$props.fullscreen\"\n                name=\"close\"\n                class=\"va-modal__close\"\n                role=\"button\"\n                aria-label=\"close\"\n                aria-hidden=\"false\"\n                tabindex=\"0\"\n                @click=\"cancel\"\n                @keydown.space=\"cancel\"\n                @keydown.enter=\"cancel\"\n              />\n              <div\n                class=\"va-modal__inner\"\n                :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n              >\n                <div v-if=\"$slots.content\">\n                  <slot name=\"content\" v-bind=\"{ cancel, ok }\" />\n                </div>\n                <template v-if=\"!$slots.content\">\n                  <div\n                    v-if=\"title\"\n                    class=\"va-modal__title\"\n                    :style=\"{ color: getColor('primary') }\"\n                  >\n                    {{ $props.title }}\n                  </div>\n                  <div\n                    v-if=\"$slots.header\"\n                    class=\"va-modal__header\"\n                  >\n                    <slot name=\"header\" />\n                  </div>\n                  <div\n                    v-if=\"$props.message\"\n                    class=\"va-modal__message\"\n                  >\n                    {{ $props.message }}\n                  </div>\n                  <div\n                    v-if=\"$slots.default\"\n                    class=\"va-modal__message\"\n                  >\n                    <slot />\n                  </div>\n                  <div\n                    v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                    class=\"va-modal__footer\"\n                  >\n                    <va-button\n                      v-if=\"$props.cancelText\"\n                      color=\"gray\"\n                      class=\"mr-2\"\n                      flat\n                      @click=\"cancel\"\n                    >\n                      {{ $props.cancelText }}\n                    </va-button>\n                    <va-button @click=\"ok\">\n                      {{ $props.okText }}\n                    </va-button>\n                  </div>\n                  <div\n                    v-if=\"$slots.footer\"\n                    class=\"va-modal__footer\"\n                  >\n                    <slot name=\"footer\" />\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </modal-element>\n    </teleport>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch, h, Transition, defineComponent, PropType, computed, StyleValue, shallowRef, toRef } from 'vue'\n\nimport { useStateful, useStatefulProps, useStatefulEmits, useColors, useTextColor } from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaIcon } from '../va-icon'\n\nconst ModalElement = defineComponent({\n  name: 'ModalElement',\n  inheritAttrs: false,\n  props: {\n    isTransition: { type: Boolean, default: true },\n  },\n  setup: (props, { slots, attrs }) => () => props.isTransition\n    ? h(Transition, { ...attrs }, slots)\n    : slots.default?.(attrs),\n})\n\nexport default defineComponent({\n  name: 'VaModal',\n  inheritAttrs: false,\n  components: { VaButton, VaIcon, ModalElement },\n  emits: [\n    ...useStatefulEmits,\n    'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside',\n  ],\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: false },\n    attachElement: { type: String, default: 'body' },\n    disableAttachment: { type: Boolean, default: false },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    okText: { type: String, default: 'OK' },\n    cancelText: { type: String, default: 'Cancel' },\n    hideDefaultActions: { type: Boolean, default: false },\n    fullscreen: { type: Boolean, default: false },\n    mobileFullscreen: { type: Boolean, default: true },\n    noDismiss: { type: Boolean, default: false },\n    noOutsideDismiss: { type: Boolean, default: false },\n    noEscDismiss: { type: Boolean, default: false },\n    maxWidth: { type: String, default: '' },\n    maxHeight: { type: String, default: '' },\n    anchorClass: { type: String },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    fixedLayout: { type: Boolean, default: false },\n    withoutTransitions: { type: Boolean, default: false },\n    overlay: { type: Boolean, default: true },\n    overlayOpacity: { type: [Number, String], default: 0.6 },\n    blur: { type: Boolean, default: false },\n    zIndex: { type: [Number, String] },\n    backgroundColor: { type: String, default: 'white' },\n    noPadding: { type: Boolean, default: false },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'backgroundColor'))\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedClass = computed(() => ({\n      'va-modal--fullscreen': props.fullscreen,\n      'va-modal--mobile-fullscreen': props.mobileFullscreen,\n      'va-modal--fixed-layout': props.fixedLayout,\n      'va-modal--no-padding': props.noPadding,\n      [`va-modal--size-${props.size}`]: props.size !== 'medium',\n    }))\n    const computedModalContainerStyle = computed(() => ({ 'z-index': props.zIndex } as StyleValue))\n    const computedDialogStyle = computed(() => ({\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      color: textColorComputed.value,\n      background: getColor(props.backgroundColor),\n    }))\n    const computedOverlayStyles = computed(() => {\n      // NOTE Not sure exactly what that does.\n      // Supposedly solves some case when background wasn't shown.\n      // As a side effect removes background from nested modals.\n\n      const moreThanOneModalIsOpen = !!document.querySelectorAll('.va-modal__overlay').length\n\n      if (!props.overlay || moreThanOneModalIsOpen) { return }\n\n      return {\n        'background-color': `rgba(0, 0, 0, ${props.overlayOpacity})`,\n        'z-index': props.zIndex && Number(props.zIndex) - 1,\n      } as StyleValue\n    })\n\n    const show = () => { valueComputed.value = true }\n    const hide = () => { valueComputed.value = false }\n    const toggle = () => { valueComputed.value = !valueComputed.value }\n    const cancel = () => { hide(); emit('cancel') }\n    const ok = () => { hide(); emit('ok') }\n\n    const onOutsideClick = () => {\n      if (props.noOutsideDismiss || props.noDismiss) { return }\n\n      emit('click-outside')\n      cancel()\n    }\n\n    const onBeforeEnterTransition = (el: HTMLElement) => emit('before-open', el)\n    const onAfterEnterTransition = (el: HTMLElement) => emit('open', el)\n    const onBeforeLeaveTransition = (el: HTMLElement) => emit('before-close', el)\n    const onAfterLeaveTransition = (el: HTMLElement) => emit('close', el)\n\n    const listenKeyUp = (e: KeyboardEvent & { modalsCounter?: number }) => {\n      e.modalsCounter = e.modalsCounter ? e.modalsCounter + 1 : 1\n      const modalNumber = e.modalsCounter\n      const isOnTop = () => e.modalsCounter === modalNumber\n\n      const hideModal = () => {\n        if (e.code === 'Escape' && !props.noEscDismiss && !props.noDismiss && isOnTop()) {\n          cancel()\n        }\n      }\n\n      setTimeout(hideModal)\n    }\n\n    watch(valueComputed, (value: boolean) => {\n      if (value) {\n        window.addEventListener('keyup', listenKeyUp)\n      } else {\n        window.removeEventListener('keyup', listenKeyUp)\n      }\n\n      if (props.blur) {\n        if (value) {\n          document.body.classList.add('va-modal-overlay-background--blurred')\n        } else {\n          document.body.classList.remove('va-modal-overlay-background--blurred')\n        }\n      }\n    }, { immediate: true })\n\n    const publicMethods = {\n      show,\n      hide,\n      toggle,\n      cancel,\n      ok,\n      onOutsideClick,\n      onBeforeEnterTransition,\n      onAfterEnterTransition,\n      onBeforeLeaveTransition,\n      onAfterLeaveTransition,\n      listenKeyUp,\n    }\n\n    return {\n      getColor,\n      rootElement,\n      valueComputed,\n      computedClass,\n      computedDialogStyle,\n      computedModalContainerStyle,\n      computedOverlayStyles,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-modal-overlay-background--blurred > :not(div[class*=\"va-\"]) {\n  filter: blur(var(--va-modal-overlay-background-blur-radius));\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n  }\n\n  &-enter-from &__container,\n  &-leave-to &__container {\n    opacity: 0;\n    transform: translateY(-30%);\n  }\n\n  &-enter-active &__container,\n  &-leave-active &__container {\n    transition: var(--va-modal-opacity-transition), var(--va-modal-transform-transition);\n  }\n\n  &__dialog {\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n  }\n\n  &-enter-from &__overlay,\n  &-leave-to &__overlay {\n    opacity: 0;\n  }\n\n  &-enter-active &__overlay,\n  &-leave-active &_overlay {\n    transition: var(--va-modal-overlay-opacity-transition);\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      margin: 0 !important;\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: var(--va-modal-padding-top) 0 var(--va-modal-padding-bottom);\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n      }\n\n      .va-modal__message {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &--no-padding {\n    .va-modal__inner {\n      padding: 0;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: var(--va-modal-padding);\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-style: normal;\n    color: var(--va-secondary);\n    z-index: 1;\n\n    &:focus {\n      @include focus-outline;\n    }\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaModal from './VaModal.vue'\n\nexport const VaModal = withConfigTransport(_VaModal)\n"],"names":["ModalElement","defineComponent","name","inheritAttrs","props","isTransition","type","Boolean","default","setup","slots","attrs","h","Transition","_a","call","script","components","VaButton","VaIcon","emits","useStatefulEmits","useStatefulProps","modelValue","attachElement","String","disableAttachment","title","message","okText","cancelText","hideDefaultActions","fullscreen","mobileFullscreen","noDismiss","noOutsideDismiss","noEscDismiss","maxWidth","maxHeight","anchorClass","size","validator","value","includes","fixedLayout","withoutTransitions","overlay","overlayOpacity","Number","blur","zIndex","backgroundColor","noPadding","emit","rootElement","shallowRef","getColor","useColors","textColorComputed","useTextColor","toRef","valueComputed","useStateful","computedClass","computed","computedModalContainerStyle","computedDialogStyle","color","background","computedOverlayStyles","moreThanOneModalIsOpen","document","querySelectorAll","length","hide","cancel","listenKeyUp","e","modalsCounter","modalNumber","setTimeout","code","watch","window","addEventListener","removeEventListener","body","classList","add","remove","immediate","publicMethods","show","toggle","ok","onOutsideClick","onBeforeEnterTransition","el","onAfterEnterTransition","onBeforeLeaveTransition","onAfterLeaveTransition","ref","class","_ctx","$props","role","$slots","anchor","_push","_parent","appear","duration","$attrs","_","_scopeId","_createBlock","style","onClick","_createVNode","_component_va_icon","tabindex","onKeydown","key","_renderSlot","content","_Fragment","_toDisplayString","_component_va_button","flat","_createTextVNode","_ssrRenderStyle","_ssrRenderSlot","_ssrInterpolate","header","footer","VaModal","withConfigTransport","_VaModal"],"mappings":"2zBA+HA,MAAMA,EAAeC,EAAgB,CACnCC,KAAM,eACNC,cAAc,EACdC,MAAO,CACLC,aAAc,CAAEC,KAAMC,QAASC,SAAS,IAE1CC,MAAO,CAACL,GAASM,MAAAA,EAAOC,MAAAA,KAAY,WAAM,OAAAP,EAAMC,aAC5CO,EAAEC,EAAY,IAAKF,GAASD,GACZ,UAAhBA,EAAMF,eAAU,IAAAM,OAAA,EAAAA,EAAAC,KAAAL,EAAAC,MAGtB,IAAAK,EAAef,EAAgB,CAC7BC,KAAM,UACNC,cAAc,EACdc,WAAY,CAAEC,SAAAA,EAAUC,OAAAA,EAAQnB,aAAAA,GAChCoB,MAAO,IACFC,EACH,SAAU,KAAM,cAAe,OAAQ,eAAgB,QAAS,iBAElEjB,MAAO,IACFkB,EACHC,WAAY,CAAEjB,KAAMC,QAASC,SAAS,GACtCgB,cAAe,CAAElB,KAAMmB,OAAQjB,QAAS,QACxCkB,kBAAmB,CAAEpB,KAAMC,QAASC,SAAS,GAC7CmB,MAAO,CAAErB,KAAMmB,OAAQjB,QAAS,IAChCoB,QAAS,CAAEtB,KAAMmB,OAAQjB,QAAS,IAClCqB,OAAQ,CAAEvB,KAAMmB,OAAQjB,QAAS,MACjCsB,WAAY,CAAExB,KAAMmB,OAAQjB,QAAS,UACrCuB,mBAAoB,CAAEzB,KAAMC,QAASC,SAAS,GAC9CwB,WAAY,CAAE1B,KAAMC,QAASC,SAAS,GACtCyB,iBAAkB,CAAE3B,KAAMC,QAASC,SAAS,GAC5C0B,UAAW,CAAE5B,KAAMC,QAASC,SAAS,GACrC2B,iBAAkB,CAAE7B,KAAMC,QAASC,SAAS,GAC5C4B,aAAc,CAAE9B,KAAMC,QAASC,SAAS,GACxC6B,SAAU,CAAE/B,KAAMmB,OAAQjB,QAAS,IACnC8B,UAAW,CAAEhC,KAAMmB,OAAQjB,QAAS,IACpC+B,YAAa,CAAEjC,KAAMmB,QACrBe,KAAM,CACJlC,KAAMmB,OACNjB,QAAS,SACTiC,UAAYC,GAAkB,CAAC,SAAU,QAAS,SAASC,SAASD,IAEtEE,YAAa,CAAEtC,KAAMC,QAASC,SAAS,GACvCqC,mBAAoB,CAAEvC,KAAMC,QAASC,SAAS,GAC9CsC,QAAS,CAAExC,KAAMC,QAASC,SAAS,GACnCuC,eAAgB,CAAEzC,KAAM,CAAC0C,OAAQvB,QAASjB,QAAS,IACnDyC,KAAM,CAAE3C,KAAMC,QAASC,SAAS,GAChC0C,OAAQ,CAAE5C,KAAM,CAAC0C,OAAQvB,SACzB0B,gBAAiB,CAAE7C,KAAMmB,OAAQjB,QAAS,SAC1C4C,UAAW,CAAE9C,KAAMC,QAASC,SAAS,IAEvCC,MAAOL,GAAOiD,KAAEA,IACd,MAAMC,EAAcC,KAEdC,SAAEA,GAAaC,KACfC,kBAAEA,GAAsBC,EAAaC,EAAMxD,EAAO,qBAClDyD,cAAEA,GAAkBC,EAAY1D,EAAOiD,GAEvCU,EAAgBC,GAAS,KAAO,CACpC,uBAAwB5D,EAAM4B,WAC9B,8BAA+B5B,EAAM6B,iBACrC,yBAA0B7B,EAAMwC,YAChC,uBAAwBxC,EAAMgD,UAC9B,CAAC,kBAAkBhD,EAAMoC,QAAwB,WAAfpC,EAAMoC,SAEpCyB,EAA8BD,GAAS,KAAO,CAAE,UAAW5D,EAAM8C,WACjEgB,EAAsBF,GAAS,KAAO,CAC1C3B,SAAUjC,EAAMiC,SAChBC,UAAWlC,EAAMkC,UACjB6B,MAAOT,EAAkBhB,MACzB0B,WAAYZ,EAASpD,EAAM+C,qBAEvBkB,EAAwBL,GAAS,KAKrC,MAAMM,IAA2BC,SAASC,iBAAiB,sBAAsBC,OAEjF,GAAKrE,EAAM0C,UAAWwB,EAEtB,MAAO,CACL,mBAAoB,iBAAiBlE,EAAM2C,kBAC3C,UAAW3C,EAAM8C,QAAUF,OAAO5C,EAAM8C,QAAU,MAKhDwB,KAAO,KAAQb,EAAcnB,OAAQ,GAErCiC,OAAS,KAAQD,OAAQrB,EAAK,WAe9BuB,YAAeC,IACnBA,EAAEC,cAAgBD,EAAEC,cAAgBD,EAAEC,cAAgB,EAAI,EAC1D,MAAMC,EAAcF,EAAEC,cAStBE,YANkB,KACD,WAAXH,EAAEI,MAAsB7E,EAAMgC,cAAiBhC,EAAM8B,WAHrC2C,EAAEC,gBAAkBC,GAItCJ,aAONO,EAAMrB,GAAgBnB,IAChBA,EACFyC,OAAOC,iBAAiB,QAASR,aAEjCO,OAAOE,oBAAoB,QAAST,aAGlCxE,EAAM6C,OACJP,EACF6B,SAASe,KAAKC,UAAUC,IAAI,wCAE5BjB,SAASe,KAAKC,UAAUE,OAAO,2CAGlC,CAAEC,WAAW,IAEhB,MAAMC,EAAgB,CACpBC,KAjDW,KAAQ/B,EAAcnB,OAAQ,GAkDzCgC,KAAAA,KACAmB,OAjDa,KAAQhC,EAAcnB,OAASmB,EAAcnB,OAkD1DiC,OAAAA,OACAmB,GAjDS,KAAQpB,OAAQrB,EAAK,OAkD9B0C,eAhDqB,KACjB3F,EAAM+B,kBAAoB/B,EAAM8B,YAEpCmB,EAAK,iBACLsB,WA6CAqB,wBA1C+BC,GAAoB5C,EAAK,cAAe4C,GA2CvEC,uBA1C8BD,GAAoB5C,EAAK,OAAQ4C,GA2C/DE,wBA1C+BF,GAAoB5C,EAAK,eAAgB4C,GA2CxEG,uBA1C8BH,GAAoB5C,EAAK,QAAS4C,GA2ChErB,YAAAA,aAGF,MAAO,CACLpB,SAAAA,EACAF,YAAAA,EACAO,cAAAA,EACAE,cAAAA,EACAG,oBAAAA,EACAD,4BAAAA,EACAI,sBAAAA,KACGsB,+HC1RLU,IAAI,cACJC,MAAM,CAAA,iBAIEC,EAAAC,OAAOjE,aAHfkE,KAAK,SACL,aAAW,OACV,kBAAiBF,EAAK5E,eAGZ4E,EAAAG,OAAOC,sEACcJ,EAAIX,KAAAlB,KAAE6B,EAAI7B,KAAAmB,OAAEU,EAAOV,QAAA,KAAAe,EAAAC,wCAyGzCD,aApGN1G,KAAK,WACJG,cAAekG,EAAMC,OAAC3D,mBACvBiE,OAAA,GACCC,SAAU,KACHR,EAAMS,QAAA,YALhB,CAoGeC,EAAAL,EAAAC,EAAAK,kBAzFeX,EAAa,mBAAzCY,EAwFK,MAAA,OAxFAb,MAAM,aAEDC,EAAAC,OAAc,aADtBW,EAKC,MAAA,OAHCb,MAAM,oBACLc,MAAOb,EAAqBlC,sBAC5BgD,QAAOd,EAAcR,mDAExBuB,EAgFK,MAAA,CA/EHhB,MAAM,sBACLc,MAAOb,EAA2BtC,8BAEnCqD,EA2EK,MAAA,CA1EHhB,MAAK,CAAC,mBACEC,EAAaxC,eACpBqD,MAAOb,EAAmBrC,sBAGnBqC,EAAAC,OAAiB,gBADzBW,EAWCI,EAAA,OATCrH,KAAK,QACLoG,MAAM,kBACNG,KAAK,SACL,aAAW,QACX,cAAY,QACZe,SAAS,IACRH,QAAOd,EAAM5B,OACb8C,UAAO,GAAQlB,EAAM5B,OAAA,CAAA,YACN4B,EAAM5B,OAAA,CAAA,0DAExB2C,EAyDK,MAAA,CAxDHhB,MAAM,kBACLc,gBAAmBb,EAAMC,OAACnE,SAAqBC,UAAAiE,EAAAC,OAAOlE,aAE5CiE,EAAAG,OAAc,aAAzBS,EAEK,MAAA,CAAAO,IAAA,GAAA,CADHC,EAA8CpB,EAAAG,OAAA,UAAA,CAAA/B,OAAf4B,EAAM5B,OAAAmB,GAAES,EAAGT,qBAE3BS,EAAAG,OAAOkB,0BAAxBT,EAiDUU,EAAA,CAAAH,IAAA,GAAA,CA/CAnB,EAAK,WADbY,EAMK,MAAA,OAJHb,MAAM,kBACLc,aAAgBb,EAAQ/C,SAAA,aAEtBsE,EAAAvB,EAAAC,OAAO7E,wBAGJ4E,EAAAG,OAAa,YADrBS,EAKK,MAAA,OAHHb,MAAM,qBAENqB,EAAqBpB,EAAAG,OAAA,0BAGfH,EAAAC,OAAc,aADtBW,EAKK,MAAA,OAHHb,MAAM,qBAEHwB,EAAAvB,EAAAC,OAAO5E,0BAGJ2E,EAAAG,OAAc,aADtBS,EAKK,MAAA,OAHHb,MAAM,sBAENqB,EAAOpB,EAAAG,OAAA,4BAGAH,EAAMC,OAAC1E,aAAcyE,EAAAC,OAAO3E,QAAY0E,EAAMC,OAACzE,qCADxDoF,EAgBK,MAAA,OAdHb,MAAM,qBAGEC,EAAAC,OAAiB,gBADzBW,EAQWY,EAAA,OANT5D,MAAM,OACNmC,MAAM,OACN0B,KAAA,GACCX,QAAOd,EAAM5B,oBAEd,IAAsB,CAAnBsD,EAAAH,EAAAvB,EAAAC,OAAO1E,oDAEZwF,EAEWS,EAAA,CAFCV,QAAOd,EAAET,IAAA,YACnB,IAAkB,CAAfmC,EAAAH,EAAAvB,EAAAC,OAAO3E,qCAIN0E,EAAAG,OAAa,YADrBS,EAKK,MAAA,OAHHb,MAAM,qBAENqB,EAAqBpB,EAAAG,OAAA,6DAlFLH,EAAa1C,+CAE/B0C,EAAAC,OAAO1D,qDAELyD,EAAqBlC,wGAKrBkC,EAA2BtC,oDAIzBsC,EAAaxC,cAAA,kCACbwC,EAAmBrC,8BAGnBqC,EAAAC,OAAOxE,kBACb9B,KAAK,QACLoG,MAAM,kBACNG,KAAK,SACL,aAAW,QACX,cAAY,QACZe,SAAS,4EAOWU,EAAA,CAAA7F,SAAAkE,EAAAC,OAAOnE,SAAqBC,UAAAiE,EAAAC,OAAOlE,qBAE5CiE,EAAAG,OAAOkB,wBACeO,EAAA5B,EAAAG,OAAA,UAAA,CAAA/B,OAAA4B,EAAA5B,UAAQ4B,EAAGT,IAAA,KAAAc,EAAAC,EAAAK,mCAE3BX,EAAAG,OAAOkB,gDAEdrB,EAAK5E,wDAEM4E,EAAQ/C,SAAA,qBAEtB4E,EAAA7B,EAAAC,OAAO7E,mCAGJ4E,EAAAG,OAAO2B,mHAMP9B,EAAAC,OAAO5E,gDAGVwG,EAAA7B,EAAAC,OAAO5E,qCAGJ2E,EAAAG,OAAOlG,uHAMN+F,EAAMC,OAAC1E,aAAcyE,EAAAC,OAAO3E,QAAY0E,EAAMC,OAACzE,+EAI9CwE,EAAAC,OAAO1E,kBACbqC,MAAM,OACNmC,MAAM,OACN0B,KAAA,gBAJF,CAQWf,EAAAL,EAAAC,EAAAK,kBADNe,EAAAH,EAAAvB,EAAAC,OAAO1E,gBAAP8E,EAAA,GAAAwB,EAAA7B,EAAAC,OAAO1E,uEAEZ,CAEWmF,EAAAL,EAAAC,EAAAK,kBADNe,EAAAH,EAAAvB,EAAAC,OAAO3E,YAAP+E,EAAA,GAAAwB,EAAA7B,EAAAC,OAAO3E,sCAIN0E,EAAAG,OAAO4B,wMA3Fd/B,EAAa/E,cAAa+E,EAAMC,OAAC9E,kBAAiBmF,qECVxD0B,EAAUC,EAAoBC"}