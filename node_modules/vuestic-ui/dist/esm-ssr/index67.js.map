{"version":3,"file":"index67.js","sources":["../../../../node_modules/lodash/isString.js","../../src/composables/useValidation.ts","../../src/components/va-input/components/VaMessageList/VaMessageList.vue","../../src/components/va-input/components/VaMessageList/VaMessageList.vue?vue&type=template&id=878736da&lang.js","../../src/components/va-input/components/VaMessageList/index.ts"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import { inject, onBeforeUnmount, onMounted, PropType, watch, ExtractPropTypes } from 'vue'\nimport flatten from 'lodash/flatten.js'\nimport isFunction from 'lodash/isFunction.js'\nimport isString from 'lodash/isString.js'\n\nimport { useSyncProp } from './useSyncProp'\nimport { useFocus } from './useFocus'\nimport { FormServiceKey } from '../components/va-form/consts'\n\ntype ValidationRule<V extends any = any> = ((v: V) => any | string)\n\nconst normalizeValidationRules = (rules: string | ValidationRule[] = [], callArguments: unknown = null) => {\n  if (isString(rules)) { rules = [rules] as any }\n\n  return (rules as ValidationRule[])\n    .map((rule) => isFunction(rule) ? rule(callArguments) : rule)\n}\n\nexport const useValidationProps = {\n  modelValue: { required: false },\n  error: { type: Boolean, default: undefined },\n  errorMessages: { type: [Array, String] as PropType<string[] | string>, default: undefined },\n  errorCount: { type: [String, Number], default: 1 },\n  rules: { type: Array as PropType<ValidationRule<any>[]>, default: () => [] as any },\n  success: { type: Boolean, default: false },\n  messages: { type: [Array, String] as PropType<string[] | string>, default: () => [] },\n  immediateValidation: { type: Boolean, default: false },\n}\n\nexport type ValidationProps<V extends any> = typeof useValidationProps & {\n  modelValue: { type: PropType<V> }\n  rules: { type: PropType<ValidationRule<V>[]> }\n}\n\nexport const useValidationEmits = ['update:error', 'update:errorMessages']\n\nexport const useValidation = <V, P extends ExtractPropTypes<typeof useValidationProps>>(\n  props: P,\n  emit: (event: any, ...args: any[]) => void,\n  reset: () => any,\n  focus: () => any,\n) => {\n  const { isFocused, onFocus, onBlur } = useFocus()\n\n  const [computedError] = useSyncProp('error', props, emit, false)\n  const [computedErrorMessages] = useSyncProp('errorMessages', props, emit, [] as string[])\n\n  const resetValidation = () => {\n    computedError.value = false\n    computedErrorMessages.value = []\n  }\n\n  const validate = (): boolean => {\n    if (!props.rules || !props.rules.length) {\n      return true\n    }\n\n    let error = false\n    let errorMessages: string[] = []\n\n    const rules = flatten(props.rules)\n\n    normalizeValidationRules(rules, props.modelValue)\n      .forEach((validationResult: boolean | string) => {\n        if (isString(validationResult)) {\n          errorMessages = [...errorMessages, validationResult]\n          error = true\n        } else if (validationResult === false) {\n          error = true\n        }\n      })\n\n    computedErrorMessages.value = errorMessages\n    computedError.value = error\n\n    return !error\n  }\n\n  watch(isFocused, (newVal) => !newVal && validate())\n\n  watch(() => props.modelValue, () => validate(), { immediate: props.immediateValidation })\n\n  const context = {\n    resetValidation,\n    focus,\n    validate,\n    reset,\n    hasError: () => computedError.value,\n  }\n\n  const form = inject(FormServiceKey, undefined)\n\n  onMounted(() => {\n    form?.onChildMounted(context as any)\n  })\n\n  onBeforeUnmount(() => {\n    form?.onChildUnmounted(context as any)\n  })\n\n  return {\n    computedError,\n    computedErrorMessages,\n    listeners: { onFocus, onBlur },\n    validate,\n    resetValidation,\n  }\n}\n","<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport { useColors } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index.scss\";\n\n.va-message-list {\n  color: var(--va-message-list-color);\n\n  &__message {\n    vertical-align: var(--va-message-list-vertical-align);\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport { useColors } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index.scss\";\n\n.va-message-list {\n  color: var(--va-message-list-color);\n\n  &__message {\n    vertical-align: var(--va-message-list-vertical-align);\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n}\n</style>\n","import withConfigTransport from '../../../../services/config-transport/withConfigTransport'\nimport _VaMessageList from './VaMessageList.vue'\n\nexport const VaMessageList = withConfigTransport(_VaMessageList)\n"],"names":["baseGetTag","require$$0","isArray","require$$1","isObjectLike","require$$2","isString_1","isString","value","useValidationProps","modelValue","required","error","type","Boolean","default","undefined","errorMessages","Array","String","errorCount","Number","rules","success","messages","immediateValidation","useValidationEmits","useValidation","props","emit","reset","focus","isFocused","onFocus","onBlur","useFocus","computedError","useSyncProp","computedErrorMessages","resetValidation","validate","length","callArguments","map","rule","isFunction","normalizeValidationRules","flatten","forEach","validationResult","watch","newVal","immediate","context","hasError","form","inject","FormServiceKey","onMounted","onChildMounted","onBeforeUnmount","onChildUnmounted","listeners","script","defineComponent","name","limit","color","setup","getColor","useColors","computed","slice","computedStyle","_ctx","class","style","message","index","VaMessageList","withConfigTransport","_VaMessageList"],"mappings":"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"}