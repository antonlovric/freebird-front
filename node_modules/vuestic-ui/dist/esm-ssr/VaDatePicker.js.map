{"version":3,"file":"VaDatePicker.js","sources":["../../../../node_modules/lodash/_baseIsDate.js","../../../../node_modules/lodash/isDate.js","../../src/components/va-date-picker/utils/date-utils.ts","../../src/components/va-date-picker/hooks/view.ts","../../src/components/va-date-picker/hooks/grid-keyboard-navigation.ts","../../src/components/va-date-picker/hooks/model-value-helper.ts","../../src/components/va-date-picker/hooks/use-picker.ts","../../src/components/va-date-picker/components/VaDayPicker/va-date-picker-calendar-hook.ts","../../src/components/va-date-picker/components/VaDatePickerCell.vue","../../src/components/va-date-picker/components/VaDatePickerCell.vue?vue&type=template&id=1c43554e&lang.js","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue?vue&type=template&id=cfaf508c&lang.js","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue?vue&type=template&id=0e4bae0c&lang.js","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue?vue&type=template&id=299f7c82&lang.js","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue?vue&type=template&id=01d8d4fa&lang.js","../../src/components/va-date-picker/VaDatePicker.vue","../../src/components/va-date-picker/VaDatePicker.vue?vue&type=template&id=efd6986a&lang.js"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","import isDate from 'lodash/isDate.js'\n\nimport { DatePickerModelValue, DatePickerRange } from '../types'\nimport { DateInputModelValue } from '../../va-date-input/types'\n\nexport const isDatesDayEqual = (date1?: Date | null, date2?: Date | null): boolean => date1?.toDateString() === date2?.toDateString()\n\nexport const isDatesYearEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear()\n}\n\nexport const isDatesMonthEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return isDatesYearEqual(date1, date2) && date1?.getMonth() === date2?.getMonth()\n}\n\nexport const createYearDate = (year: number) => {\n  const date = new Date()\n  date.setFullYear(year)\n  return date\n}\n\nexport const isDatesArrayIncludeDay = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesDayEqual(d, date))\n}\n\nexport const isDatesArrayIncludeMonth = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesMonthEqual(d, date))\n}\n\nexport const isRange = (value: DatePickerModelValue | DateInputModelValue): value is DatePickerRange => {\n  return typeof value === 'object' && ('start' in value || 'end' in value)\n}\n\nexport const isSingleDate = (value: DatePickerModelValue | DateInputModelValue): value is Date => isDate(value)\n\nexport const isDates = (value: DatePickerModelValue | DateInputModelValue): value is Date[] => Array.isArray(value)\n","import { computed, ref } from 'vue'\nimport isDate from 'lodash/isDate.js'\n\nimport { DatePickerView, DatePickerViewProp, DatePickerModelValue } from '../types'\n\nconst JANUARY_MONTH_INDEX = 0\nconst DECEMBER_MONTH_INDEX = 11\n\nconst addMonth = (view: DatePickerView) => {\n  if (view.month === DECEMBER_MONTH_INDEX) {\n    return { ...view, year: view.year + 1, month: JANUARY_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month + 1 }\n  }\n}\n\nconst subMonth = (view: DatePickerView) => {\n  if (view.month === JANUARY_MONTH_INDEX) {\n    return { ...view, year: view.year - 1, month: DECEMBER_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month - 1 }\n  }\n}\n\nconst getDefaultDate = (modelValue: DatePickerModelValue): Date => {\n  if (isDate(modelValue)) { return modelValue }\n  if (isDate((modelValue as any)?.start)) { return (modelValue as any).start }\n  if (Array.isArray(modelValue) && isDate(modelValue[0])) { return modelValue[0] }\n\n  return new Date()\n}\n\nexport const useView = (\n  props: { [key: string]: any, 'view'?: DatePickerViewProp },\n  emit: (event: any | 'update:view', newValue: DatePickerViewProp) => any,\n  defaultOverride?: DatePickerViewProp,\n) => {\n  const defaultDate = getDefaultDate(props.modelValue)\n  const defaultView: DatePickerView = {\n    type: 'day',\n    year: defaultDate.getFullYear(),\n    month: defaultDate.getMonth(),\n    ...defaultOverride,\n  }\n\n  const statefulView = ref(defaultView)\n\n  const syncView = computed<DatePickerView>({\n    get () {\n      // Merge default view and user view prop\n      return { ...statefulView.value, ...props.view }\n    },\n    set (view: DatePickerView) {\n      statefulView.value = view\n\n      emit('update:view', view)\n    },\n  })\n\n  const next = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = addMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year + 1 }\n    }\n  }\n\n  const prev = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = subMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year - 1 }\n    }\n  }\n\n  return {\n    syncView,\n    next,\n    prev,\n  }\n}\n","import { ref, Ref, isRef, unref } from 'vue'\n\nfunction isUndefined<T> (t: T | undefined): t is undefined {\n  return t === undefined\n}\n\nexport const useGridKeyboardNavigation = (\n  {\n    rowSize,\n    start,\n    end,\n    onSelected,\n    onFocusIndex,\n  }: {\n    rowSize: number,\n    start?: Ref<number> | number,\n    end?: Ref<number> | number,\n    onFocusIndex?: Ref<number> | number,\n    onSelected?: (selectedValue: number) => any | null,\n  },\n) => {\n  const focusedCellIndex = ref(-1)\n\n  let previouslyClicked = false\n  const onMousedown = () => { previouslyClicked = true }\n\n  const onFocus = () => {\n    if (previouslyClicked) { return }\n    previouslyClicked = false\n\n    const index = onFocusIndex === undefined ? unref(start) || 0 : unref(onFocusIndex)\n\n    focusedCellIndex.value = index\n  }\n\n  const onBlur = () => {\n    previouslyClicked = false\n\n    focusedCellIndex.value = -1\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    if (['ArrowRight', 'ArrowLeft', 'ArrowDown', 'ArrowUp', 'Enter', 'Space'].includes(e.key)) {\n      // Prevent default for arrow keys and enter. Do not prevent default for tab! :)\n      e.preventDefault()\n    }\n\n    if (e.key === 'Enter' || e.key === 'Space') {\n      if (onSelected === undefined) { return }\n\n      onSelected(focusedCellIndex.value)\n      return\n    }\n\n    if (e.key === 'ArrowRight') {\n      focusedCellIndex.value += 1\n    }\n    if (e.key === 'ArrowLeft') {\n      focusedCellIndex.value -= 1\n    }\n    if (e.key === 'ArrowDown') {\n      focusedCellIndex.value += rowSize\n    }\n    if (e.key === 'ArrowUp') {\n      focusedCellIndex.value -= rowSize\n    }\n\n    if (!isUndefined(start) && focusedCellIndex.value < unref(start)) {\n      focusedCellIndex.value = unref(start)\n    }\n    if (!isUndefined(end) && focusedCellIndex.value > unref(end) - 1) {\n      focusedCellIndex.value = unref(end) - 1\n    }\n  }\n\n  const containerAttributes = {\n    onFocus, onKeydown, onBlur, onMousedown, tabindex: 0,\n  }\n\n  return {\n    focusedCellIndex, containerAttributes,\n  }\n}\n","import { isRange, isSingleDate, isDates } from '../utils/date-utils'\nimport { DatePickerModelValue, DatePickerRange, DatePickerMode } from '../types'\n\nconst modeInitialValue = (date: Date, mode: DatePickerMode) => {\n  if (mode === 'single') {\n    return date\n  } else if (mode === 'range') {\n    return { start: date, end: null }\n  } else if (mode === 'multiple') {\n    return [date]\n  } else if (mode === 'auto') {\n    return date\n  }\n\n  throw new Error('Unknown mode')\n}\n\nconst throwIncorrectModelValueError = (modelValue: DatePickerModelValue, mode: DatePickerMode) : never => {\n  throw Error(`Incorrect modelValue for mode ${mode}. Got ${JSON.stringify(modelValue)}`)\n}\n\nconst modeFromModelValue = (modelValue: DatePickerModelValue): DatePickerMode => {\n  if (isSingleDate(modelValue)) {\n    return 'single'\n  } else if (isRange(modelValue)) {\n    return 'range'\n  } else if (isDates(modelValue)) {\n    return 'multiple'\n  }\n\n  return throwIncorrectModelValueError(modelValue, 'auto')\n}\n\nconst sortRange = (modelValue: DatePickerRange) => {\n  if (modelValue.start && modelValue.end) {\n    if (modelValue.start > modelValue.end) {\n      return { start: modelValue.end, end: modelValue.start }\n    }\n  }\n\n  return modelValue\n}\n\nexport const useDatePickerModelValue = (\n  props: {\n    [key: string]: any,\n    modelValue?: DatePickerModelValue,\n    mode: DatePickerMode\n  },\n  emit: (event: 'update:modelValue', newValue: DatePickerModelValue) => any,\n  dateEqual: (date1?: Date | null, date2?: Date | null) => boolean,\n) => {\n  const updateModelValue = (date: Date) => {\n    if (!props.modelValue) {\n      emit('update:modelValue', modeInitialValue(date, props.mode))\n      return\n    }\n\n    const mode = props.mode === 'auto' ? modeFromModelValue(props.modelValue) : props.mode\n\n    if (mode === 'single') {\n      if (!isSingleDate(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      emit('update:modelValue', date)\n    } else if (mode === 'range') {\n      if (!isRange(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      if (props.modelValue.end && dateEqual(props.modelValue.end, date)) {\n        return emit('update:modelValue', { start: props.modelValue.start, end: null })\n      }\n      if (props.modelValue.start && dateEqual(props.modelValue.start, date)) {\n        return emit('update:modelValue', { start: null, end: props.modelValue.end })\n      }\n\n      if (props.modelValue.end === null) {\n        return emit('update:modelValue', sortRange({ start: props.modelValue.start, end: date }))\n      }\n      if (props.modelValue.start === null) {\n        return emit('update:modelValue', sortRange({ end: props.modelValue.end, start: date }))\n      }\n\n      emit('update:modelValue', { start: date, end: null })\n    } else if (mode === 'multiple') {\n      if (!isDates(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      const isDatesIncludesDate = !!props.modelValue.find((d) => dateEqual(d, date))\n\n      if (isDatesIncludesDate) {\n        emit('update:modelValue', props.modelValue.filter((d) => !dateEqual(d, date)))\n      } else {\n        emit('update:modelValue', [...props.modelValue, date].sort((a, b) => a.getTime() - b.getTime()))\n      }\n    }\n  }\n\n  return {\n    updateModelValue,\n  }\n}\n","import { computed, ComputedRef, ref, watch } from 'vue'\n\nimport { isDatesMonthEqual, isDatesDayEqual, isDatesYearEqual, isDates, isRange, isSingleDate } from './../utils/date-utils'\nimport { useDatePickerModelValue } from './model-value-helper'\nimport { DatePickerMode, DatePickerModelValue, DatePickerType } from '../types'\n\nconst getDateEqualFunction = (type: DatePickerType) => {\n  return {\n    month: isDatesMonthEqual,\n    day: isDatesDayEqual,\n    year: isDatesYearEqual,\n  }[type]\n}\n\nexport const useDatePicker = (\n  type: DatePickerType,\n  dates: ComputedRef<Date[]>,\n  props: {\n    modelValue?: DatePickerModelValue,\n    mode: DatePickerMode,\n    readonly: boolean,\n    allowedDays?: (date: Date) => boolean,\n    allowedMonths?: (date: Date) => boolean,\n    allowedYears?: (date: Date) => boolean,\n  },\n  emit: (event: 'update:modelValue' | any, ...args: any[]) => void,\n) => {\n  const datesEqual = getDateEqualFunction(type)\n  const isAllowedDate = props.allowedDays || props.allowedMonths || props.allowedYears\n  const isDateDisabled = (date: Date) => isAllowedDate === undefined ? false : !isAllowedDate(date)\n\n  const hoveredIndex = ref(-1)\n  const hoveredValue = computed(() => dates.value[hoveredIndex.value])\n\n  const { updateModelValue } = useDatePickerModelValue(\n    props,\n    emit,\n    datesEqual,\n  )\n\n  const onClick = (date: Date) => {\n    if (props.readonly || isDateDisabled(date)) { return }\n\n    updateModelValue(date)\n    emit(`click:${type}`, date)\n  }\n\n  const isToday = (date: Date): boolean => {\n    const today = new Date()\n    return datesEqual(today, date)\n  }\n\n  const isSelected = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (isSingleDate(props.modelValue)) {\n      return datesEqual(props.modelValue, date)\n    } else if (isDates(props.modelValue)) {\n      return !!props.modelValue.find((d) => datesEqual(d, date))\n    } else if (isRange(props.modelValue)) {\n      return datesEqual(props.modelValue.start, date) || datesEqual(props.modelValue.end, date)\n    }\n\n    return false\n  }\n\n  const isInRange = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (!isRange(props.modelValue)) { return false }\n\n    if (props.modelValue.start && props.modelValue.end) {\n      return props.modelValue.start < date && props.modelValue.end > date\n    }\n\n    const selectedDate = props.modelValue.start || props.modelValue.end\n\n    if (selectedDate) {\n      if (!hoveredValue.value) { return false }\n\n      return selectedDate < date\n        ? (hoveredValue.value >= date)\n        : (hoveredValue.value <= date)\n    }\n\n    return false\n  }\n\n  watch(hoveredValue, (date) => { emit(`hover:${type}`, date) })\n\n  return {\n    hoveredIndex,\n    hoveredValue,\n    onClick,\n    isToday,\n    isSelected,\n    isInRange,\n  }\n}\n","import { computed, Ref } from 'vue'\n\nimport { DatePickerView } from '../../types'\n\n/** Returns last day of previous month */\nexport const getMonthDaysCount = (year: number, month: number): number => new Date(year, month + 1, 0).getDate()\n\nexport const getMonthStartWeekday = (year: number, month: number) => new Date(year, month, 1).getDay()\n\n/** Returns array from 1 to length */\nexport const getNumbersArray = (length: number) => Array.from(Array(length).keys()).map((k) => k + 1)\n\nexport const useVaDatePickerCalendar = (view: Ref<DatePickerView>, options?: { firstWeekday?: Ref<'Monday' | 'Sunday'> }) => {\n  const CALENDAR_ROWS_COUNT = 6 // Need 6 rows if first day of a month is Saturday and the last day is Monday 31th.\n\n  const localizeWeekday = (weekdayNumber: number) => {\n    if (options && options.firstWeekday?.value === 'Monday') {\n      // Set Sunday as 7th day of the week and Monday as first day of the week.\n      return weekdayNumber === 0 ? 6 : weekdayNumber - 1\n    }\n\n    return weekdayNumber\n  }\n\n  const currentMonthStartWeekday = computed(() => localizeWeekday(getMonthStartWeekday(view.value.year, view.value.month)))\n\n  const getPreviousDates = () => {\n    if (currentMonthStartWeekday.value === 0) { return [] }\n\n    const prevMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month - 1)\n    const prevMonthDays: number[] = getNumbersArray(prevMonthDaysCount)\n\n    return prevMonthDays\n      .slice(-currentMonthStartWeekday.value)\n      .map((d) => new Date(view.value.year, view.value.month - 1, d))\n  }\n\n  const getCurrentDates = () => {\n    const currentMonthDays: number[] = getNumbersArray(getMonthDaysCount(view.value.year, view.value.month))\n\n    return currentMonthDays.map((d) => new Date(view.value.year, view.value.month, d))\n  }\n\n  const prevAndCurrentDays = computed(() => [...getPreviousDates(), ...getCurrentDates()])\n  const currentMonthEndIndex = computed(() => prevAndCurrentDays.value.length)\n\n  const calendarDates = computed(() => {\n    const days = prevAndCurrentDays.value\n\n    const daysRemaining = 7 * CALENDAR_ROWS_COUNT - days.length\n\n    const nextMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month + 1)\n    const nextMonthDays: number[] = getNumbersArray(nextMonthDaysCount)\n\n    return [\n      ...days,\n      ...nextMonthDays\n        .slice(0, daysRemaining)\n        .map((d) => new Date(view.value.year, view.value.month + 1, d)),\n    ]\n  })\n\n  return { calendarDates, currentMonthStartIndex: currentMonthStartWeekday, currentMonthEndIndex }\n}\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../../styles/resources';\n\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend {\n    color: var(--va-date-picker-weekends-color);\n  }\n\n  // &_in-range:not(.va-date-picker-cell_disabled) {\n  // &_in-range { // should be like a the line above if the `range` value\n  // will exclude not allows dates\n  &_in-range {\n    color: var(--va-date-picker-color);\n\n    &::after {\n      background-color: var(--va-date-picker-selected-background);\n      opacity: var(--va-date-picker-cell-background-opacity-hover);\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-color);\n    font-weight: bold;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n    }\n  }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_other-month {\n    opacity: var(--va-date-picker-cell-opacity);\n  }\n\n  &_focused {\n    @include focus-outline;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    &:not(\n    .va-date-picker-cell_selected):not(\n      .va-date-picker-cell_readonly):not(\n        .va-date-picker-cell_disabled):not(\n          .va-date-picker-cell_other-month) {\n      color: var(--va-date-picker-color);\n\n      &::after {\n        background-color: var(--va-date-picker-selected-background);\n        opacity: var(--va-date-picker-cell-background-opacity-hover);\n      }\n    }\n  }\n\n  &_disabled {\n    &:not(.va-date-picker-cell_today) {\n      color: var(--va-date-picker-secondary);\n    }\n\n    cursor: not-allowed;\n    opacity: var(--va-date-picker-cell-opacity);\n\n    &::after { // Crossline\n      opacity: var(--va-date-picker-cell-opacity);\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: currentColor;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../../styles/resources';\n\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend {\n    color: var(--va-date-picker-weekends-color);\n  }\n\n  // &_in-range:not(.va-date-picker-cell_disabled) {\n  // &_in-range { // should be like a the line above if the `range` value\n  // will exclude not allows dates\n  &_in-range {\n    color: var(--va-date-picker-color);\n\n    &::after {\n      background-color: var(--va-date-picker-selected-background);\n      opacity: var(--va-date-picker-cell-background-opacity-hover);\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-color);\n    font-weight: bold;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n    }\n  }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_other-month {\n    opacity: var(--va-date-picker-cell-opacity);\n  }\n\n  &_focused {\n    @include focus-outline;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    &:not(\n    .va-date-picker-cell_selected):not(\n      .va-date-picker-cell_readonly):not(\n        .va-date-picker-cell_disabled):not(\n          .va-date-picker-cell_other-month) {\n      color: var(--va-date-picker-color);\n\n      &::after {\n        background-color: var(--va-date-picker-selected-background);\n        opacity: var(--va-date-picker-cell-background-opacity-hover);\n      }\n    }\n  }\n\n  &_disabled {\n    &:not(.va-date-picker-cell_today) {\n      color: var(--va-date-picker-secondary);\n    }\n\n    cursor: not-allowed;\n    opacity: var(--va-date-picker-cell-opacity);\n\n    &::after { // Crossline\n      opacity: var(--va-date-picker-cell-opacity);\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: currentColor;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: Function as PropType<(date: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: Function as PropType<(date: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"syncView.type !== 'year'\"\n    class=\"va-date-picker-header va-date-picker__header\"\n  >\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"chevron_left\"\n        flat\n        size=\"small\"\n        :color=\"color\"\n        textColor=\"dark\"\n        aria-label=\"next period\"\n        @click=\"prev\"\n      />\n    </slot>\n\n    <div class=\"va-date-picker__header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button\n          :disabled=\"$props.disabled\"\n          flat\n          size=\"small\"\n          :rounded=\"false\"\n          :color=\"color\"\n          textColor=\"dark\"\n          aria-label=\"switch view\"\n          @click=\"switchView\"\n        >\n          <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">\n            <span class=\"ml-1\">{{ monthNames[syncView.month] }}</span>\n          </slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"chevron_right\"\n        flat\n        size=\"small\"\n        :color=\"color\"\n        textColor=\"dark\"\n        aria-label=\"previous period\"\n        @click=\"next\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useView } from '../../hooks/view'\n\nimport { DatePickerView } from '../../types'\n\nimport { VaButton } from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n  components: { VaButton },\n  emits: ['update:view'],\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<DatePickerView> },\n    color: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: DatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"syncView.type !== 'year'\"\n    class=\"va-date-picker-header va-date-picker__header\"\n  >\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"chevron_left\"\n        flat\n        size=\"small\"\n        :color=\"color\"\n        textColor=\"dark\"\n        aria-label=\"next period\"\n        @click=\"prev\"\n      />\n    </slot>\n\n    <div class=\"va-date-picker__header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button\n          :disabled=\"$props.disabled\"\n          flat\n          size=\"small\"\n          :rounded=\"false\"\n          :color=\"color\"\n          textColor=\"dark\"\n          aria-label=\"switch view\"\n          @click=\"switchView\"\n        >\n          <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">\n            <span class=\"ml-1\">{{ monthNames[syncView.month] }}</span>\n          </slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"chevron_right\"\n        flat\n        size=\"small\"\n        :color=\"color\"\n        textColor=\"dark\"\n        aria-label=\"previous period\"\n        @click=\"next\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useView } from '../../hooks/view'\n\nimport { DatePickerView } from '../../types'\n\nimport { VaButton } from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n  components: { VaButton },\n  emits: ['update:view'],\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<DatePickerView> },\n    color: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: DatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      class=\"va-month-picker__month-wrapper\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerView, DatePickerModelValue } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 4 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6); // 7 days + gap\n  width: 100%;\n\n  &__month-wrapper {\n    border-radius: var(--va-date-picker-cell-radius);\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      class=\"va-month-picker__month-wrapper\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerView, DatePickerModelValue } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 4 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6); // 7 days + gap\n  width: 100%;\n\n  &__month-wrapper {\n    border-radius: var(--va-date-picker-cell-radius);\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n}\n</style>\n","<template>\n  <div\n    ref=\"rootNode\"\n    class=\"va-year-picker\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year.toString()\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, computed, watch, shallowRef } from 'vue'\n\nimport { createYearDate } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    startYear: { type: Number, default: 1970 },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'year' }) },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const rootNode = shallowRef<HTMLElement>()\n\n    const { view } = toRefs(props)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n}\n</style>\n","<template>\n  <div\n    ref=\"rootNode\"\n    class=\"va-year-picker\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year.toString()\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, computed, watch, shallowRef } from 'vue'\n\nimport { createYearDate } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    startYear: { type: Number, default: 1970 },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'year' }) },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const rootNode = shallowRef<HTMLElement>()\n\n    const { view } = toRefs(props)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"names":["baseGetTag","require$$0","isObjectLike","require$$1","baseIsDate","value","baseUnary","nodeUtil","require$$2","nodeIsDate","isDate","isDate_1","isDatesDayEqual","date1","date2","toDateString","isDatesYearEqual","getFullYear","isDatesMonthEqual","getMonth","isRange","isSingleDate","isDates","Array","isArray","useView","props","emit","defaultOverride","defaultDate","modelValue","start","Date","defaultView","type","year","month","statefulView","ref","syncView","computed","get","view","set","next","prev","isUndefined","t","undefined","useGridKeyboardNavigation","rowSize","end","onSelected","onFocusIndex","focusedCellIndex","previouslyClicked","containerAttributes","onFocus","index","unref","onKeydown","e","includes","key","preventDefault","onBlur","onMousedown","tabindex","throwIncorrectModelValueError","mode","Error","JSON","stringify","sortRange","useDatePickerModelValue","dateEqual","updateModelValue","date","modeInitialValue","isDatesIncludesDate","find","d","filter","sort","a","b","getTime","useDatePicker","dates","datesEqual","day","getDateEqualFunction","isAllowedDate","allowedDays","allowedMonths","allowedYears","hoveredIndex","hoveredValue","watch","onClick","readonly","isDateDisabled","isToday","today","isSelected","isInRange","selectedDate","getMonthDaysCount","getDate","getNumbersArray","length","from","keys","map","k","useVaDatePickerCalendar","options","currentMonthStartWeekday","localizeWeekday","weekdayNumber","getDay","_a","firstWeekday","getPreviousDates","prevMonthDaysCount","slice","prevAndCurrentDays","currentMonthEndIndex","calendarDates","days","daysRemaining","nextMonthDaysCount","nextMonthDays","currentMonthStartIndex","script$5","defineComponent","name","otherMonth","Boolean","default","inRange","disabled","selected","weekend","hidden","focused","highlightWeekend","highlightToday","emits","setup","_ctx","_push","_ssrRenderAttrs","_mergeProps","class","_attrs","VaDatePickerCellProps","extractComponentProps","VaDatePickerCell","script$4","components","monthNames","required","weekdayNames","String","hideWeekDays","Object","showOtherMonths","Function","weekends","toRefs","VaDayPickerCellPropValues","filterComponentProps","weekdayNamesComputed","gridStartIndex","gridEndIndex","selectedValue","isOtherMonth","isDateWeekend","_ssrRenderList","weekday","_","_parent","_scopeId","_createVNode","_renderSlot","$slots","_createTextVNode","_toDisplayString","_ssrInterpolate","script$3","VaButton","color","changeView","switchView","$props","icon","flat","size","textColor","_ssrRenderSlot","rounded","script$2","months","selectedIndex","isDisabled","monthIndex","script$1","startYear","Number","endYear","rootNode","shallowRef","generateYearsArray","yearsCount","i","setFullYear","createYearDate","years","onMounted","scrollHeight","rootNodeHeight","offsetHeight","currentYearOffset","scrollTo","top","scrollIntoYearIndexCenter","findIndex","cellSize","relativeScrollPosition","scrollTop","scrollIntoYearIndex","isYearDisabled","toString","script","VaDayPicker","VaDatePickerHeader","VaMonthPicker","VaYearPicker","useStatefulProps","weekendsColor","useStatefulEmits","extractComponentEmits","currentPicker","valueComputed","useStateful","classComputed","colorsToCSSVariable","useColors","colorsStyle","focusCurrentPicker","$el","focus","newValue","prevValue","nextTick","dayPickerProps","headerProps","monthPickerProps","yearPickerProps","onDayModelValueUpdate","onMonthClick","onMonthModelValueUpdate","onYearClick","onYearModelValueUpdate","isPickerReadonly","pickerName","style","$event","fn","_withCtx","bind"],"mappings":"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"}