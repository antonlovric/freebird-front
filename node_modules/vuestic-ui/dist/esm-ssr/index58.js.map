{"version":3,"file":"index58.js","sources":["../../src/components/va-scrollbar/VaScrollbar.vue","../../src/components/va-scrollbar/VaScrollbar.vue?vue&type=template&id=0542b7a0&lang.js","../../src/components/va-scrollbar/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-scrollbar\"\n    ref=\"vuesticScrollbar\"\n  >\n    <div\n      class=\"scrollbar-wrapper\"\n      ref=\"scrollbarWrapper\"\n    >\n      <div\n        class=\"scrollbar-content\"\n        ref=\"scrollbarContent\"\n        @wheel=\"scroll\"\n        @touchstart=\"startDrag\"\n        @touchmove=\"onDrag\"\n        @touchend=\"stopDrag\"\n        @transitionend=\"onContentResize\"\n      >\n        <slot />\n      </div>\n      <div\n        class=\"track\"\n        ref=\"track\"\n      >\n        <div\n          class=\"thumb\"\n          ref=\"thumb\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaScrollbar',\n  props: {\n    speed: {\n      type: Number,\n      default: 20,\n    },\n  },\n  methods: {\n    calcOnResize () {\n      this.calcSize()\n      this.calcThumb()\n    },\n    calcSize () {\n      this.isDown = this.isUp = false\n      this.maxHeight = parseFloat(this.wrapper.offsetHeight, 10)\n      this.contentHeight = parseFloat(this.content.offsetHeight, 10)\n      this.trackHeight = parseFloat(this.track.offsetHeight, 10)\n\n      if (this.maxHeight / this.contentHeight * this.trackHeight < 10) {\n        this.thumb.style.height = 10 + 'px'\n      } else {\n        this.thumb.style.height = this.maxHeight / this.contentHeight * this.trackHeight + 'px'\n      }\n\n      if (this.maxHeight / this.contentHeight < 1) {\n        this.thumb.classList.add('active')\n      } else {\n        this.thumb.classList.remove('active')\n      }\n    },\n    calcThumb () {\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseInt(this.content.style.marginTop, 10)\n      this.thumb.style.top = (-currentMT / this.contentHeight * this.trackHeight) + 'px'\n    },\n    onContentResize () {\n      const prevHeight = this.contentHeight\n      this.calcSize()\n      this.calcThumb()\n\n      this.content.style.transition = 'margin-top .3s linear'\n      this.thumb.style.transition = 'top .3s linear'\n      const handler = (e) => {\n        if (e.propertyName === 'margin-top') {\n          this.content.style.transition = ''\n          this.calcSize()\n          this.calcThumb()\n          this.content.removeEventListener('transitionend', handler)\n          this.thumb.style.transition = ''\n        }\n      }\n      this.content.addEventListener('transitionend', handler)\n\n      this.setVertical(this.contentHeight - prevHeight)\n    },\n    startDrag (e) {\n      this.isDragging = true\n      this.prevTouch = e.touches[0]\n    },\n    onDrag (e) {\n      if (this.isDragging) {\n        e.preventDefault()\n        const touch = e.touches[0]\n        const delta = this.prevTouch.clientY - touch.clientY\n        this.setVertical(delta)\n        this.prevTouch = touch\n      }\n    },\n    stopDrag () {\n      this.isDragging = false\n    },\n    scroll (e) {\n      let delta = (e.deltaY * 0.01 * this.speed)\n      if (navigator?.userAgent?.toLowerCase().includes('firefox')) {\n        delta *= 10\n      }\n      this.setVertical(delta)\n      e.preventDefault()\n    },\n    setVertical (delta) {\n      if ((this.isDown && delta > 0) || (this.isUp && delta < 0) || (this.contentHeight <= this.maxHeight)) {\n        return\n      }\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseFloat(this.content.style.marginTop, 10)\n      let nextMT = 0\n      if (this.maxHeight - (currentMT - delta) > this.contentHeight && delta > 0) {\n        nextMT = this.maxHeight - this.contentHeight\n        this.isDown = true\n      } else {\n        this.isDown = false\n        if (currentMT - delta > 0) {\n          this.isUp = true\n          nextMT = 0\n        } else {\n          nextMT = currentMT - delta\n          this.isUp = false\n        }\n      }\n\n      this.content.style.marginTop = nextMT + 'px'\n      this.calcThumb()\n    },\n  },\n  mounted () {\n    this.track = this.$refs.track\n    this.thumb = this.$refs.thumb\n    this.content = this.$refs.scrollbarContent\n    this.wrapper = this.$refs.scrollbarWrapper\n    this.calcOnResize()\n\n    window.addEventListener('resize', this.calcOnResize)\n  },\n  beforeUnmount () {\n    window.removeAllListeners('resize', this.calcOnResize)\n  },\n  data () {\n    return {\n      wrapper: undefined,\n      maxHeight: undefined,\n      thumb: undefined,\n      track: undefined,\n      trackHeight: undefined,\n      content: undefined,\n      contentHeight: undefined,\n      isDown: false,\n      isUp: true,\n      prevTouch: {},\n      isDragging: false,\n    }\n  },\n}\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-scrollbar {\n  background: var(--va-scrollbar-background);\n  transition: var(--va-scrollbar-transition);\n  position: var(--va-scrollbar-position);\n  font-family: var(--va-font-family);\n\n  .scrollbar-wrapper {\n    border-radius: var(--va-scrollbar-wrapper-border-radius);\n    box-shadow: var(--va-scrollbar-wrapper-box-shadow);\n    position: var(--va-scrollbar-wrapper-position);\n    overflow: var(--va-scrollbar-wrapper-overflow);\n    max-height: var(--va-scrollbar-wrapper-max-height);\n\n    .track {\n      width: var(--va-scrollbar-wrapper-track-width);\n      position: var(--va-scrollbar-wrapper-track-position);\n      right: var(--va-scrollbar-wrapper-track-right);\n      top: var(--va-scrollbar-wrapper-track-top);\n      height: var(--va-scrollbar-wrapper-track-height);\n\n      .thumb {\n        transition: var(--va-scrollbar-thumb-transition);\n        position: var(--va-scrollbar-thumb-position);\n        width: var(--va-scrollbar-thumb-width);\n        background-color: var(--va-scrollbar-thumb-background-color);\n        opacity: var(--va-scrollbar-thumb-opacity);\n\n        &.active {\n          opacity: 0.3;\n        }\n      }\n    }\n  }\n\n  &:hover {\n    .thumb.active {\n      opacity: 1 !important;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-scrollbar\"\n    ref=\"vuesticScrollbar\"\n  >\n    <div\n      class=\"scrollbar-wrapper\"\n      ref=\"scrollbarWrapper\"\n    >\n      <div\n        class=\"scrollbar-content\"\n        ref=\"scrollbarContent\"\n        @wheel=\"scroll\"\n        @touchstart=\"startDrag\"\n        @touchmove=\"onDrag\"\n        @touchend=\"stopDrag\"\n        @transitionend=\"onContentResize\"\n      >\n        <slot />\n      </div>\n      <div\n        class=\"track\"\n        ref=\"track\"\n      >\n        <div\n          class=\"thumb\"\n          ref=\"thumb\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaScrollbar',\n  props: {\n    speed: {\n      type: Number,\n      default: 20,\n    },\n  },\n  methods: {\n    calcOnResize () {\n      this.calcSize()\n      this.calcThumb()\n    },\n    calcSize () {\n      this.isDown = this.isUp = false\n      this.maxHeight = parseFloat(this.wrapper.offsetHeight, 10)\n      this.contentHeight = parseFloat(this.content.offsetHeight, 10)\n      this.trackHeight = parseFloat(this.track.offsetHeight, 10)\n\n      if (this.maxHeight / this.contentHeight * this.trackHeight < 10) {\n        this.thumb.style.height = 10 + 'px'\n      } else {\n        this.thumb.style.height = this.maxHeight / this.contentHeight * this.trackHeight + 'px'\n      }\n\n      if (this.maxHeight / this.contentHeight < 1) {\n        this.thumb.classList.add('active')\n      } else {\n        this.thumb.classList.remove('active')\n      }\n    },\n    calcThumb () {\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseInt(this.content.style.marginTop, 10)\n      this.thumb.style.top = (-currentMT / this.contentHeight * this.trackHeight) + 'px'\n    },\n    onContentResize () {\n      const prevHeight = this.contentHeight\n      this.calcSize()\n      this.calcThumb()\n\n      this.content.style.transition = 'margin-top .3s linear'\n      this.thumb.style.transition = 'top .3s linear'\n      const handler = (e) => {\n        if (e.propertyName === 'margin-top') {\n          this.content.style.transition = ''\n          this.calcSize()\n          this.calcThumb()\n          this.content.removeEventListener('transitionend', handler)\n          this.thumb.style.transition = ''\n        }\n      }\n      this.content.addEventListener('transitionend', handler)\n\n      this.setVertical(this.contentHeight - prevHeight)\n    },\n    startDrag (e) {\n      this.isDragging = true\n      this.prevTouch = e.touches[0]\n    },\n    onDrag (e) {\n      if (this.isDragging) {\n        e.preventDefault()\n        const touch = e.touches[0]\n        const delta = this.prevTouch.clientY - touch.clientY\n        this.setVertical(delta)\n        this.prevTouch = touch\n      }\n    },\n    stopDrag () {\n      this.isDragging = false\n    },\n    scroll (e) {\n      let delta = (e.deltaY * 0.01 * this.speed)\n      if (navigator?.userAgent?.toLowerCase().includes('firefox')) {\n        delta *= 10\n      }\n      this.setVertical(delta)\n      e.preventDefault()\n    },\n    setVertical (delta) {\n      if ((this.isDown && delta > 0) || (this.isUp && delta < 0) || (this.contentHeight <= this.maxHeight)) {\n        return\n      }\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseFloat(this.content.style.marginTop, 10)\n      let nextMT = 0\n      if (this.maxHeight - (currentMT - delta) > this.contentHeight && delta > 0) {\n        nextMT = this.maxHeight - this.contentHeight\n        this.isDown = true\n      } else {\n        this.isDown = false\n        if (currentMT - delta > 0) {\n          this.isUp = true\n          nextMT = 0\n        } else {\n          nextMT = currentMT - delta\n          this.isUp = false\n        }\n      }\n\n      this.content.style.marginTop = nextMT + 'px'\n      this.calcThumb()\n    },\n  },\n  mounted () {\n    this.track = this.$refs.track\n    this.thumb = this.$refs.thumb\n    this.content = this.$refs.scrollbarContent\n    this.wrapper = this.$refs.scrollbarWrapper\n    this.calcOnResize()\n\n    window.addEventListener('resize', this.calcOnResize)\n  },\n  beforeUnmount () {\n    window.removeAllListeners('resize', this.calcOnResize)\n  },\n  data () {\n    return {\n      wrapper: undefined,\n      maxHeight: undefined,\n      thumb: undefined,\n      track: undefined,\n      trackHeight: undefined,\n      content: undefined,\n      contentHeight: undefined,\n      isDown: false,\n      isUp: true,\n      prevTouch: {},\n      isDragging: false,\n    }\n  },\n}\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-scrollbar {\n  background: var(--va-scrollbar-background);\n  transition: var(--va-scrollbar-transition);\n  position: var(--va-scrollbar-position);\n  font-family: var(--va-font-family);\n\n  .scrollbar-wrapper {\n    border-radius: var(--va-scrollbar-wrapper-border-radius);\n    box-shadow: var(--va-scrollbar-wrapper-box-shadow);\n    position: var(--va-scrollbar-wrapper-position);\n    overflow: var(--va-scrollbar-wrapper-overflow);\n    max-height: var(--va-scrollbar-wrapper-max-height);\n\n    .track {\n      width: var(--va-scrollbar-wrapper-track-width);\n      position: var(--va-scrollbar-wrapper-track-position);\n      right: var(--va-scrollbar-wrapper-track-right);\n      top: var(--va-scrollbar-wrapper-track-top);\n      height: var(--va-scrollbar-wrapper-track-height);\n\n      .thumb {\n        transition: var(--va-scrollbar-thumb-transition);\n        position: var(--va-scrollbar-thumb-position);\n        width: var(--va-scrollbar-thumb-width);\n        background-color: var(--va-scrollbar-thumb-background-color);\n        opacity: var(--va-scrollbar-thumb-opacity);\n\n        &.active {\n          opacity: 0.3;\n        }\n      }\n    }\n  }\n\n  &:hover {\n    .thumb.active {\n      opacity: 1 !important;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaScrollbar from './VaScrollbar.vue'\n\nexport const VaScrollbar = withConfigTransport(_VaScrollbar)\n"],"names":["script","name","props","speed","type","Number","default","methods","calcOnResize","this","calcSize","calcThumb","isDown","isUp","maxHeight","parseFloat","wrapper","offsetHeight","contentHeight","content","trackHeight","track","thumb","style","height","classList","add","remove","currentMT","marginTop","parseInt","top","onContentResize","prevHeight","transition","handler","e","propertyName","removeEventListener","addEventListener","setVertical","startDrag","isDragging","prevTouch","touches","onDrag","preventDefault","touch","delta","clientY","stopDrag","scroll","deltaY","navigator","userAgent","toLowerCase","includes","nextMT","mounted","$refs","scrollbarContent","scrollbarWrapper","window","beforeUnmount","removeAllListeners","data","undefined","class","ref","VaScrollbar","withConfigTransport","_VaScrollbar"],"mappings":"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"}