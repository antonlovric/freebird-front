{"version":3,"file":"index14.js","sources":["../../src/components/va-carousel/hooks/useCarousel.ts","../../src/components/va-carousel/hooks/useCarouselAnimation.ts","../../src/components/va-carousel/hooks/useCarouselColors.ts","../../src/components/va-carousel/VaCarousel.vue","../../src/components/va-carousel/VaCarousel.vue?vue&type=template&id=93523d70&lang.js","../../src/components/va-carousel/index.ts"],"sourcesContent":["import { computed, Ref } from 'vue'\n\nexport const useCarousel = (props: {\n  items: any[],\n  infinite: boolean\n}, currentSlide: Ref<number>) => {\n  const goTo = (index: number) => { currentSlide.value = index }\n  const prev = () => {\n    if (props.infinite) {\n      if (currentSlide.value <= 0) {\n        currentSlide.value = props.items.length - 1\n        return\n      }\n    }\n\n    currentSlide.value -= 1\n  }\n  const next = () => {\n    if (props.infinite) {\n      if (currentSlide.value >= props.items.length - 1) {\n        currentSlide.value = 0\n        return\n      }\n    }\n\n    currentSlide.value += 1\n  }\n\n  const doShowPrevButton = computed(() => currentSlide.value > 0 || props.infinite)\n  const doShowNextButton = computed(() => currentSlide.value < props.items.length - 1 || props.infinite)\n\n  return {\n    doShowPrevButton,\n    doShowNextButton,\n    goTo,\n    prev,\n    next,\n  }\n}\n","import { computed, onBeforeUnmount, onMounted, ref, Ref, watch } from 'vue'\n\nexport const useCarouselAnimation = (props: {\n  items: any[],\n  autoscrollInterval: number,\n  autoscrollPauseDuration: number,\n  autoscroll: boolean,\n  infinite: boolean,\n  effect: 'fade' | 'transition',\n  vertical: boolean,\n  fadeKeyframe: string,\n}, currentSlide: Ref<number>) => {\n  let animationInterval = -1\n  let direction = 1\n\n  const start = () => {\n    if (!props.autoscroll) { return }\n\n    clearInterval(animationInterval)\n    animationInterval = setInterval(() => {\n      if (props.infinite) {\n        currentSlide.value += 1\n        if (currentSlide.value >= props.items.length) { currentSlide.value = 0 }\n      } else {\n        if (currentSlide.value <= 0) { direction = 1 }\n        if (currentSlide.value >= props.items.length - 1) { direction = -1 }\n        currentSlide.value += direction\n      }\n    }, props.autoscrollInterval) as any\n  }\n\n  let pauseTimeout: number\n  const pause = () => {\n    if (!props.autoscroll) { return }\n\n    clearInterval(animationInterval)\n\n    pauseTimeout = setTimeout(() => {\n      start()\n      clearTimeout(pauseTimeout)\n    }, props.autoscrollPauseDuration) as any\n  }\n\n  const stop = () => {\n    clearInterval(animationInterval)\n    clearTimeout(pauseTimeout)\n  }\n\n  onMounted(() => start())\n  onBeforeUnmount(() => stop())\n\n  const withPause = <T extends (...args: any[]) => any>(fn: T) => {\n    return (...args: Parameters<T>) => { pause(); fn(...args) }\n  }\n\n  const slidesContainerStyle = ref<Record<string, any>>({\n    transition: undefined as string | undefined,\n  })\n\n  /**\n   * Used for infinite loop. In infinite loop additional first item is placed after all items.\n   * Use own currentSlider, which will not update model value if we need to show slide that placed after all items\n   */\n  const sliderToBeShown = ref(0)\n\n  const computedSlidesStyle = computed(() => {\n    if (props.effect === 'fade') {\n      return {\n        ...slidesContainerStyle.value,\n        transition: 'none',\n      }\n    }\n\n    if (props.vertical) {\n      return {\n        ...slidesContainerStyle.value,\n        transform: `translateY(${sliderToBeShown.value * -100}%)`,\n      }\n    }\n\n    return {\n      ...slidesContainerStyle.value,\n      transform: `translateX(${sliderToBeShown.value * -100}%)`,\n    }\n  })\n\n  const animator = {\n    isAnimating: false,\n\n    speed: 0.3,\n\n    order: [] as { to: number, animate?: boolean }[],\n\n    move (from: number, to: number) {\n      const last = props.items.length - 1\n      const firstAfterLast = props.items.length\n\n      if (to === 0 && from === last) {\n        this.order.push({ to: firstAfterLast })\n        this.order.push({ to: 0, animate: false })\n      } else if (to === last && from === 0) {\n        this.order.push({ to: firstAfterLast, animate: false })\n        this.order.push({ to })\n      } else {\n        this.order.push({ to })\n      }\n\n      if (!this.isAnimating) { this.runAnimation() }\n    },\n\n    runAnimation () {\n      this.isAnimating = true\n\n      const animation = this.order.shift()\n\n      if (!animation) { this.isAnimating = false; return }\n\n      sliderToBeShown.value = animation?.to\n\n      if (animation.animate || animation.animate === undefined) {\n        slidesContainerStyle.value.transition = `all ${this.speed}s linear`\n        setTimeout(() => { this.runAnimation() }, this.speed * 1000)\n      } else {\n        slidesContainerStyle.value.transition = 'none'\n        setTimeout(() => { this.runAnimation() }, 16)\n      }\n    },\n  }\n\n  watch(currentSlide, (newValue, oldValue) => {\n    animator.move(oldValue, newValue)\n  })\n\n  /** Animation should control how much slides to display */\n  const slides = computed(() => {\n    if (props.effect === 'fade') {\n      return [props.items[currentSlide.value]]\n    }\n\n    if (props.infinite) {\n      return [...props.items, props.items[0]]\n    }\n\n    return props.items\n  })\n\n  return {\n    start,\n    pause,\n    stop,\n    withPause,\n    computedSlidesStyle,\n    slides,\n  }\n}\n","import { computed } from 'vue'\nimport { useColors } from '../../../composables'\n\nexport const useCarouselColor = () => {\n  const { setHSLAColor, getColor } = useColors()\n\n  return {\n    computedColor: computed(() => setHSLAColor(getColor('dark'), { a: 0.7 })),\n    computedHoverColor: computed(() => setHSLAColor(getColor('primary'), { a: 0.7 })),\n    computedActiveColor: computed(() => getColor('primary')),\n  }\n}\n","<template>\n  <div\n    class=\"va-carousel\"\n    :class=\"{\n      'va-carousel--vertical': $props.vertical,\n      [`va-carousel--${$props.effect}`]: true\n    }\"\n    :style=\"{ height }\"\n    role=\"region\"\n    aria-label=\"carousel\"\n  >\n    <template v-if=\"$props.arrows\">\n      <div\n        v-if=\"doShowPrevButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--left\"\n        @click=\"prev\"\n        @keydown.enter.stop=\"prev\"\n      >\n        <slot name=\"prev-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'expand_less' : 'chevron_left'\"\n              aria-label=\"go previous slide\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n      <div\n        v-if=\"doShowNextButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--right\"\n        @click=\"next\"\n        @keydown.enter.stop=\"next\"\n      >\n        <slot name=\"next-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'expand_more' : 'chevron_right'\"\n              aria-label=\"go next slide\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n    </template>\n\n    <div class=\"va-carousel__indicators\" v-if=\"$props.indicators\">\n      <div\n        class=\"va-carousel__indicator\"\n        v-for=\"(item, index) in $props.items\" :key=\"index\"\n        :class=\"{ 'va-carousel__indicator--active': index === modelValue }\"\n        v-bind=\"indicatorTrigger === 'hover' ? { onmouseover: () => goTo(index) } : { onclick: () => goTo(index) }\"\n      >\n        <slot name=\"indicator\" v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :aria-label=\"`go slide #${index + 1}`\"\n              round\n              :color=\"isCurrentSlide(index) ? computedActiveColor : (hover ? computedHoverColor : computedColor)\"\n            >\n              {{ index + 1 }}\n            </va-button>\n          </va-hover>\n        </slot>\n      </div>\n    </div>\n\n    <div class=\"va-carousel__content\">\n      <div\n        class=\"va-carousel__slides\"\n        :style=\"computedSlidesStyle\"\n        role=\"list\"\n      >\n        <div\n          class=\"va-carousel__slide\"\n          v-for=\"(item, index) in slides\" :key=\"item\"\n          :style=\"effect === 'fade' ? { animation: fadeKeyframe } : ''\"\n          role=\"listitem\"\n          :aria-hidden=\"!isCurrentSlide(index)\"\n          :aria-current=\"isCurrentSlide(index)\"\n          :aria-label=\"`slide ${index + 1} of ${slides.length}`\"\n        >\n          <slot v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n            <va-image\n              :src=\"isObjectSlides ? item.src : item\"\n              :alt=\"isObjectSlides ? item.alt : ''\"\n            />\n          </slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport { useCarousel } from './hooks/useCarousel'\nimport { useCarouselAnimation } from './hooks/useCarouselAnimation'\nimport { useCarouselColor } from './hooks/useCarouselColors'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { VaImage } from '../va-image'\nimport { VaButton } from '../va-button'\nimport { VaHover } from '../va-hover'\n\nexport default defineComponent({\n  name: 'VaCarousel',\n\n  components: { VaImage, VaButton, VaHover },\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Number, default: 0 },\n    items: { type: Array as PropType<any[]>, required: true },\n\n    // Animations\n    autoscroll: { type: Boolean, default: false },\n    autoscrollInterval: { type: Number, default: 1000 },\n    autoscrollPauseDuration: { type: Number, default: 2000 },\n    infinite: { type: Boolean, default: false },\n    fadeKeyframe: { type: String, default: 'va-carousel-fade-appear 1s' },\n\n    // Visual\n    arrows: { type: Boolean, default: true },\n    indicators: { type: Boolean, default: true },\n    indicatorTrigger: {\n      type: String as PropType<'click' | 'hover'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'hover'].includes(value),\n    },\n    vertical: { type: Boolean, default: false },\n    height: { type: String, default: '300px' },\n    effect: {\n      type: String as PropType<'fade' | 'transition'>,\n      default: 'transition',\n      validator: (value: string) => ['fade', 'transition'].includes(value),\n    },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed: currentSlide } = useStateful(props, emit, 0)\n\n    const {\n      goTo, next, prev,\n      doShowNextButton, doShowPrevButton,\n    } = useCarousel(props, currentSlide)\n\n    const { withPause, computedSlidesStyle, slides } = useCarouselAnimation(props, currentSlide)\n    const isObjectSlides = computed(() => {\n      return props.items.length && props.items.every((el) => !!el && typeof el === 'object' && !!el?.src)\n    })\n    const isCurrentSlide = (index: number) => +index === currentSlide.value\n\n    return {\n      doShowNextButton,\n      doShowPrevButton,\n      computedSlidesStyle,\n      goTo: withPause(goTo),\n      prev: withPause(prev),\n      next: withPause(next),\n      slides,\n      isObjectSlides,\n      isCurrentSlide,\n      ...useCarouselColor(),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"./_variables.scss\";\n\n@keyframes va-carousel-fade-appear {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.va-carousel {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background: var(--va-carousel-background);\n  box-shadow: var(--va-carousel-box-shadow);\n  border-radius: var(--va-carousel-border-radius);\n  position: relative;\n  overflow: hidden;\n\n  &__content {\n    flex: 1;\n    width: 100%;\n    white-space: nowrap;\n  }\n\n  &__slides {\n    width: 100%;\n    height: 100%;\n    transition: var(--va-carousel-slides-transition);\n  }\n\n  &__slide {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  &__indicators {\n    width: 100%;\n    position: absolute;\n    bottom: var(--va-carousel-padding);\n    display: flex;\n    justify-content: center;\n    z-index: 2;\n    overflow-x: auto;\n    left: 50%;\n    transform: translateX(-50%);\n\n    @include va-scroll();\n\n    & > * {\n      margin: 0 var(--va-carousel-indicators-gap);\n    }\n  }\n\n  &__arrow {\n    z-index: 1;\n    width: max-content;\n    height: max-content;\n\n    &--right {\n      right: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    &--left {\n      left: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n\n  &--vertical {\n    .va-carousel {\n      &__slide {\n        display: flex;\n      }\n\n      &__arrow {\n        z-index: 1;\n\n        &--right {\n          bottom: var(--va-carousel-padding);\n          top: auto;\n          left: 50%;\n          transform: translateX(-50%);\n        }\n\n        &--left {\n          top: var(--va-carousel-padding);\n          left: 50%;\n          transform: translateX(-50%);\n        }\n      }\n\n      &__indicators {\n        left: var(--va-carousel-padding);\n        flex-direction: column;\n        width: auto;\n        height: 100%;\n        top: 50%;\n        transform: translateY(-50%);\n        overflow-x: hidden;\n        overflow-y: auto;\n\n        & > * {\n          margin: var(--va-carousel-indicators-gap) 0;\n        }\n      }\n    }\n  }\n\n  .va-image {\n    height: 100%;\n    width: 100%;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-carousel\"\n    :class=\"{\n      'va-carousel--vertical': $props.vertical,\n      [`va-carousel--${$props.effect}`]: true\n    }\"\n    :style=\"{ height }\"\n    role=\"region\"\n    aria-label=\"carousel\"\n  >\n    <template v-if=\"$props.arrows\">\n      <div\n        v-if=\"doShowPrevButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--left\"\n        @click=\"prev\"\n        @keydown.enter.stop=\"prev\"\n      >\n        <slot name=\"prev-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'expand_less' : 'chevron_left'\"\n              aria-label=\"go previous slide\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n      <div\n        v-if=\"doShowNextButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--right\"\n        @click=\"next\"\n        @keydown.enter.stop=\"next\"\n      >\n        <slot name=\"next-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'expand_more' : 'chevron_right'\"\n              aria-label=\"go next slide\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n    </template>\n\n    <div class=\"va-carousel__indicators\" v-if=\"$props.indicators\">\n      <div\n        class=\"va-carousel__indicator\"\n        v-for=\"(item, index) in $props.items\" :key=\"index\"\n        :class=\"{ 'va-carousel__indicator--active': index === modelValue }\"\n        v-bind=\"indicatorTrigger === 'hover' ? { onmouseover: () => goTo(index) } : { onclick: () => goTo(index) }\"\n      >\n        <slot name=\"indicator\" v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :aria-label=\"`go slide #${index + 1}`\"\n              round\n              :color=\"isCurrentSlide(index) ? computedActiveColor : (hover ? computedHoverColor : computedColor)\"\n            >\n              {{ index + 1 }}\n            </va-button>\n          </va-hover>\n        </slot>\n      </div>\n    </div>\n\n    <div class=\"va-carousel__content\">\n      <div\n        class=\"va-carousel__slides\"\n        :style=\"computedSlidesStyle\"\n        role=\"list\"\n      >\n        <div\n          class=\"va-carousel__slide\"\n          v-for=\"(item, index) in slides\" :key=\"item\"\n          :style=\"effect === 'fade' ? { animation: fadeKeyframe } : ''\"\n          role=\"listitem\"\n          :aria-hidden=\"!isCurrentSlide(index)\"\n          :aria-current=\"isCurrentSlide(index)\"\n          :aria-label=\"`slide ${index + 1} of ${slides.length}`\"\n        >\n          <slot v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n            <va-image\n              :src=\"isObjectSlides ? item.src : item\"\n              :alt=\"isObjectSlides ? item.alt : ''\"\n            />\n          </slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport { useCarousel } from './hooks/useCarousel'\nimport { useCarouselAnimation } from './hooks/useCarouselAnimation'\nimport { useCarouselColor } from './hooks/useCarouselColors'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { VaImage } from '../va-image'\nimport { VaButton } from '../va-button'\nimport { VaHover } from '../va-hover'\n\nexport default defineComponent({\n  name: 'VaCarousel',\n\n  components: { VaImage, VaButton, VaHover },\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Number, default: 0 },\n    items: { type: Array as PropType<any[]>, required: true },\n\n    // Animations\n    autoscroll: { type: Boolean, default: false },\n    autoscrollInterval: { type: Number, default: 1000 },\n    autoscrollPauseDuration: { type: Number, default: 2000 },\n    infinite: { type: Boolean, default: false },\n    fadeKeyframe: { type: String, default: 'va-carousel-fade-appear 1s' },\n\n    // Visual\n    arrows: { type: Boolean, default: true },\n    indicators: { type: Boolean, default: true },\n    indicatorTrigger: {\n      type: String as PropType<'click' | 'hover'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'hover'].includes(value),\n    },\n    vertical: { type: Boolean, default: false },\n    height: { type: String, default: '300px' },\n    effect: {\n      type: String as PropType<'fade' | 'transition'>,\n      default: 'transition',\n      validator: (value: string) => ['fade', 'transition'].includes(value),\n    },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed: currentSlide } = useStateful(props, emit, 0)\n\n    const {\n      goTo, next, prev,\n      doShowNextButton, doShowPrevButton,\n    } = useCarousel(props, currentSlide)\n\n    const { withPause, computedSlidesStyle, slides } = useCarouselAnimation(props, currentSlide)\n    const isObjectSlides = computed(() => {\n      return props.items.length && props.items.every((el) => !!el && typeof el === 'object' && !!el?.src)\n    })\n    const isCurrentSlide = (index: number) => +index === currentSlide.value\n\n    return {\n      doShowNextButton,\n      doShowPrevButton,\n      computedSlidesStyle,\n      goTo: withPause(goTo),\n      prev: withPause(prev),\n      next: withPause(next),\n      slides,\n      isObjectSlides,\n      isCurrentSlide,\n      ...useCarouselColor(),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"./_variables.scss\";\n\n@keyframes va-carousel-fade-appear {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.va-carousel {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background: var(--va-carousel-background);\n  box-shadow: var(--va-carousel-box-shadow);\n  border-radius: var(--va-carousel-border-radius);\n  position: relative;\n  overflow: hidden;\n\n  &__content {\n    flex: 1;\n    width: 100%;\n    white-space: nowrap;\n  }\n\n  &__slides {\n    width: 100%;\n    height: 100%;\n    transition: var(--va-carousel-slides-transition);\n  }\n\n  &__slide {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  &__indicators {\n    width: 100%;\n    position: absolute;\n    bottom: var(--va-carousel-padding);\n    display: flex;\n    justify-content: center;\n    z-index: 2;\n    overflow-x: auto;\n    left: 50%;\n    transform: translateX(-50%);\n\n    @include va-scroll();\n\n    & > * {\n      margin: 0 var(--va-carousel-indicators-gap);\n    }\n  }\n\n  &__arrow {\n    z-index: 1;\n    width: max-content;\n    height: max-content;\n\n    &--right {\n      right: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    &--left {\n      left: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n\n  &--vertical {\n    .va-carousel {\n      &__slide {\n        display: flex;\n      }\n\n      &__arrow {\n        z-index: 1;\n\n        &--right {\n          bottom: var(--va-carousel-padding);\n          top: auto;\n          left: 50%;\n          transform: translateX(-50%);\n        }\n\n        &--left {\n          top: var(--va-carousel-padding);\n          left: 50%;\n          transform: translateX(-50%);\n        }\n      }\n\n      &__indicators {\n        left: var(--va-carousel-padding);\n        flex-direction: column;\n        width: auto;\n        height: 100%;\n        top: 50%;\n        transform: translateY(-50%);\n        overflow-x: hidden;\n        overflow-y: auto;\n\n        & > * {\n          margin: var(--va-carousel-indicators-gap) 0;\n        }\n      }\n    }\n  }\n\n  .va-image {\n    height: 100%;\n    width: 100%;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaCarousel from './VaCarousel.vue'\n\nexport const VaCarousel = withConfigTransport(_VaCarousel)\n"],"names":["useCarouselAnimation","props","currentSlide","animationInterval","direction","start","autoscroll","clearInterval","setInterval","infinite","value","items","length","autoscrollInterval","pauseTimeout","pause","setTimeout","clearTimeout","autoscrollPauseDuration","stop","onMounted","onBeforeUnmount","slidesContainerStyle","ref","transition","undefined","sliderToBeShown","computedSlidesStyle","computed","effect","vertical","transform","animator","isAnimating","speed","order","move","from","to","last","firstAfterLast","this","push","animate","runAnimation","animation","shift","watch","newValue","oldValue","slides","withPause","fn","args","useCarouselColor","setHSLAColor","getColor","useColors","computedColor","a","computedHoverColor","computedActiveColor","script","defineComponent","name","components","VaImage","VaButton","VaHover","useStatefulProps","modelValue","type","Number","default","Array","required","Boolean","fadeKeyframe","String","arrows","indicators","indicatorTrigger","validator","includes","height","color","emits","useStatefulEmits","setup","emit","valueComputed","useStateful","goTo","next","prev","doShowNextButton","doShowPrevButton","index","useCarousel","isObjectSlides","every","el","src","isCurrentSlide","class","_ctx","$props","style","role","_push","_ssrRenderComponent","_component_va_hover","stateful","_withCtx","hover","_parent","_scopeId","_createVNode","_component_va_button","icon","_ssrRenderList","item","key","onclick","_ssrRenderSlot","$slots","isActive","round","_","_ssrRenderStyle","_ssrRenderAttr","alt","VaCarousel","withConfigTransport","_VaCarousel"],"mappings":"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"}