{"version":3,"file":"index45.js","sources":["../../src/components/va-rating/types.ts","../../src/components/va-rating/hooks/useRating.ts","../../src/components/va-rating/hooks/useVaRatingColors.ts","../../src/components/va-rating/components/VaRatingItem/VaRatingItem.vue","../../src/components/va-rating/components/VaRatingItem/VaRatingItem.vue?vue&type=template&id=030c47f6&lang.js","../../src/components/va-rating/components/VaRatingItemNumberButton.vue","../../src/components/va-rating/components/VaRatingItemNumberButton.vue?vue&type=template&id=08e7d55f&lang.js","../../src/components/va-rating/VaRating.vue","../../src/components/va-rating/VaRating.vue?vue&type=template&id=10f2d130&lang.js","../../src/components/va-rating/components/VaRatingItem/index.ts","../../src/components/va-rating/index.ts"],"sourcesContent":["export enum RatingValue {\n  EMPTY = 0,\n  HALF = 0.5,\n  FULL = 1\n}\n","import { ref, getCurrentInstance, computed, ExtractPropTypes } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useHover, useStateful, useStatefulProps, useFormProps } from '../../../composables'\n\nimport { RatingValue } from '../types'\n\nconst getContext = <P extends Record<string, any> = Record<string, any>, E extends string = string>() => {\n  const instance = getCurrentInstance()\n  if (!instance) { throw new Error('useRating hooks must be used on top of setup function') }\n  return {\n    props: instance.props,\n    emit: instance.emit,\n  } as {\n    props: P,\n    emit: (event: E, ...args: any[]) => void\n  }\n}\n\nexport const useRatingProps = {\n  ...useStatefulProps,\n  modelValue: { type: Number, default: 0 },\n  clearable: { type: Boolean, default: false },\n  hover: { type: Boolean, default: false },\n}\n\nexport const useRating = (props: ExtractPropTypes<typeof useRatingProps> & ExtractPropTypes<typeof useFormProps>) => {\n  const { emit } = getContext()\n  const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n  const { valueComputed: modelValue } = useStateful(props, emit)\n\n  const hoveredValue = ref(0)\n  const visibleValue = computed(() => !props.disabled && !props.readonly && props.hover && isHovered.value ? hoveredValue.value : modelValue.value)\n\n  const onItemValueUpdate = (itemIndex: number, newValue: number) => {\n    const newModelValue = itemIndex + newValue\n    if (props.clearable) {\n      if (modelValue.value === newModelValue) {\n        modelValue.value = 0\n        return\n      }\n    }\n    modelValue.value = newModelValue\n  }\n\n  const onItemHoveredValueUpdate = (itemIndex: number, newValue: number) => {\n    if (!props.hover) { return }\n    hoveredValue.value = itemIndex + newValue\n  }\n\n  const getItemValue = (itemIndex: number) => {\n    const itemValue = visibleValue.value - itemIndex\n    return clamp(itemValue, RatingValue.EMPTY, RatingValue.FULL)\n  }\n\n  return {\n    visibleValue,\n    modelValue,\n    hoveredValue,\n    isHovered,\n    onMouseEnter,\n    onMouseLeave,\n    onItemValueUpdate,\n    onItemHoveredValueUpdate,\n    getItemValue,\n  }\n}\n","import { computed, ExtractPropTypes } from 'vue'\n\nimport { useColors } from '../../../composables'\nimport { RatingValue } from '../types'\n\nexport const useVaRatingColorsProps = {\n  unselectedColor: { type: String },\n  color: { type: String, default: 'primary' },\n  modelValue: { type: Number },\n}\n\nexport const useVaRatingColors = (props: ExtractPropTypes<typeof useVaRatingColorsProps>) => {\n  const { getColor, getFocusColor, getTextColor } = useColors()\n\n  const computedColor = computed(() => getColor(props.color))\n\n  const backgroundColor = computed(() => {\n    if (props.unselectedColor) { return getColor(props.unselectedColor) }\n\n    return getFocusColor(getColor(props.color))\n  })\n\n  const backgroundComputed = computed(() => {\n    if (props.modelValue === RatingValue.HALF) {\n      return `linear-gradient(90deg, ${computedColor.value} 50%, ${backgroundColor.value} 50%`\n    }\n\n    if (props.modelValue === RatingValue.EMPTY) {\n      return backgroundColor.value\n    }\n\n    return computedColor.value\n  })\n\n  const textColorComputed = computed(() => {\n    if (props.modelValue === RatingValue.FULL) {\n      return getTextColor(computedColor.value)\n    }\n\n    return getTextColor(backgroundColor.value)\n  })\n\n  return {\n    computedColor,\n    backgroundComputed,\n    textColorComputed,\n  }\n}\n","<template>\n  <div\n    ref=\"rootEl\"\n    class=\"va-rating-item\"\n    role=\"button\"\n    :tabindex=\"tabIndexComputed\"\n    @keyup.enter=\"onClick\"\n    @keyup.space=\"onClick\"\n    @mousemove=\"onMouseMove\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <slot :props=\"{ value: visibleValue, onClick }\">\n      <va-icon\n        class=\"va-rating-item__wrapper\"\n        tabindex=\"-1\"\n        tag=\"button\"\n        :name=\"computedIconName\"\n        :size=\"$props.size\"\n        :color=\"computedColor\"\n        @click=\"onClick\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, shallowRef, watch } from 'vue'\n\nimport { useColors, useSyncProp } from '../../../../composables'\n\nimport { RatingValue } from '../../types'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaRatingItem',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    icon: { type: String, default: 'star' },\n    halfIcon: { type: String, default: 'star_half' },\n    emptyIcon: { type: String, default: 'star_outline' },\n    halves: { type: Boolean, default: false },\n    hover: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    size: { type: [String, Number], default: 'medium' },\n    unselectedColor: { type: String },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'click', 'hover'],\n\n  setup (props, { emit }) {\n    const rootEl = shallowRef<HTMLElement>()\n\n    const [modelValue] = useSyncProp('modelValue', props, emit, RatingValue.EMPTY)\n    const hoveredValue = ref<number | null>(null)\n\n    const visibleValue = computed(() => {\n      if (props.hover && !props.disabled && !props.readonly) {\n        return hoveredValue.value || modelValue.value\n      }\n      return modelValue.value\n    })\n\n    const { getColor } = useColors()\n    const computedColor = computed(() => getColor(\n      props.unselectedColor && visibleValue.value === RatingValue.EMPTY\n        ? props.unselectedColor\n        : props.color,\n    ))\n\n    const onMouseMove = (ev: MouseEvent) => {\n      if (!rootEl.value) { return }\n      const { offsetX } = ev\n      const iconWidth = rootEl.value.clientWidth\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL\n      } else {\n        hoveredValue.value = RatingValue.FULL\n      }\n    }\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null\n    }\n\n    const onEnter = () => {\n      modelValue.value = 1\n    }\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL\n      emit('click', hoveredValue.value || RatingValue.FULL)\n    }\n\n    watch(hoveredValue, () => emit('hover', hoveredValue.value || RatingValue.EMPTY))\n\n    return {\n      computedColor,\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon\n        }\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon\n        }\n\n        return props.icon\n      }),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n\n.va-rating-item {\n  display: inline-block;\n\n  &:focus {\n    @include focus-outline();\n  }\n\n  &__wrapper {\n    @include normalize-button();\n  }\n}\n</style>\n","<template>\n  <div\n    ref=\"rootEl\"\n    class=\"va-rating-item\"\n    role=\"button\"\n    :tabindex=\"tabIndexComputed\"\n    @keyup.enter=\"onClick\"\n    @keyup.space=\"onClick\"\n    @mousemove=\"onMouseMove\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <slot :props=\"{ value: visibleValue, onClick }\">\n      <va-icon\n        class=\"va-rating-item__wrapper\"\n        tabindex=\"-1\"\n        tag=\"button\"\n        :name=\"computedIconName\"\n        :size=\"$props.size\"\n        :color=\"computedColor\"\n        @click=\"onClick\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, shallowRef, watch } from 'vue'\n\nimport { useColors, useSyncProp } from '../../../../composables'\n\nimport { RatingValue } from '../../types'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaRatingItem',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    icon: { type: String, default: 'star' },\n    halfIcon: { type: String, default: 'star_half' },\n    emptyIcon: { type: String, default: 'star_outline' },\n    halves: { type: Boolean, default: false },\n    hover: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    size: { type: [String, Number], default: 'medium' },\n    unselectedColor: { type: String },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'click', 'hover'],\n\n  setup (props, { emit }) {\n    const rootEl = shallowRef<HTMLElement>()\n\n    const [modelValue] = useSyncProp('modelValue', props, emit, RatingValue.EMPTY)\n    const hoveredValue = ref<number | null>(null)\n\n    const visibleValue = computed(() => {\n      if (props.hover && !props.disabled && !props.readonly) {\n        return hoveredValue.value || modelValue.value\n      }\n      return modelValue.value\n    })\n\n    const { getColor } = useColors()\n    const computedColor = computed(() => getColor(\n      props.unselectedColor && visibleValue.value === RatingValue.EMPTY\n        ? props.unselectedColor\n        : props.color,\n    ))\n\n    const onMouseMove = (ev: MouseEvent) => {\n      if (!rootEl.value) { return }\n      const { offsetX } = ev\n      const iconWidth = rootEl.value.clientWidth\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL\n      } else {\n        hoveredValue.value = RatingValue.FULL\n      }\n    }\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null\n    }\n\n    const onEnter = () => {\n      modelValue.value = 1\n    }\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL\n      emit('click', hoveredValue.value || RatingValue.FULL)\n    }\n\n    watch(hoveredValue, () => emit('hover', hoveredValue.value || RatingValue.EMPTY))\n\n    return {\n      computedColor,\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon\n        }\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon\n        }\n\n        return props.icon\n      }),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n\n.va-rating-item {\n  display: inline-block;\n\n  &:focus {\n    @include focus-outline();\n  }\n\n  &__wrapper {\n    @include normalize-button();\n  }\n}\n</style>\n","<template>\n  <button\n    class=\"va-rating__number-item\"\n    tabindex=\"-1\"\n    aria-hidden=\"true\"\n    :style=\"{\n      background: backgroundComputed,\n      color: textColorComputed,\n      width: sizeComputed,\n      height: sizeComputed,\n      fontSize: fontSizeComputed,\n      borderRadius: `${parseInt(fontSizeComputed) * 0.125}rem`,\n    }\"\n  >\n    {{ itemNumber }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport { useSize, useSizeProps } from '../../../composables'\nimport { useVaRatingColorsProps, useVaRatingColors } from '../hooks/useVaRatingColors'\n\nexport default defineComponent({\n  name: 'VaRatingItemNumberButton',\n\n  props: {\n    ...useVaRatingColorsProps,\n    ...useSizeProps,\n    itemNumber: { type: Number, required: true },\n    modelValue: { type: Number, required: true },\n  },\n\n  setup (props) {\n    return {\n      ...useVaRatingColors(props),\n      ...useSize(props, 'VaRating'),\n    }\n  },\n})\n</script>\n","<template>\n  <button\n    class=\"va-rating__number-item\"\n    tabindex=\"-1\"\n    aria-hidden=\"true\"\n    :style=\"{\n      background: backgroundComputed,\n      color: textColorComputed,\n      width: sizeComputed,\n      height: sizeComputed,\n      fontSize: fontSizeComputed,\n      borderRadius: `${parseInt(fontSizeComputed) * 0.125}rem`,\n    }\"\n  >\n    {{ itemNumber }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport { useSize, useSizeProps } from '../../../composables'\nimport { useVaRatingColorsProps, useVaRatingColors } from '../hooks/useVaRatingColors'\n\nexport default defineComponent({\n  name: 'VaRatingItemNumberButton',\n\n  props: {\n    ...useVaRatingColorsProps,\n    ...useSizeProps,\n    itemNumber: { type: Number, required: true },\n    modelValue: { type: Number, required: true },\n  },\n\n  setup (props) {\n    return {\n      ...useVaRatingColors(props),\n      ...useSize(props, 'VaRating'),\n    }\n  },\n})\n</script>\n","<template>\n  <div\n    class=\"va-rating\"\n    :class=\"rootClass\"\n    :aria-label=\"`current rating ${$props.modelValue} of ${$props.max}`\"\n  >\n    <div\n      class=\"va-rating__item-wrapper\"\n      @keyup.left=\"onArrowKeyPress(-1)\"\n      @keyup.right=\"onArrowKeyPress(1)\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n    >\n      <va-rating-item\n        v-for=\"itemNumber in $props.max\"\n        :key=\"itemNumber\"\n        v-bind=\"VaRatingItemProps\"\n        :aria-label=\"`vote rating ${itemNumber} of ${$props.max}`\"\n        :model-value=\"getItemValue(itemNumber - 1)\"\n        :tabindex=\"tabIndexComputed\"\n        :disabled=\"$props.disabled\"\n        :readonly=\"$props.readonly\"\n        @hover=\"isInteractionsEnabled && onItemHoveredValueUpdate(itemNumber - 1, $event)\"\n        @update:model-value=\"isInteractionsEnabled && onItemValueUpdate(itemNumber - 1, $event)\"\n      >\n        <template v-if=\"$props.numbers\" v-slot=\"{ props }\">\n          <VaRatingItemNumberButton\n            v-bind=\"VaRatingItemNumberButtonProps\"\n            :model-value=\"props.value\"\n            :item-number=\"itemNumber\"\n            @click=\"props.onClick\"\n          />\n        </template>\n      </va-rating-item>\n    </div>\n    <span\n      v-if=\"$props.texts && $props.texts.length === $props.max\"\n      class=\"va-rating__text-wrapper\"\n      :style=\"{ color: computedColor }\"\n    >\n      {{ $props.texts[Math.round(visibleValue) - 1] }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { useForm, useFormProps } from '../../composables'\nimport { useRating, useRatingProps } from './hooks/useRating'\nimport { useVaRatingColors, useVaRatingColorsProps } from './hooks/useVaRatingColors'\n\nimport { RatingValue } from './types'\n\nimport VaRatingItem from './components/VaRatingItem/VaRatingItem.vue'\nimport VaRatingItemNumberButton from './components/VaRatingItemNumberButton.vue'\n\nconst VaRatingItemProps = extractComponentProps(VaRatingItem)\nconst VaRatingItemNumberButtonProps = extractComponentProps(VaRatingItemNumberButton, ['modelValue', 'itemNumber'])\n\nexport default defineComponent({\n  name: 'VaRating',\n  props: {\n    ...useRatingProps,\n    ...useVaRatingColorsProps,\n    ...useFormProps,\n    ...VaRatingItemProps,\n    ...VaRatingItemNumberButtonProps,\n    numbers: { type: Boolean, default: false },\n    halves: { type: Boolean, default: false },\n    max: { type: Number, default: 5 },\n    texts: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  emits: ['update:modelValue'],\n  components: { VaRatingItem, VaRatingItemNumberButton },\n  setup (props) {\n    const { computedClasses: rootClass } = useForm('va-rating', props)\n    const rating = useRating(props)\n    const isInteractionsEnabled = computed(() => !props.disabled && !props.readonly)\n\n    return {\n      ...useVaRatingColors(props),\n      ...rating,\n      rootClass,\n      VaRatingItemProps: filterComponentProps(props, VaRatingItemProps),\n      VaRatingItemNumberButtonProps: filterComponentProps(props, VaRatingItemNumberButtonProps),\n      isInteractionsEnabled,\n      tabIndexComputed: computed(() => isInteractionsEnabled.value ? 0 : undefined),\n      onArrowKeyPress: (direction: 1 | -1) => {\n        const step = props.halves ? RatingValue.HALF : RatingValue.FULL\n        rating.onItemValueUpdate(rating.visibleValue.value, step * direction)\n      },\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-rating {\n  display: var(--va-rating-display);\n  font-family: var(--va-font-family);\n\n  &__number-item {\n    @include normalize-button();\n\n    font-size: var(--va-rating-number-item-font-size);\n    margin: var(--va-rating-number-item-margin);\n    font-weight: var(--va-rating-number-item-font-weight);\n\n    @include flex-center();\n\n    cursor: pointer;\n\n    @at-root {\n      .va-rating--disabled & {\n        @include va-disabled();\n      }\n\n      .va-rating--readonly & {\n        cursor: default;\n      }\n    }\n  }\n\n  &__item-wrapper {\n    display: var(--va-rating-item-wrapper-display);\n    cursor: var(--va-rating-item-wrapper-cursor);\n\n    @at-root {\n      .va-rating--readonly &,\n      .va-rating--disabled & {\n        cursor: default;\n      }\n    }\n  }\n\n  &-item {\n    display: var(--va-rating-item-display);\n\n    @include flex-center();\n\n    .va-rating--disabled & {\n      @include va-disabled();\n\n      &__wrapper {\n        cursor: initial !important;\n      }\n    }\n\n    .va-rating--readonly & &__wrapper {\n      cursor: initial !important;\n    }\n  }\n\n  &__text-wrapper {\n    padding-left: 10px;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-rating\"\n    :class=\"rootClass\"\n    :aria-label=\"`current rating ${$props.modelValue} of ${$props.max}`\"\n  >\n    <div\n      class=\"va-rating__item-wrapper\"\n      @keyup.left=\"onArrowKeyPress(-1)\"\n      @keyup.right=\"onArrowKeyPress(1)\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n    >\n      <va-rating-item\n        v-for=\"itemNumber in $props.max\"\n        :key=\"itemNumber\"\n        v-bind=\"VaRatingItemProps\"\n        :aria-label=\"`vote rating ${itemNumber} of ${$props.max}`\"\n        :model-value=\"getItemValue(itemNumber - 1)\"\n        :tabindex=\"tabIndexComputed\"\n        :disabled=\"$props.disabled\"\n        :readonly=\"$props.readonly\"\n        @hover=\"isInteractionsEnabled && onItemHoveredValueUpdate(itemNumber - 1, $event)\"\n        @update:model-value=\"isInteractionsEnabled && onItemValueUpdate(itemNumber - 1, $event)\"\n      >\n        <template v-if=\"$props.numbers\" v-slot=\"{ props }\">\n          <VaRatingItemNumberButton\n            v-bind=\"VaRatingItemNumberButtonProps\"\n            :model-value=\"props.value\"\n            :item-number=\"itemNumber\"\n            @click=\"props.onClick\"\n          />\n        </template>\n      </va-rating-item>\n    </div>\n    <span\n      v-if=\"$props.texts && $props.texts.length === $props.max\"\n      class=\"va-rating__text-wrapper\"\n      :style=\"{ color: computedColor }\"\n    >\n      {{ $props.texts[Math.round(visibleValue) - 1] }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { useForm, useFormProps } from '../../composables'\nimport { useRating, useRatingProps } from './hooks/useRating'\nimport { useVaRatingColors, useVaRatingColorsProps } from './hooks/useVaRatingColors'\n\nimport { RatingValue } from './types'\n\nimport VaRatingItem from './components/VaRatingItem/VaRatingItem.vue'\nimport VaRatingItemNumberButton from './components/VaRatingItemNumberButton.vue'\n\nconst VaRatingItemProps = extractComponentProps(VaRatingItem)\nconst VaRatingItemNumberButtonProps = extractComponentProps(VaRatingItemNumberButton, ['modelValue', 'itemNumber'])\n\nexport default defineComponent({\n  name: 'VaRating',\n  props: {\n    ...useRatingProps,\n    ...useVaRatingColorsProps,\n    ...useFormProps,\n    ...VaRatingItemProps,\n    ...VaRatingItemNumberButtonProps,\n    numbers: { type: Boolean, default: false },\n    halves: { type: Boolean, default: false },\n    max: { type: Number, default: 5 },\n    texts: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  emits: ['update:modelValue'],\n  components: { VaRatingItem, VaRatingItemNumberButton },\n  setup (props) {\n    const { computedClasses: rootClass } = useForm('va-rating', props)\n    const rating = useRating(props)\n    const isInteractionsEnabled = computed(() => !props.disabled && !props.readonly)\n\n    return {\n      ...useVaRatingColors(props),\n      ...rating,\n      rootClass,\n      VaRatingItemProps: filterComponentProps(props, VaRatingItemProps),\n      VaRatingItemNumberButtonProps: filterComponentProps(props, VaRatingItemNumberButtonProps),\n      isInteractionsEnabled,\n      tabIndexComputed: computed(() => isInteractionsEnabled.value ? 0 : undefined),\n      onArrowKeyPress: (direction: 1 | -1) => {\n        const step = props.halves ? RatingValue.HALF : RatingValue.FULL\n        rating.onItemValueUpdate(rating.visibleValue.value, step * direction)\n      },\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-rating {\n  display: var(--va-rating-display);\n  font-family: var(--va-font-family);\n\n  &__number-item {\n    @include normalize-button();\n\n    font-size: var(--va-rating-number-item-font-size);\n    margin: var(--va-rating-number-item-margin);\n    font-weight: var(--va-rating-number-item-font-weight);\n\n    @include flex-center();\n\n    cursor: pointer;\n\n    @at-root {\n      .va-rating--disabled & {\n        @include va-disabled();\n      }\n\n      .va-rating--readonly & {\n        cursor: default;\n      }\n    }\n  }\n\n  &__item-wrapper {\n    display: var(--va-rating-item-wrapper-display);\n    cursor: var(--va-rating-item-wrapper-cursor);\n\n    @at-root {\n      .va-rating--readonly &,\n      .va-rating--disabled & {\n        cursor: default;\n      }\n    }\n  }\n\n  &-item {\n    display: var(--va-rating-item-display);\n\n    @include flex-center();\n\n    .va-rating--disabled & {\n      @include va-disabled();\n\n      &__wrapper {\n        cursor: initial !important;\n      }\n    }\n\n    .va-rating--readonly & &__wrapper {\n      cursor: initial !important;\n    }\n  }\n\n  &__text-wrapper {\n    padding-left: 10px;\n  }\n}\n</style>\n","import withConfigTransport from '../../../../services/config-transport/withConfigTransport'\nimport _VaRatingItem from './VaRatingItem.vue'\n\nexport const VaRatingItem = withConfigTransport(_VaRatingItem)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaRating from './VaRating.vue'\nexport { VaRatingItem } from './components/VaRatingItem'\n\nexport const VaRating = withConfigTransport(_VaRating)\n"],"names":["RatingValue","useRatingProps","useStatefulProps","modelValue","type","Number","default","clearable","Boolean","hover","useRating","props","emit","instance","getCurrentInstance","Error","getContext","isHovered","onMouseEnter","onMouseLeave","useHover","valueComputed","useStateful","hoveredValue","ref","visibleValue","computed","disabled","readonly","value","onItemValueUpdate","itemIndex","newValue","newModelValue","onItemHoveredValueUpdate","getItemValue","itemValue","clamp","EMPTY","FULL","useVaRatingColorsProps","unselectedColor","String","color","useVaRatingColors","getColor","getFocusColor","getTextColor","useColors","computedColor","backgroundColor","backgroundComputed","HALF","textColorComputed","script$2","defineComponent","name","components","VaIcon","icon","halfIcon","emptyIcon","halves","tabindex","size","emits","setup","rootEl","shallowRef","useSyncProp","watch","onEnter","onClick","onMouseMove","ev","offsetX","iconWidth","clientWidth","computedIconName","tabIndexComputed","class","role","_ctx","tag","$props","script$1","useSizeProps","itemNumber","required","useSize","style","sizeComputed","fontSizeComputed","borderRadius","parseInt","VaRatingItemProps","extractComponentProps","VaRatingItem","VaRatingItemNumberButtonProps","VaRatingItemNumberButton","script","useFormProps","numbers","max","texts","Array","computedClasses","rootClass","useForm","rating","isInteractionsEnabled","filterComponentProps","undefined","onArrowKeyPress","direction","step","key","fn","_withCtx","_push","_parent","_scopeId","_createVNode","_component_VaRatingItemNumberButton","_mergeProps","length","_ssrInterpolate","Math","round","withConfigTransport","_VaRatingItem","VaRating","_VaRating"],"mappings":"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"}