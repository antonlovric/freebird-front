{"version":3,"file":"index47.mjs","sources":["../../src/components/va-sidebar/hooks/useSidebar.ts","../../src/components/va-sidebar/VaSidebar.vue","../../src/components/va-sidebar/VaSidebar.vue?vue&type=template&id=2d72e2e8&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue?vue&type=template&id=28c8df18&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemContent.vue","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemContent.vue?vue&type=template&id=653c85d6&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemTitle.vue","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemTitle.vue?vue&type=template&id=357b7474&lang.js","../../src/components/va-sidebar/VaSidebarItem/index.ts","../../src/components/va-sidebar/index.ts"],"sourcesContent":["import { provide, inject, getCurrentInstance, toRef, ref } from 'vue'\n\nconst key = Symbol('VaSidebar')\n\nexport const useSidebar = () => {\n  const { props } = getCurrentInstance() as unknown as { props: { color?: string } }\n\n  provide(key, {\n    color: toRef(props, 'color'),\n  })\n}\n\nexport const useSidebarItem = () => {\n  const { color } = inject(key, { color: ref('white') })\n\n  return {\n    sidebarColor: color,\n  }\n}\n","<template>\n  <aside\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors, useTextColor } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    color: { type: String, default: 'background' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<'left' | 'right'>,\n      default: 'left',\n      validator: (v: string) => ['left', 'right'].includes(v),\n    },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    useSidebar()\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n      const background = props.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        background,\n        width: computedWidth.value,\n      }\n    })\n\n    const computedClass = computed(() => ({\n      'va-sidebar--minimized': isMinimized.value,\n      'va-sidebar--right': props.position === 'right',\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    return {\n      computedClass,\n      computedStyle,\n      updateHoverState,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <aside\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors, useTextColor } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    color: { type: String, default: 'background' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<'left' | 'right'>,\n      default: 'left',\n      validator: (v: string) => ['left', 'right'].includes(v),\n    },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    useSidebar()\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n      const background = props.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        background,\n        width: computedWidth.value,\n      }\n    })\n\n    const computedClass = computed(() => ({\n      'va-sidebar--minimized': isMinimized.value,\n      'va-sidebar--right': props.position === 'right',\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    return {\n      computedClass,\n      computedStyle,\n      updateHoverState,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <component\n    ref=\"anchor\"\n    class=\"va-sidebar__item va-sidebar-item\"\n    tabindex=\"0\"\n    :class=\"{ 'va-sidebar-item--active': $props.active }\"\n    :style=\"computedStyle\"\n    :href=\"hrefComputed\"\n    :to=\"$props.to\"\n    :is=\"tagComputed\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, shallowRef, StyleValue } from 'vue'\n\nimport {\n  useColors,\n  useKeyboardOnlyFocus,\n  useHover,\n  useRouterLink, useRouterLinkProps,\n  useTextColor,\n} from '../../../composables'\nimport { useSidebarItem } from '../hooks/useSidebar'\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n\n  props: {\n    ...useRouterLinkProps,\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const anchor = shallowRef<HTMLAnchorElement>()\n\n    const { isHovered } = useHover(anchor)\n    const { getColor, getHoverColor, getFocusColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { sidebarColor } = useSidebarItem()\n\n    const backgroundColorComputed = computed(() => {\n      if (props.active && !isHovered.value && !hasKeyboardFocus.value) {\n        return getColor(props.activeColor)\n      }\n\n      return getColor(sidebarColor.value)\n    })\n\n    const { textColorComputed } = useTextColor(backgroundColorComputed)\n\n    const computedStyle = computed(() => {\n      const style: StyleValue = {\n        color: props.textColor,\n      }\n\n      if (props.active) {\n        style.backgroundColor = backgroundColorComputed.value\n        style.color = textColorComputed.value\n        style.borderColor = getColor(props.borderColor || props.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        style.backgroundColor = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (isHovered.value) {\n        style.backgroundColor = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      return style\n    })\n\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n\n    return {\n      anchor,\n      computedStyle,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isHovered,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../variables\";\n@import \"../../../styles/resources\";\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  font-family: var(--va-font-family);\n  transition: var(--va-sidebar-item-transition);\n  box-sizing: border-box;\n\n  &:visited {\n    color: currentColor;\n  }\n}\n</style>\n","<template>\n  <component\n    ref=\"anchor\"\n    class=\"va-sidebar__item va-sidebar-item\"\n    tabindex=\"0\"\n    :class=\"{ 'va-sidebar-item--active': $props.active }\"\n    :style=\"computedStyle\"\n    :href=\"hrefComputed\"\n    :to=\"$props.to\"\n    :is=\"tagComputed\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, shallowRef, StyleValue } from 'vue'\n\nimport {\n  useColors,\n  useKeyboardOnlyFocus,\n  useHover,\n  useRouterLink, useRouterLinkProps,\n  useTextColor,\n} from '../../../composables'\nimport { useSidebarItem } from '../hooks/useSidebar'\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n\n  props: {\n    ...useRouterLinkProps,\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const anchor = shallowRef<HTMLAnchorElement>()\n\n    const { isHovered } = useHover(anchor)\n    const { getColor, getHoverColor, getFocusColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { sidebarColor } = useSidebarItem()\n\n    const backgroundColorComputed = computed(() => {\n      if (props.active && !isHovered.value && !hasKeyboardFocus.value) {\n        return getColor(props.activeColor)\n      }\n\n      return getColor(sidebarColor.value)\n    })\n\n    const { textColorComputed } = useTextColor(backgroundColorComputed)\n\n    const computedStyle = computed(() => {\n      const style: StyleValue = {\n        color: props.textColor,\n      }\n\n      if (props.active) {\n        style.backgroundColor = backgroundColorComputed.value\n        style.color = textColorComputed.value\n        style.borderColor = getColor(props.borderColor || props.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        style.backgroundColor = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (isHovered.value) {\n        style.backgroundColor = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      return style\n    })\n\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n\n    return {\n      anchor,\n      computedStyle,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isHovered,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../variables\";\n@import \"../../../styles/resources\";\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  font-family: var(--va-font-family);\n  transition: var(--va-sidebar-item-transition);\n  box-sizing: border-box;\n\n  &:visited {\n    color: currentColor;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__item__content va-sidebar-item-content\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaSidebarItemContent',\n})\n\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item__content {\n  display: flex;\n  align-items: center;\n  padding: var(--va-sidebar-item-content-padding);\n  min-height: 58px;\n\n  & > * {\n    margin-right: var(--va-sidebar-item-content-gap);\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__item__content va-sidebar-item-content\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaSidebarItemContent',\n})\n\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item__content {\n  display: flex;\n  align-items: center;\n  padding: var(--va-sidebar-item-content-padding);\n  min-height: 58px;\n\n  & > * {\n    margin-right: var(--va-sidebar-item-content-gap);\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__title va-sidebar-item-title\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaSidebarItemTitle',\n})\n</script>\n\n<style lang=\"scss\">\n@import '../_variables';\n\n.va-sidebar__title {\n  flex-grow: 1;\n  white-space: var(--va-sidebar-item-title-white-space);\n  transition: opacity 0.2s ease-in-out;\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__title va-sidebar-item-title\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaSidebarItemTitle',\n})\n</script>\n\n<style lang=\"scss\">\n@import '../_variables';\n\n.va-sidebar__title {\n  flex-grow: 1;\n  white-space: var(--va-sidebar-item-title-white-space);\n  transition: opacity 0.2s ease-in-out;\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport _VaSidebarItem from './VaSidebarItem.vue'\nimport _VaSidebarItemContent from './VaSidebarItemContent.vue'\nimport _VaSidebarItemTitle from './VaSidebarItemTitle.vue'\n\nexport const VaSidebarItemContent = withConfigTransport(_VaSidebarItemContent)\nexport const VaSidebarItemTitle = withConfigTransport(_VaSidebarItemTitle)\nexport const VaSidebarItem = withConfigTransport(_VaSidebarItem)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaSidebar from './VaSidebar.vue'\n\nexport { VaSidebarItem, VaSidebarItemContent, VaSidebarItemTitle } from './VaSidebarItem'\n\nexport const VaSidebar = withConfigTransport(_VaSidebar)\n"],"names":["key","Symbol","script$3","defineComponent","name","props","color","type","String","default","textColor","gradient","Boolean","minimized","hoverable","position","validator","v","includes","width","minimizedWidth","modelValue","setup","getColor","useColors","getCurrentInstance","provide","toRef","useSidebar","isHovered","ref","isMinimized","computed","value","computedWidth","textColorComputed","useTextColor","computedStyle","backgroundColor","background","getGradientBackground","computedClass","updateHoverState","newHoverState","_hoisted_1","class","_createElementBlock","_normalizeClass","_ctx","style","onMouseenter","onMouseleave","_createElementVNode","_renderSlot","$slots","script$2","useRouterLinkProps","active","undefined","activeColor","hoverColor","borderColor","anchor","shallowRef","useHover","getHoverColor","getFocusColor","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","sidebarColor","inject","useSidebarItem","backgroundColorComputed","tagComputed","hrefComputed","useRouterLink","_createBlock","_resolveDynamicComponent","_mergeProps","$props","tabindex","href","to","_toHandlers","script$1","_openBlock","script","VaSidebarItemContent","withConfigTransport","_VaSidebarItemContent","VaSidebarItemTitle","_VaSidebarItemTitle","VaSidebarItem","_VaSidebarItem","VaSidebar","_VaSidebar"],"mappings":"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"}