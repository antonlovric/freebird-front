{"version":3,"file":"index65.mjs","sources":["../../src/services/global-config/plugin/index.ts","../../src/services/color-config/plugin/index.ts","../../src/services/color-config/plugin/create-color-config-plugin.ts"],"sourcesContent":["import { App } from 'vue'\nimport { createGlobalConfig, GLOBAL_CONFIG } from '../global-config'\nimport { GlobalConfig } from '../types'\nimport { defineGlobalProperty, defineVuesticPlugin } from '../../../vuestic-plugin/utils'\n\n/** Provides global configuration to Vuestic components */\nexport const GlobalConfigPlugin = defineVuesticPlugin((config: GlobalConfig | undefined) => ({\n  install (app: App) {\n    const globalConfig = createGlobalConfig()\n\n    if (config) { globalConfig.mergeGlobalConfig(config) }\n\n    app.provide(GLOBAL_CONFIG, globalConfig)\n\n    defineGlobalProperty(app, '$vaConfig', globalConfig)\n  },\n}))\n\ndeclare module 'vue' {\n  export interface ComponentCustomProperties {\n    $vaConfig: ReturnType<typeof createGlobalConfig>\n  }\n}\n","import type { Plugin } from 'vue'\nimport { createColorConfigPlugin } from './create-color-config-plugin'\nimport { defineGlobalProperty, defineVuesticPlugin } from '../../../vuestic-plugin/utils'\n\n/** Creates color css variables and reactively updates on ColorConfig changes. */\nexport const ColorConfigPlugin = defineVuesticPlugin(() => ({\n  install (app) {\n    defineGlobalProperty(app, '$vaColorConfig', createColorConfigPlugin(app))\n  },\n}))\n\ndeclare module 'vue' {\n  export interface ComponentCustomProperties {\n    $vaColorConfig: ReturnType<typeof createColorConfigPlugin>\n  }\n}\n","import { App, watch } from 'vue'\nimport { GlobalConfig } from '../../global-config/global-config'\nimport { isServer } from '../../../utils/ssr-utils'\nimport { getGlobalProperty } from '../../../vuestic-plugin/utils'\n\nexport const setCSSVariable = (name: string, value: string, root: HTMLElement) => {\n  root.style.setProperty(`--va-${name}`, value)\n}\n\nexport const createColorConfigPlugin = (app: App) => {\n  const globalConfig = getGlobalProperty(app, '$vaConfig').globalConfig\n\n  /** Renders CSS varialbes string. Use this in SSR mode */\n  const renderCSSVarialbes = (colors: GlobalConfig['colors'] = globalConfig.value.colors) => {\n    if (!colors) { return }\n\n    const colorNames = Object.keys(colors)\n    return colorNames.map((key) => `--va-${key}: ${colors[key]}`).join(';')\n  }\n\n  const updateColors = (newValue: GlobalConfig['colors']) => {\n    if (!newValue) { return }\n    if (isServer()) { return }\n\n    const root = document.documentElement\n\n    const colorNames = Object.keys(newValue)\n    colorNames.forEach((key) => {\n      setCSSVariable(key, newValue[key], root)\n    })\n  }\n\n  updateColors(globalConfig.value.colors)\n\n  watch(() => globalConfig.value.colors, (newValue) => {\n    updateColors(newValue)\n  }, { immediate: true, deep: true })\n\n  return { renderCSSVarialbes, updateColors }\n}\n"],"names":["GlobalConfigPlugin","defineVuesticPlugin","config","install","app","globalConfig","createGlobalConfig","mergeGlobalConfig","provide","GLOBAL_CONFIG","defineGlobalProperty","ColorConfigPlugin","getGlobalProperty","updateColors","newValue","isServer","root","document","documentElement","Object","keys","forEach","key","name","value","style","setProperty","setCSSVariable","colors","watch","immediate","deep","renderCSSVarialbes","map","join","createColorConfigPlugin"],"mappings":"oPAMa,MAAAA,EAAqBC,GAAqBC,IAAsC,CAC3FC,QAASC,GACP,MAAMC,EAAeC,IAEjBJ,GAAUG,EAAaE,kBAAkBL,GAE7CE,EAAII,QAAQC,EAAeJ,GAE3BK,EAAqBN,EAAK,YAAaC,QCT9BM,EAAoBV,GAAoB,KAAO,CAC1DE,QAASC,GACPM,EAAqBN,EAAK,iBCES,CAACA,IACtC,MAAMC,EAAeO,EAAkBR,EAAK,aAAaC,aAUnDQ,aAAgBC,IACpB,IAAKA,EAAY,OACjB,GAAIC,IAAc,OAElB,MAAMC,EAAOC,SAASC,gBAEHC,OAAOC,KAAKN,GACpBO,SAASC,IAtBM,EAACC,EAAcC,EAAeR,KAC1DA,EAAKS,MAAMC,YAAY,QAAQH,IAAQC,IAsBnCG,CAAeL,EAAKR,EAASQ,GAAMN,OAUvC,OANAH,aAAaR,EAAamB,MAAMI,QAEhCC,GAAM,IAAMxB,EAAamB,MAAMI,SAASd,IACtCD,aAAaC,KACZ,CAAEgB,WAAW,EAAMC,MAAM,IAErB,CAAEC,mBAzBkB,CAACJ,EAAiCvB,EAAamB,MAAMI,UAC9E,GAAKA,EAGL,OADmBT,OAAOC,KAAKQ,GACbK,KAAKX,GAAQ,QAAQA,MAAQM,EAAON,OAAQY,KAAK,MAqBxCrB,aAAAA,eD/BiBsB,CAAwB/B"}