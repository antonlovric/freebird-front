{"version":3,"file":"useForm.mjs","sources":["../../src/composables/useForm.ts"],"sourcesContent":["import { computed, ExtractPropTypes } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useBem } from './useBem'\n\nexport const useFormProps = {\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useFormPropsWithId = {\n  ...useFormProps,\n  id: { type: [String, Number], default: undefined },\n  name: { type: [String, Number], default: undefined },\n}\n\n/**\n * @description creates `readonly` and `disabled` BEM modifiers.\n * @param prefix string that classes start with (base BEM class).\n * @param props component props.\n * @returns computed classes object starting with `prefix` and ending with form state BEM modifier.\n */\nexport const useForm = <Prefix extends string = ''>(\n  prefix: Prefix,\n  props: ExtractPropTypes<typeof useFormProps>,\n) => {\n  const computedClasses = useBem<'disabled' | 'readonly', Prefix>(prefix, computed(() => pick(props, ['disabled', 'readonly'])))\n  return { computedClasses }\n}\n"],"names":["useFormProps","disabled","type","Boolean","default","readonly","useForm","prefix","props","computedClasses","useBem","computed","pick"],"mappings":"qGAKa,MAAAA,EAAe,CAC1BC,SAAU,CAAEC,KAAMC,QAASC,SAAS,GACpCC,SAAU,CAAEH,KAAMC,QAASC,SAAS,IAezBE,QAAU,CACrBC,EACAC,KAGO,CAAEC,gBADeC,EAAwCH,EAAQI,GAAS,IAAMC,EAAKJ,EAAO,CAAC,WAAY"}