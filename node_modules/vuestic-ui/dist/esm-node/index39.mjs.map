{"version":3,"file":"index39.mjs","sources":["../../src/components/va-pagination/VaPagination.vue","../../src/components/va-pagination/setPaginationRange.ts","../../src/components/va-pagination/VaPagination.vue?vue&type=template&id=51c93e08&lang.js","../../src/components/va-pagination/index.ts"],"sourcesContent":["<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n    @keydown.left.stop=\"onUserInput(currentValue - 1)\"\n    @keydown.right.stop=\"onUserInput(currentValue + 1)\"\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go first page\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go prev page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        v-for=\"(n, i) in paginationRange\"\n        :key=\"i\"\n        class=\"va-pagination__numeric-button\"\n        outline\n        :aria-label=\"`go to ${n} page`\"\n        :aria-current=\"n === currentValue\"\n        :style=\"activeButtonStyle(n)\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{ 'va-button--ellipsis': n === '...'}\"\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      aria-label=\"enter the page number to go\"\n      v-model=\"inputValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      :style=\"inputStyleComputed\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go next page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go last page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, nextTick, shallowRef } from 'vue'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport { useColors, useTextColor, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { setPaginationRange } from './setPaginationRange'\n\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaButton } from '../va-button'\n\nexport default defineComponent({\n  name: 'VaPagination',\n  components: { VaButtonGroup, VaButton },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 1 },\n    visiblePages: { type: Number, default: 0 },\n    pages: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n    boundaryLinks: { type: Boolean, default: true },\n    boundaryNumbers: { type: Boolean, default: false },\n    directionLinks: { type: Boolean, default: true },\n    input: { type: Boolean, default: false },\n    hideOnSinglePage: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    total: { type: Number, default: null },\n    pageSize: { type: Number, default: null },\n    boundaryIconLeft: { type: String, default: 'first_page' },\n    boundaryIconRight: { type: String, default: 'last_page' },\n    directionIconLeft: { type: String, default: 'chevron_left' },\n    directionIconRight: { type: String, default: 'chevron_right' },\n  },\n\n  setup (props, { emit }) {\n    const htmlInput = shallowRef<HTMLInputElement>()\n\n    const inputValue = ref('')\n\n    const usedTotal = computed(() => !!((props.total || props.pageSize === 0) && props.pageSize))\n\n    const { valueComputed } = useStateful<number>(props, emit)\n\n    const { textColorComputed } = useTextColor()\n\n    const currentValue = computed({\n      get: () => usedTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: (value) => { valueComputed.value = value },\n    })\n\n    const paginationRange = computed(() => {\n      const { visiblePages, total, pageSize, boundaryNumbers, pages } = props\n\n      const value = currentValue.value || 1\n      const totalPages = usedTotal.value ? Math.ceil(total / pageSize) : pages\n\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers)\n    })\n\n    const lastPage = computed(() => usedTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : props.pages)\n\n    const IsLstPageNotVisible = computed(() => (!!props.visiblePages && lastPage.value > props.visiblePages))\n\n    const showBoundaryLinks = computed(() => {\n      const { boundaryLinks, boundaryNumbers, input } = props\n\n      return input || (IsLstPageNotVisible.value && boundaryLinks && !boundaryNumbers)\n    })\n\n    const showDirectionLinks = computed(() => props.input || (IsLstPageNotVisible.value && props.directionLinks))\n\n    const showPagination = computed(() => lastPage.value > 1 || (!props.hideOnSinglePage && lastPage.value <= 1))\n\n    const focusInput = () => {\n      inputValue.value = `${currentValue.value}`\n\n      nextTick(() => htmlInput.value?.setSelectionRange(0, htmlInput.value.value.length))\n    }\n\n    const onUserInput = (pageNum: number | '...') => {\n      if (pageNum === '...' || pageNum < 1 || pageNum > lastPage.value) { return }\n\n      currentValue.value = usedTotal.value ? (pageNum - 1) * props.pageSize + 1 : pageNum\n    }\n\n    const resetInput = () => {\n      inputValue.value = ''\n      htmlInput.value?.blur()\n    }\n\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput()\n      }\n\n      if (!inputValue.value.length) { return }\n\n      let pageNum = Number.parseInt(inputValue.value)\n\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1; break\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value; break\n        case isNaN(pageNum):\n          pageNum = currentValue.value; break\n        default: break\n      }\n\n      onUserInput(pageNum)\n      resetInput()\n    }\n\n    const { getColor } = useColors()\n\n    const activeButtonStyle = (buttonValue: number | '...') => {\n      if (buttonValue === currentValue.value) {\n        return {\n          backgroundColor: getColor(props.color),\n          color: textColorComputed.value,\n        }\n      }\n\n      return {\n        color: getColor(props.color),\n      }\n    }\n\n    const inputStyleComputed = computed(() => ({\n      cursor: 'default',\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n    }))\n\n    watch([usedTotal, () => props.pages], () => {\n      if (__DEV__ && usedTotal.value && props.pages) {\n        throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n      }\n    })\n\n    return {\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      activeButtonStyle,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  &__numeric-button {\n    &.va-button {\n      .va-button__content {\n        // Remove paddings from button content\n        padding: 0;\n        justify-content: center;\n      }\n\n      // Add paddings to button content in min-width\n      &--normal {\n        .va-button__content {\n          min-width: calc(var(--va-button-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--small {\n        .va-button__content {\n          min-width: calc(var(--va-button-sm-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--large {\n        .va-button__content {\n          min-width: calc(var(--va-button-lg-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","export const setPaginationRange = (value = 1, visiblePages: number, pages: number, includeBoundary = false) => {\n  let start = 0\n\n  if (pages === 0) {\n    pages = 1\n  }\n\n  if (visiblePages > pages) {\n    visiblePages = pages\n  }\n  if (visiblePages === 0) {\n    start = 1\n    visiblePages = pages\n  } else {\n    const paginationMiddlePage = visiblePages / 2\n    if (value - paginationMiddlePage <= 0 || value > pages) {\n      start = 1\n    } else {\n      start = value + paginationMiddlePage > pages\n        ? pages - visiblePages + 1\n        : Math.ceil(value - paginationMiddlePage)\n    }\n  }\n\n  const range: Array<'...' | number> = []\n\n  for (let i = 0; i < visiblePages; i++) {\n    range.push(start + i)\n  }\n\n  if (includeBoundary) {\n    start !== 1 && range.splice(0, 2, 1, '...')\n    range[range.length - 1] !== pages && range.splice(-2, 2, '...', pages)\n  }\n\n  return range\n}\n","<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n    @keydown.left.stop=\"onUserInput(currentValue - 1)\"\n    @keydown.right.stop=\"onUserInput(currentValue + 1)\"\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go first page\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go prev page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        v-for=\"(n, i) in paginationRange\"\n        :key=\"i\"\n        class=\"va-pagination__numeric-button\"\n        outline\n        :aria-label=\"`go to ${n} page`\"\n        :aria-current=\"n === currentValue\"\n        :style=\"activeButtonStyle(n)\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{ 'va-button--ellipsis': n === '...'}\"\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      aria-label=\"enter the page number to go\"\n      v-model=\"inputValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      :style=\"inputStyleComputed\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      aria-label=\"go next page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      aria-label=\"go last page\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, nextTick, shallowRef } from 'vue'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport { useColors, useTextColor, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { setPaginationRange } from './setPaginationRange'\n\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaButton } from '../va-button'\n\nexport default defineComponent({\n  name: 'VaPagination',\n  components: { VaButtonGroup, VaButton },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 1 },\n    visiblePages: { type: Number, default: 0 },\n    pages: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n    boundaryLinks: { type: Boolean, default: true },\n    boundaryNumbers: { type: Boolean, default: false },\n    directionLinks: { type: Boolean, default: true },\n    input: { type: Boolean, default: false },\n    hideOnSinglePage: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    total: { type: Number, default: null },\n    pageSize: { type: Number, default: null },\n    boundaryIconLeft: { type: String, default: 'first_page' },\n    boundaryIconRight: { type: String, default: 'last_page' },\n    directionIconLeft: { type: String, default: 'chevron_left' },\n    directionIconRight: { type: String, default: 'chevron_right' },\n  },\n\n  setup (props, { emit }) {\n    const htmlInput = shallowRef<HTMLInputElement>()\n\n    const inputValue = ref('')\n\n    const usedTotal = computed(() => !!((props.total || props.pageSize === 0) && props.pageSize))\n\n    const { valueComputed } = useStateful<number>(props, emit)\n\n    const { textColorComputed } = useTextColor()\n\n    const currentValue = computed({\n      get: () => usedTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: (value) => { valueComputed.value = value },\n    })\n\n    const paginationRange = computed(() => {\n      const { visiblePages, total, pageSize, boundaryNumbers, pages } = props\n\n      const value = currentValue.value || 1\n      const totalPages = usedTotal.value ? Math.ceil(total / pageSize) : pages\n\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers)\n    })\n\n    const lastPage = computed(() => usedTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : props.pages)\n\n    const IsLstPageNotVisible = computed(() => (!!props.visiblePages && lastPage.value > props.visiblePages))\n\n    const showBoundaryLinks = computed(() => {\n      const { boundaryLinks, boundaryNumbers, input } = props\n\n      return input || (IsLstPageNotVisible.value && boundaryLinks && !boundaryNumbers)\n    })\n\n    const showDirectionLinks = computed(() => props.input || (IsLstPageNotVisible.value && props.directionLinks))\n\n    const showPagination = computed(() => lastPage.value > 1 || (!props.hideOnSinglePage && lastPage.value <= 1))\n\n    const focusInput = () => {\n      inputValue.value = `${currentValue.value}`\n\n      nextTick(() => htmlInput.value?.setSelectionRange(0, htmlInput.value.value.length))\n    }\n\n    const onUserInput = (pageNum: number | '...') => {\n      if (pageNum === '...' || pageNum < 1 || pageNum > lastPage.value) { return }\n\n      currentValue.value = usedTotal.value ? (pageNum - 1) * props.pageSize + 1 : pageNum\n    }\n\n    const resetInput = () => {\n      inputValue.value = ''\n      htmlInput.value?.blur()\n    }\n\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput()\n      }\n\n      if (!inputValue.value.length) { return }\n\n      let pageNum = Number.parseInt(inputValue.value)\n\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1; break\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value; break\n        case isNaN(pageNum):\n          pageNum = currentValue.value; break\n        default: break\n      }\n\n      onUserInput(pageNum)\n      resetInput()\n    }\n\n    const { getColor } = useColors()\n\n    const activeButtonStyle = (buttonValue: number | '...') => {\n      if (buttonValue === currentValue.value) {\n        return {\n          backgroundColor: getColor(props.color),\n          color: textColorComputed.value,\n        }\n      }\n\n      return {\n        color: getColor(props.color),\n      }\n    }\n\n    const inputStyleComputed = computed(() => ({\n      cursor: 'default',\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n    }))\n\n    watch([usedTotal, () => props.pages], () => {\n      if (__DEV__ && usedTotal.value && props.pages) {\n        throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n      }\n    })\n\n    return {\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      activeButtonStyle,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  &__numeric-button {\n    &.va-button {\n      .va-button__content {\n        // Remove paddings from button content\n        padding: 0;\n        justify-content: center;\n      }\n\n      // Add paddings to button content in min-width\n      &--normal {\n        .va-button__content {\n          min-width: calc(var(--va-button-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--small {\n        .va-button__content {\n          min-width: calc(var(--va-button-sm-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n\n      &--large {\n        .va-button__content {\n          min-width: calc(var(--va-button-lg-content-px) * 2 + var(--va-pagination-button-content-width));\n        }\n      }\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaPagination from './VaPagination.vue'\n\nexport const VaPagination = withConfigTransport(_VaPagination)\n"],"names":["script","defineComponent","name","components","VaButtonGroup","VaButton","emits","useStatefulEmits","props","useStatefulProps","modelValue","type","Number","default","visiblePages","pages","disabled","Boolean","color","String","size","validator","v","includes","boundaryLinks","boundaryNumbers","directionLinks","input","hideOnSinglePage","flat","total","pageSize","boundaryIconLeft","boundaryIconRight","directionIconLeft","directionIconRight","setup","emit","htmlInput","shallowRef","inputValue","ref","usedTotal","computed","valueComputed","useStateful","textColorComputed","useTextColor","currentValue","get","value","Math","ceil","set","paginationRange","includeBoundary","start","paginationMiddlePage","range","i","push","splice","length","setPaginationRange","lastPage","IsLstPageNotVisible","showBoundaryLinks","showDirectionLinks","showPagination","onUserInput","pageNum","resetInput","_a","blur","getColor","useColors","inputStyleComputed","cursor","opacity","watch","__DEV__","Error","changeValue","parseInt","isNaN","activeButtonStyle","buttonValue","backgroundColor","focusInput","nextTick","setSelectionRange","_ctx","_createBlock","_component_va_button_group","class","$props","outline","onKeydown","_cache","_withKeys","_withModifiers","$event","_component_va_button","icon","onClick","_createElementBlock","_normalizeClass","placeholder","style","args","onFocus","onBlur","_renderSlot","_openBlock","_Fragment","_renderList","n","key","_normalizeStyle","VaPagination","withConfigTransport","_VaPagination"],"mappings":"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"}