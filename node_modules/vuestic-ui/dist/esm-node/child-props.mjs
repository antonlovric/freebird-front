import{computed as e}from"vue";function normalizeProps(e){switch(!0){case Array.isArray(e):return e.reduce(((e,t)=>({...e,[t]:null})),{});case"object"==typeof e&&null!==e:return e;default:return{}}}function mergeProps(e,t,o="props"){const{mixins:n,extends:r}=t;r&&mergeProps(e,r,o),n&&n.forEach((t=>mergeProps(e,t,o)));const s=normalizeProps(t[o]);for(const t in s)e[t]=s[t]}const getComponentProps=e=>function resolveProps(e,t="props"){var o,n;const r=null!==(o=e.mixins)&&void 0!==o?o:[],s={};mergeProps(s,null!==(n=e.extends)&&void 0!==n?n:[],t);for(let e=0;e<r.length;e++)mergeProps(s,r[e],t);return Object.assign(s,normalizeProps(e[t])),s}(function getComponentOptions(e){return e.options?e.options:e.__vccOpts||e.__b?{...e.__vccOpts,...e.__b}:e}(e)),filterComponentProps=(t,o)=>e((()=>Object.keys(o).reduce(((e,o)=>(e[o]=t[o],e)),{})));function extractComponentProps(e,t){const o=getComponentProps(e);return t?Object.keys(o).reduce(((e,n)=>(t.includes(n)||void 0===o[n]||(e[n]="string"==typeof o[n]?{}:o[n]),e)),{}):o}function extractComponentEmits(e){return[...new Set(e.emits)]}export{extractComponentEmits as a,extractComponentProps as e,filterComponentProps as f};
//# sourceMappingURL=child-props.mjs.map
