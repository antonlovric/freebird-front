import{provide as e,computed as o,onMounted as t,watch as n,inject as a,ref as u,onBeforeUnmount as m}from"vue";const s=Symbol("AccordionService"),useAccordion=(a,u)=>{let m=[];e(s,{isInsideAccordion:!0,onItemMounted:e=>{m.push(e)},onItemUnmounted:e=>{m=m.filter((o=>o!==e))},onItemChanged:e=>{u.value=m.map((o=>(o===e||a.multiply||(o.state.value=!1),o.state.value)))},props:o((()=>a))});const updateItemStates=()=>{m.forEach(((e,o)=>{e.state.value=u.value[o]}))};return t(updateItemStates),n(u,updateItemStates),{items:m}},useAccordionItem=e=>{const o=a(s,{props:u({inset:void 0,popout:void 0}),onItemChanged:()=>{},onItemMounted:()=>{},onItemUnmounted:()=>{}}),n={state:e};return t((()=>o.onItemMounted(n))),m((()=>o.onItemUnmounted(n))),{accordionProps:o.props,toggle:()=>{e.value=!e.value,o.onItemChanged(n)}}};export{useAccordionItem as a,useAccordion as u};
//# sourceMappingURL=useAccordion.mjs.map
