{"version":3,"file":"toast.mjs","sources":["../../src/composables/useTimer.ts","../../src/components/va-toast/VaToast.vue","../../src/components/va-toast/VaToast.vue?vue&type=template&id=e50edcbc&lang.js","../../src/components/va-toast/hooks/useToast.ts","../../src/components/va-toast/index.ts","../../src/components/va-toast/toast.ts"],"sourcesContent":["type SetTimeout = Window['setTimeout']\n\nexport const useTimer = () => {\n  let timer: ReturnType<SetTimeout> | undefined\n\n  const start = (...args: Parameters<SetTimeout>) => {\n    timer = window.setTimeout(...args)\n\n    return timer\n  }\n\n  const clear = () => timer && window.clearTimeout(timer)\n\n  return {\n    start,\n    clear,\n  }\n}\n","<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      ref=\"rootElement\"\n      :role=\"$props.closeable ? 'alertdialog' : 'alert'\"\n      class=\"va-toast\"\n      :class=\"toastClasses\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onToastClick\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"$props.title\" class=\"va-toast__title\" v-text=\"$props.title\" />\n\n        <div class=\"va-toast__content\" v-show=\"$props.message\">\n          <div v-if=\"$props.dangerouslyUseHtmlString\" v-html=\"computedMessage\" />\n          <p v-else v-text=\"computedMessage\" />\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"$props.render\">\n          <VaToastRenderer :render=\"$props.render\" />\n        </div>\n\n        <va-icon\n          v-if=\"$props.closeable\"\n          class=\"va-toast__close-icon\"\n          role=\"button\"\n          aria-label=\"close toast\"\n          aria-hidden=\"false\"\n          tabindex=\"0\"\n          size=\"small\"\n          :name=\"$props.icon\"\n          @click.stop=\"onToastClose\"\n          @keydown.enter.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, onMounted, shallowRef } from 'vue'\n\nimport { useColors, useTimer, useTextColor } from '../../composables'\n\nimport { ToastPosition } from './types'\n\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nconst VaToastRenderer = defineComponent({\n  name: 'VaToastRenderer',\n  props: {\n    render: { type: Function, required: true },\n  },\n  setup: (props) => () => props.render(),\n})\n\nexport default defineComponent({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n  props: {\n    title: { type: String, default: '' },\n    offsetY: { type: Number, default: 16 },\n    offsetX: { type: Number, default: 16 },\n    message: { type: [String, Function], default: '' },\n    dangerouslyUseHtmlString: { type: Boolean, default: false },\n    icon: { type: String, default: 'close' },\n    customClass: { type: String, default: '' },\n    duration: { type: Number, default: 5000 },\n    color: { type: String, default: '' },\n    closeable: { type: Boolean, default: true },\n    onClose: { type: Function },\n    onClick: { type: Function },\n    multiLine: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<ToastPosition>,\n      default: 'top-right',\n      validator: (value: string) => ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value),\n    },\n    render: { type: Function },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n\n    const { getColor } = useColors()\n\n    const { textColorComputed } = useTextColor()\n\n    const visible = ref(false)\n\n    const positionX = computed(() => {\n      return props.position.includes('right') ? 'right' : 'left'\n    })\n\n    const positionY = computed(() => {\n      return props.position.includes('top') ? 'top' : 'bottom'\n    })\n\n    const toastClasses = computed(() => [\n      props.customClass,\n      props.multiLine ? 'va-toast--multiline' : '',\n    ])\n\n    const toastStyles = computed(() => ({\n      [positionY.value]: `${props.offsetY}px`,\n      [positionX.value]: `${props.offsetX}px`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    const computedMessage = computed(() => (typeof props.message === 'function') ? props.message() : props.message)\n\n    const destroyElement = () => {\n      rootElement.value?.removeEventListener('transitionend', destroyElement)\n\n      rootElement.value?.remove()\n    }\n\n    const onToastClick = () => {\n      if (typeof props.onClick === 'function') {\n        props.onClick()\n      } else {\n        emit('on-click')\n      }\n    }\n\n    const onToastClose = () => {\n      visible.value = false\n\n      rootElement.value?.addEventListener('transitionend', destroyElement)\n\n      if (typeof props.onClose === 'function') {\n        props.onClose()\n      } else {\n        emit('on-close')\n      }\n    }\n\n    const timer = useTimer()\n    const clearTimer = timer.clear\n    const startTimer = () => {\n      if (props.duration > 0) {\n        timer.start(() => visible.value && onToastClose(), props.duration)\n      }\n    }\n\n    onMounted(() => {\n      visible.value = true\n\n      startTimer()\n    })\n\n    return {\n      visible,\n      toastClasses,\n      toastStyles,\n      computedMessage,\n      onToastClick,\n      onToastClose,\n      startTimer,\n      clearTimer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-toast {\n  position: fixed;\n  box-sizing: border-box;\n  width: var(--va-toast-width);\n  padding: var(--va-toast-padding);\n  display: flex;\n  align-items: center;\n  border-radius: var(--va-toast-border-radius);\n  border: 1px solid var(--va-toast-border-color);\n  background-color: var(--va-toast-background-color);\n  color: var(--va-toast-color);\n  box-shadow: var(--va-toast-box-shadow);\n  transition: var(--va-toast-transition);\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p,\n    div {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: var(--va-toast-close-icon-right);\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: var(--va-toast-close-icon-font-siz);\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n\n    &:focus {\n      @include focus-outline;\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n</style>\n","<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      ref=\"rootElement\"\n      :role=\"$props.closeable ? 'alertdialog' : 'alert'\"\n      class=\"va-toast\"\n      :class=\"toastClasses\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onToastClick\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"$props.title\" class=\"va-toast__title\" v-text=\"$props.title\" />\n\n        <div class=\"va-toast__content\" v-show=\"$props.message\">\n          <div v-if=\"$props.dangerouslyUseHtmlString\" v-html=\"computedMessage\" />\n          <p v-else v-text=\"computedMessage\" />\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"$props.render\">\n          <VaToastRenderer :render=\"$props.render\" />\n        </div>\n\n        <va-icon\n          v-if=\"$props.closeable\"\n          class=\"va-toast__close-icon\"\n          role=\"button\"\n          aria-label=\"close toast\"\n          aria-hidden=\"false\"\n          tabindex=\"0\"\n          size=\"small\"\n          :name=\"$props.icon\"\n          @click.stop=\"onToastClose\"\n          @keydown.enter.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, onMounted, shallowRef } from 'vue'\n\nimport { useColors, useTimer, useTextColor } from '../../composables'\n\nimport { ToastPosition } from './types'\n\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nconst VaToastRenderer = defineComponent({\n  name: 'VaToastRenderer',\n  props: {\n    render: { type: Function, required: true },\n  },\n  setup: (props) => () => props.render(),\n})\n\nexport default defineComponent({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n  props: {\n    title: { type: String, default: '' },\n    offsetY: { type: Number, default: 16 },\n    offsetX: { type: Number, default: 16 },\n    message: { type: [String, Function], default: '' },\n    dangerouslyUseHtmlString: { type: Boolean, default: false },\n    icon: { type: String, default: 'close' },\n    customClass: { type: String, default: '' },\n    duration: { type: Number, default: 5000 },\n    color: { type: String, default: '' },\n    closeable: { type: Boolean, default: true },\n    onClose: { type: Function },\n    onClick: { type: Function },\n    multiLine: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<ToastPosition>,\n      default: 'top-right',\n      validator: (value: string) => ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value),\n    },\n    render: { type: Function },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n\n    const { getColor } = useColors()\n\n    const { textColorComputed } = useTextColor()\n\n    const visible = ref(false)\n\n    const positionX = computed(() => {\n      return props.position.includes('right') ? 'right' : 'left'\n    })\n\n    const positionY = computed(() => {\n      return props.position.includes('top') ? 'top' : 'bottom'\n    })\n\n    const toastClasses = computed(() => [\n      props.customClass,\n      props.multiLine ? 'va-toast--multiline' : '',\n    ])\n\n    const toastStyles = computed(() => ({\n      [positionY.value]: `${props.offsetY}px`,\n      [positionX.value]: `${props.offsetX}px`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    const computedMessage = computed(() => (typeof props.message === 'function') ? props.message() : props.message)\n\n    const destroyElement = () => {\n      rootElement.value?.removeEventListener('transitionend', destroyElement)\n\n      rootElement.value?.remove()\n    }\n\n    const onToastClick = () => {\n      if (typeof props.onClick === 'function') {\n        props.onClick()\n      } else {\n        emit('on-click')\n      }\n    }\n\n    const onToastClose = () => {\n      visible.value = false\n\n      rootElement.value?.addEventListener('transitionend', destroyElement)\n\n      if (typeof props.onClose === 'function') {\n        props.onClose()\n      } else {\n        emit('on-close')\n      }\n    }\n\n    const timer = useTimer()\n    const clearTimer = timer.clear\n    const startTimer = () => {\n      if (props.duration > 0) {\n        timer.start(() => visible.value && onToastClose(), props.duration)\n      }\n    }\n\n    onMounted(() => {\n      visible.value = true\n\n      startTimer()\n    })\n\n    return {\n      visible,\n      toastClasses,\n      toastStyles,\n      computedMessage,\n      onToastClick,\n      onToastClose,\n      startTimer,\n      clearTimer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-toast {\n  position: fixed;\n  box-sizing: border-box;\n  width: var(--va-toast-width);\n  padding: var(--va-toast-padding);\n  display: flex;\n  align-items: center;\n  border-radius: var(--va-toast-border-radius);\n  border: 1px solid var(--va-toast-border-color);\n  background-color: var(--va-toast-background-color);\n  color: var(--va-toast-color);\n  box-shadow: var(--va-toast-box-shadow);\n  transition: var(--va-toast-transition);\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p,\n    div {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: var(--va-toast-close-icon-right);\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: var(--va-toast-close-icon-font-siz);\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n\n    &:focus {\n      @include focus-outline;\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n</style>\n","import { getCurrentInstance } from 'vue'\n\nimport { createToastInstance, closeById, closeAllNotifications, NotificationOptions } from '../toast'\n\n/** This hook can be used without plugin used */\nexport const useToast = () => {\n  const appContext = getCurrentInstance()?.appContext\n\n  const createdInThisSetupContext: string[] = []\n\n  /**\n   * @param options can be options object or message string\n   */\n  const init = (options: string | NotificationOptions) => {\n    const id = createToastInstance(options, appContext)\n\n    if (id) { createdInThisSetupContext.push(id) }\n\n    return id\n  }\n\n  const close = (id: string) => closeById(id)\n\n  /**\n   * Closes all VaToast instances in current App instance.\n   * @param allApps if you have multiple vue apps on page, set allApps to true to close it for all apps.\n   */\n  const closeAll = (allApps = false) => closeAllNotifications(allApps ? undefined : appContext)\n\n  /** Use this method if you need to close only toasts that created with this hook */\n  const closeAllCreatedInThisHook = () => {\n    createdInThisSetupContext.forEach((id) => closeById(id))\n  }\n\n  return {\n    init, close, closeAll, closeAllCreatedInThisHook,\n  }\n}\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaToast from './VaToast.vue'\n\nexport const VaToast = withConfigTransport(_VaToast)\n\nexport { useToast } from './hooks/useToast'\nexport * from './types'\n","import { VNode, createVNode, render, AppContext } from 'vue'\n\nimport { getGlobal } from '../../utils/ssr-utils'\nimport type { ToastOptions } from './types'\n\nimport { VaToast } from './index'\n\nconst GAP = 5\nlet seed = 1\n\ndeclare global {\n  interface Window {\n    vaToastInstances: VNode[]\n  }\n}\n\ngetGlobal().vaToastInstances = []\n\ntype OptionKeys = keyof ToastOptions;\n\nexport type VaToastId = string\n\nconst getTranslateValue = (item: VNode, position: string) => {\n  if (item.el) {\n    const direction = position.includes('bottom') ? -1 : 1\n    return (item.el.offsetHeight + GAP) * direction\n  }\n  return 0\n}\n\nconst getNewTranslateValue = (transformY: string, redundantHeight: number, position: string) => {\n  const direction = position.includes('bottom') ? -1 : 1\n  return parseInt(transformY, 10) - (redundantHeight + GAP) * direction\n}\n\nconst getNodeProps = (vNode: VNode): Record<OptionKeys, any> => {\n  return (vNode.component?.props as Record<OptionKeys, any>) || {}\n}\n\nconst closeNotification = (targetInstance: VNode | null, destroyElementFn: () => void) => {\n  if (!targetInstance) { return }\n\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n    return\n  }\n\n  const targetInstanceIndex = getGlobal().vaToastInstances.findIndex((instance) => instance === targetInstance)\n\n  if (targetInstanceIndex < 0) { return }\n\n  const nodeProps = getNodeProps(targetInstance)\n\n  const {\n    offsetX: targetOffsetX,\n    offsetY: targetOffsetY,\n    position: targetPosition,\n  } = nodeProps\n  const redundantHeight: number | null = targetInstance.el?.offsetHeight\n\n  destroyElementFn()\n\n  getGlobal().vaToastInstances = getGlobal().vaToastInstances.reduce((acc: any[], instance, index) => {\n    if (instance === targetInstance) {\n      return acc\n    }\n    if (instance.component) {\n      const { offsetX, offsetY, position } = getNodeProps(instance)\n      const isNextInstance = index > targetInstanceIndex && targetOffsetX === offsetX && targetOffsetY === offsetY && targetPosition === position\n      if (isNextInstance && instance.el && redundantHeight) {\n        const [_, transformY] = instance.el.style.transform.match(/[\\d-]+(?=px)/g)\n        const transformYNew = getNewTranslateValue(transformY, redundantHeight, position)\n        instance.el.style.transform = `translate(0, ${transformYNew}px)`\n      }\n    }\n    return [...acc, instance]\n  }, [])\n\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n  }\n}\n\nconst destroy = (el: HTMLElement | null | undefined, node: VNode | null) => {\n  if (el) {\n    render(null, el)\n    el.remove()\n  }\n  el = null\n  node = null\n}\n\nconst mount = (component: any, {\n  props,\n  children,\n  element,\n  appContext,\n}: { props?: { [key: string]: any }; children?: any; element?: HTMLElement; appContext?: AppContext } = {}): { vNode: VNode; el?: HTMLElement } => {\n  let el: HTMLElement | null | undefined = element\n\n  // eslint-disable-next-line prefer-const\n  let vNode: VNode | null\n\n  const onClose = () => {\n    closeNotification(vNode, () => destroy(el, vNode))\n\n    if (props?.onClose) {\n      props.onClose()\n    }\n  }\n\n  vNode = createVNode(component, { ...props, onClose }, children)\n\n  if (appContext) {\n    vNode.appContext = appContext\n  }\n\n  if (el) {\n    render(vNode, el)\n  } else if (typeof document !== 'undefined') {\n    render(vNode, el = document.createElement('div'))\n  }\n\n  return { vNode, el }\n}\n\nexport const closeAllNotifications = (appContext?: AppContext) => {\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n    return\n  }\n  getGlobal().vaToastInstances.forEach(instance => {\n    if (appContext && instance.appContext !== appContext) { return }\n    getNodeProps(instance).onClose()\n  })\n}\n\nexport const closeById = (id: string) => {\n  const targetInstance = getGlobal().vaToastInstances.find(instance => instance.el?.id === id)\n\n  if (targetInstance) {\n    const nodeProps = getNodeProps(targetInstance)\n    nodeProps.onClose()\n  }\n}\n\nconst getToastOptions = (options: string | ToastOptions): any => {\n  if (typeof options === 'string') {\n    return {\n      message: options,\n    }\n  }\n  return options\n}\n\nexport const createToastInstance = (customProps: ToastOptions | string, appContext?: AppContext): VaToastId | null => {\n  const { vNode, el } = mount(VaToast, { appContext, props: getToastOptions(customProps) })\n\n  const nodeProps = getNodeProps(vNode)\n\n  if (el && vNode.el && nodeProps) {\n    document.body.appendChild(el.childNodes[0])\n    const { offsetX, offsetY, position } = nodeProps\n\n    vNode.el.style.display = 'flex'\n    vNode.el.id = 'notification_' + seed\n\n    let transformY = 0\n    getGlobal().vaToastInstances.filter(item => {\n      const {\n        offsetX: itemOffsetX,\n        offsetY: itemOffsetY,\n        position: itemPosition,\n      } = getNodeProps(item)\n\n      return itemOffsetX === offsetX && itemOffsetY === offsetY && position === itemPosition\n    }).forEach((item) => {\n      transformY += getTranslateValue(item, position)\n    })\n    vNode.el.style.transform = `translate(0, ${transformY}px)`\n\n    seed += 1\n\n    getGlobal().vaToastInstances.push(vNode)\n\n    return vNode.el.id as VaToastId\n  }\n\n  return null\n}\n\nexport type { ToastOptions as NotificationOptions } from './types'\n"],"names":["VaToastRenderer","defineComponent","name","props","render","type","Function","required","setup","script","components","VaIcon","emits","title","String","default","offsetY","Number","offsetX","message","dangerouslyUseHtmlString","Boolean","icon","customClass","duration","color","closeable","onClose","onClick","multiLine","position","validator","value","includes","emit","rootElement","shallowRef","getColor","useColors","textColorComputed","useTextColor","visible","ref","positionX","computed","positionY","toastClasses","toastStyles","backgroundColor","computedMessage","destroyElement","_a","removeEventListener","_b","remove","onToastClose","addEventListener","timer","start","args","window","setTimeout","clear","clearTimeout","useTimer","clearTimer","startTimer","onMounted","onToastClick","_hoisted_2","class","_hoisted_4","_createBlock","_Transition","_createElementVNode","role","_ctx","$props","_normalizeClass","style","onMouseenter","onMouseleave","_createElementBlock","_toDisplayString","_withDirectives","innerHTML","textContent","_vShow","_openBlock","_hoisted_7","_createVNode","_component_VaToastRenderer","_component_va_icon","tabindex","size","onKeydown","useToast","appContext","getCurrentInstance","createdInThisSetupContext","init","options","id","createToastInstance","push","close","closeById","closeAll","allApps","closeAllNotifications","undefined","closeAllCreatedInThisHook","forEach","VaToast","withConfigTransport","_VaToast","seed","getGlobal","vaToastInstances","getNodeProps","vNode","component","closeNotification","targetInstance","destroyElementFn","length","targetInstanceIndex","findIndex","instance","nodeProps","targetOffsetX","targetOffsetY","targetPosition","redundantHeight","el","offsetHeight","reduce","acc","index","_","transformY","transform","match","transformYNew","direction","parseInt","getNewTranslateValue","mount","children","element","createVNode","node","destroy","document","createElement","find","customProps","body","appendChild","childNodes","display","filter","item","itemOffsetX","itemOffsetY","itemPosition","getTranslateValue"],"mappings":"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"}