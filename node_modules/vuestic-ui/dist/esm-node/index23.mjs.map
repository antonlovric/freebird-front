{"version":3,"file":"index23.mjs","sources":["../../../../node_modules/lodash/_castSlice.js","../../../../node_modules/lodash/_hasUnicode.js","../../../../node_modules/lodash/_asciiToArray.js","../../../../node_modules/lodash/_unicodeToArray.js","../../../../node_modules/lodash/_stringToArray.js","../../../../node_modules/lodash/_createCaseFirst.js","../../../../node_modules/lodash/startCase.js","../../../../node_modules/lodash/upperFirst.js","../../src/components/va-data-table/hooks/useColumns.ts","../../src/components/va-data-table/hooks/useRows.ts","../../src/components/va-data-table/hooks/useSelectableRow.ts","../../src/components/va-data-table/hooks/useStylable.ts","../../src/components/va-data-table/hooks/useBinding.ts","../../src/components/va-data-table/VaDataTable.vue","../../src/components/va-data-table/hooks/useFilterable.ts","../../src/components/va-data-table/hooks/useSortable.ts","../../src/components/va-data-table/hooks/usePaginatedRows.ts","../../src/components/va-data-table/hooks/useAnimationName.ts","../../src/components/va-data-table/VaDataTable.vue?vue&type=template&id=04f9c197&lang.js","../../src/components/va-data-table/index.ts"],"sourcesContent":["var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","import { computed } from 'vue'\nimport startCase from 'lodash/startCase.js'\nimport merge from 'lodash/merge.js'\n\nimport { DataTableColumnSource, DataTableColumnInternal, DataTableItem } from '../types'\n\ninterface useColumnsProps {\n  columns: DataTableColumnSource[]\n  items: DataTableItem[]\n  [prop: string]: unknown\n}\n\nexport const buildTableColumn = (source: DataTableColumnSource, initialIndex: number): DataTableColumnInternal => {\n  const input = typeof source === 'string' ? { key: source } : source\n\n  return {\n    source,\n    initialIndex,\n    key: input.key,\n    name: input.name || input.key,\n    label: input.label || startCase(input.key),\n    thTitle: input.thTitle || input.headerTitle || input.label || startCase(input.key),\n    sortable: input.sortable || false,\n    sortingFn: input.sortingFn,\n    thAlign: input.thAlign || input.alignHead || 'left',\n    thVerticalAlign: input.thVerticalAlign || input.verticalAlignHead || 'middle',\n    tdAlign: input.tdAlign || input.align || 'left',\n    tdVerticalAlign: input.tdVerticalAlign || input.verticalAlign || 'middle',\n    width: input.width,\n    tdClass: input.tdClass || input.classes,\n    thClass: input.thClass || input.headerClasses,\n    tdStyle: input.tdStyle || input.style,\n    thStyle: input.thStyle || input.headerStyle,\n  }\n}\n\nconst buildColumnsFromItems = (items: DataTableItem[]) => {\n  return Object.keys(merge({}, ...items)).map(buildTableColumn)\n}\n\nconst buildNormalizedColumns = (columns: DataTableColumnSource[]) => {\n  return columns.map(buildTableColumn)\n}\n\nexport default function useColumns (props: useColumnsProps) {\n  const columnsComputed = computed(() => {\n    if (props.columns.length === 0) {\n      // if no column definitions provided then build them based on provided rawItems\n      // e.g. if provided items look like `[{a: 1}, {b: 2}]` then there should be 2 columns: A and B\n      return buildColumnsFromItems(props.items)\n    } else {\n      return buildNormalizedColumns(props.columns)\n    }\n  })\n\n  return {\n    columnsComputed,\n  }\n}\n","import { Ref, computed } from 'vue'\n\nimport { getValueByPath } from '../../../services/utils'\n\nimport { DataTableColumnInternal, DataTableItem, DataTableCell, DataTableRow, DataTableItemKey } from '../types'\n\nexport const getItemKey = (source: DataTableItem, itemsTrackBy: string | ((item: DataTableItem) => any)): DataTableItemKey => (\n  typeof itemsTrackBy === 'function'\n    ? itemsTrackBy(source)\n    : getValueByPath(source, itemsTrackBy) || source\n)\n\ninterface useRowsProps {\n  items: DataTableItem[]\n  itemsTrackBy: string | ((item: DataTableItem) => any)\n  [prop: string]: unknown\n}\n\nconst buildTableCell = (\n  rowIndex: number,\n  rowKey: string,\n  rowData: DataTableItem,\n  column: DataTableColumnInternal,\n): DataTableCell => {\n  const source = getValueByPath(rowData, column.key)\n\n  return {\n    rowIndex,\n    rowKey,\n    rowData,\n    column,\n    source,\n    value: source?.toString?.() || '',\n  }\n}\n\nconst buildTableRow = (\n  source: DataTableItem,\n  initialIndex: number,\n  itemsTrackBy: string | ((item: DataTableItem) => any),\n  columns: DataTableColumnInternal[],\n): DataTableRow => {\n  const itemKey = getItemKey(source, itemsTrackBy)\n\n  return {\n    initialIndex,\n    itemKey,\n    source,\n    cells: columns.map(column => buildTableCell(initialIndex, itemKey, source, column)),\n  }\n}\n\nexport default function useRows (\n  columns: Ref<DataTableColumnInternal[]>,\n  props: useRowsProps,\n) {\n  const rowsComputed = computed(() => props.items\n    .map((rawItem, index) => buildTableRow(rawItem, index, props.itemsTrackBy, columns.value)))\n\n  return {\n    rowsComputed,\n  }\n}\n","import { Ref, computed, watch, ref } from 'vue'\n\nimport { getItemKey } from './useRows'\n\nimport { DataTableRow, DataTableItem, DataTableSelectMode, DataTableItemKey } from '../types'\n\ninterface useSelectableProps {\n  modelValue: (DataTableItem | DataTableItemKey)[] | undefined // selectedItems\n  selectable: boolean\n  selectMode: DataTableSelectMode\n  itemsTrackBy: string | ((item: DataTableItem) => any)\n  [prop: string]: unknown\n}\nexport type TEmits = 'update:modelValue' | 'selectionChange'\nexport type TSelectionChange = {\n  currentSelectedItems: (DataTableItem | DataTableItemKey)[],\n  previousSelectedItems: (DataTableItem | DataTableItemKey)[],\n}\nexport type TSelectableEmits = (event: TEmits, arg: (DataTableItem | DataTableItemKey)[] | TSelectionChange) => void\n\nexport default function useSelectableRow (\n  paginatedRows: Ref<DataTableRow[]>,\n  props: useSelectableProps,\n  emit: TSelectableEmits,\n) {\n  const selectedItemsFallback = ref<(DataTableItem | DataTableItemKey)[]>([])\n\n  const selectedItemsSync = computed<(DataTableItem | DataTableItemKey)[]>({\n    get () {\n      if (props.modelValue === undefined) {\n        return selectedItemsFallback.value\n      } else {\n        return props.modelValue\n      }\n    },\n\n    set (modelValue) {\n      if (props.modelValue === undefined) {\n        selectedItemsFallback.value = modelValue\n      }\n\n      emit('update:modelValue', modelValue)\n    },\n  })\n\n  const prevSelectedRowIndex = ref(-1)\n\n  // clear all the selected rows when the `select-mode`'s value changes from multiple to single\n  // (though it's safe enough to leave a selected item when changing from single to multiple\n  watch(() => props.selectMode, (newSelectMode, oldSelectMode) => {\n    if (newSelectMode === 'single' && oldSelectMode === 'multiple') {\n      selectedItemsSync.value = []\n      setPrevSelectedRowIndex(-1)\n    }\n  })\n\n  // watch for rows changes (happens when filtering is applied e.g.)\n  watch(paginatedRows, () => { setPrevSelectedRowIndex(-1) })\n\n  // emit the \"selection-change\" event each time the selection changes\n  watch(selectedItemsSync, (currentSelectedItems, previousSelectedItems = []) => {\n    emit('selectionChange', {\n      currentSelectedItems,\n      previousSelectedItems,\n    })\n  }, { immediate: true })\n\n  // if user provide `props.itemsTrackBy !== ''` than `selectedItemsSync` and `props.modelValue`\n  // would be the array with keys (received from `props.itemsTrackBy`)\n  // else they would be the array with source (`DataTableItem` type)\n  const getKey = (source: DataTableItem) => getItemKey(source, props.itemsTrackBy)\n\n  const noRowsSelected = computed(() => (\n    !paginatedRows.value.some(({ source }) => selectedItemsSync.value.includes(getKey(source)))\n  ))\n\n  const allRowsSelected = computed(() => {\n    if (paginatedRows.value.length === 0) { return false }\n\n    return paginatedRows.value.every(({ source }) => selectedItemsSync.value.includes(getKey(source)))\n  })\n\n  const severalRowsSelected = computed(() => !noRowsSelected.value && !allRowsSelected.value)\n\n  function isRowSelected (row: DataTableRow) {\n    return selectedItemsSync.value.includes(getKey(row.source))\n  }\n\n  function selectAllRows () {\n    selectedItemsSync.value = [...new Set([\n      ...selectedItemsSync.value,\n      ...paginatedRows.value.map(row => getKey(row.source)),\n    ])]\n  }\n\n  function unselectAllRows () {\n    const paginatedRowsKeys = paginatedRows.value.map(row => getKey(row.source))\n\n    selectedItemsSync.value = selectedItemsSync.value\n      .filter((item) => !paginatedRowsKeys.includes(item))\n  }\n\n  // The one calling this function must guarantee that the row isn't already selected\n  function selectRow (row: DataTableRow) {\n    selectedItemsSync.value = [...selectedItemsSync.value, getKey(row.source)]\n  }\n\n  function selectOnlyRow (row: DataTableRow) {\n    selectedItemsSync.value = [getKey(row.source)]\n  }\n\n  // The one calling this function must guarantee that the row is selected\n  function unselectRow (row: DataTableRow) {\n    const index = selectedItemsSync.value.findIndex(item => item === getKey(row.source))\n\n    selectedItemsSync.value = [\n      ...selectedItemsSync.value.slice(0, index),\n      ...selectedItemsSync.value.slice(index + 1),\n    ]\n  }\n\n  function setPrevSelectedRowIndex (rowInitialIndex: number) {\n    if (rowInitialIndex === -1) {\n      prevSelectedRowIndex.value = -1\n    } else {\n      const prevSelectedRow = paginatedRows.value.find(row => row.initialIndex === rowInitialIndex)\n\n      prevSelectedRow\n        ? prevSelectedRowIndex.value = paginatedRows.value.indexOf(prevSelectedRow)\n        : prevSelectedRowIndex.value = -1\n    }\n  }\n\n  function getRowsToSelect (targetIndex: number) {\n    let start\n    let end\n\n    if (isRowSelected(paginatedRows.value[prevSelectedRowIndex.value])) {\n      start = Math.min(prevSelectedRowIndex.value, targetIndex)\n      end = Math.max(prevSelectedRowIndex.value, targetIndex)\n    } else {\n      start = Math.min(prevSelectedRowIndex.value + 1, targetIndex)\n      end = Math.max(prevSelectedRowIndex.value - 1, targetIndex)\n    }\n\n    return paginatedRows.value.slice(start, end + 1)\n  }\n\n  function mergeSelection (rowsToSelect: DataTableRow[]) {\n    const rowsToSelectedItems = rowsToSelect.map(row => getKey(row.source))\n\n    if (noRowsSelected.value) {\n      selectedItemsSync.value = rowsToSelectedItems\n      return\n    }\n\n    const isInternalSelection = rowsToSelectedItems.every(item => selectedItemsSync.value.includes(item))\n\n    if (isInternalSelection) {\n      selectedItemsSync.value = selectedItemsSync.value.filter(item => !rowsToSelectedItems.includes(item))\n      return\n    }\n\n    selectedItemsSync.value = [...new Set([\n      ...selectedItemsSync.value,\n      ...rowsToSelectedItems,\n    ])]\n  }\n\n  function toggleRowSelection (row: DataTableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    if (isRowSelected(row)) {\n      unselectRow(row)\n      props.selectMode === 'single' ? setPrevSelectedRowIndex(-1) : setPrevSelectedRowIndex(row.initialIndex)\n    } else {\n      props.selectMode === 'single' ? selectOnlyRow(row) : selectRow(row)\n      setPrevSelectedRowIndex(row.initialIndex)\n    }\n  }\n\n  function ctrlSelectRow (row: DataTableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    toggleRowSelection(row)\n  }\n\n  function shiftSelectRows (row: DataTableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    if (props.selectMode === 'single' || prevSelectedRowIndex.value === -1) {\n      return toggleRowSelection(row)\n    }\n\n    const targetIndex = paginatedRows.value.indexOf(row)\n    mergeSelection(getRowsToSelect(targetIndex))\n    setPrevSelectedRowIndex(-1)\n  }\n\n  function toggleBulkSelection () {\n    if (allRowsSelected.value) {\n      unselectAllRows()\n    } else {\n      selectAllRows()\n    }\n\n    setPrevSelectedRowIndex(-1)\n  }\n\n  return {\n    ctrlSelectRow,\n    shiftSelectRows,\n    toggleRowSelection,\n    toggleBulkSelection,\n    isRowSelected,\n    noRowsSelected,\n    severalRowsSelected,\n    allRowsSelected,\n  }\n}\n","import { computed } from 'vue'\n\nimport { safeCSSLength } from '../../../utils/css-utils'\nimport { useColors } from '../../../composables'\n\nimport {\n  DataTableColumnInternal,\n  DataTableColumnClass,\n  DataTableColumnStyle,\n  DataTableCell,\n} from '../types'\n\nconst prefix = '--va-data-table'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\n\ninterface useStylableProps {\n  selectable: boolean\n  selectedColor: string\n  allowFooterSorting: boolean\n  stickyHeader: boolean\n  stickyFooter: boolean\n  height: string | number | undefined\n}\n\nconst getClass = (classes: DataTableColumnClass) => isFunction(classes) ? classes() : classes\nconst getStyle = (styles: DataTableColumnStyle) => isFunction(styles) ? styles() : styles\n\nexport default function useStyleable (props: useStylableProps) {\n  const { getColor, getFocusColor, getHoverColor, shiftHSLAColor } = useColors()\n\n  const color = computed(() => getColor(props.selectedColor))\n\n  const rowCSSVariables = computed(() => ({\n    [`${prefix}-hover-color`]: getHoverColor(color.value),\n    [`${prefix}-selected-color`]: props.selectable ? getFocusColor(color.value) : undefined,\n  }))\n\n  const stickyCSSVariables = computed(() => ({\n    [`${prefix}-scroll-table-color`]: (props.height || props.stickyHeader || props.stickyFooter) && shiftHSLAColor(color.value, { l: 40 }),\n    [`${prefix}-scroll-table-height`]: props.height ? safeCSSLength(props.height) : undefined,\n  }))\n\n  const getHeaderCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? 'pointer' : 'default',\n  })\n\n  const getCellCSSVariables = (cell: DataTableCell) => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign,\n  })\n\n  const getFooterCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n  })\n\n  return {\n    rowCSSVariables,\n    stickyCSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle,\n  }\n}\n","import {\n  DataTableCell,\n  DataTableRow,\n  DataTableRowBind,\n  DataTableCellBind,\n} from '../types'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\nconst isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object'\n\ninterface useBindingProps {\n  rowBind?: DataTableRowBind\n  cellBind?: DataTableCellBind\n}\n\nexport default function useBinding (props: useBindingProps) {\n  const getRowBind = (row: DataTableRow) => (\n    isFunction(props.rowBind)\n      ? props.rowBind(row.source, row.initialIndex)\n      : isObject(props.rowBind)\n        ? props.rowBind\n        : {}\n  ) as Record<string, string>\n\n  const getCellBind = (cell: DataTableCell, row: DataTableRow) => (\n    isFunction(props.cellBind)\n      ? props.cellBind(cell.source, row.source, cell.column, row.initialIndex)\n      : isObject(props.cellBind)\n        ? props.cellBind\n        : {}\n  ) as Record<string, string>\n\n  return {\n    getRowBind,\n    getCellBind,\n  }\n}\n","<template>\n  <va-inner-loading\n    class=\"va-data-table\"\n    aria-live=\"polite\"\n    v-bind=\"computedAttributes\"\n    :loading=\"loading\"\n    :color=\"loadingColor\"\n  >\n    <table\n      class=\"va-data-table__table\"\n      v-bind=\"computedTableAttributes\"\n    >\n      <colgroup v-if=\"'colgroup' in $slots\">\n        <slot name=\"colgroup\" v-bind=\"columnsComputed\" />\n      </colgroup>\n\n      <thead\n        class=\"va-data-table__table-thead\"\n        :class=\"{ 'va-data-table__table-thead--sticky': $props.stickyHeader }\"\n      >\n        <slot name=\"headerPrepend\" />\n\n        <tr\n          v-if=\"!hideDefaultHeader\"\n          class=\"va-data-table__table-tr\"\n        >\n          <th\n            v-if=\"selectable\"\n            scope=\"col\"\n            class=\"va-data-table__table-th va-data-table__table-cell-select\"\n          >\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              aria-label=\"select all rows\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              :color=\"selectedColor\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.name\"\n            scope=\"col\"\n            :aria-sort=\"getColumnAriaSortOrder(column.name)\"\n            :aria-label=\"column.sortable ? `sort column by ${column.label}` : undefined\"\n            :title=\"column.thTitle\"\n            class=\"va-data-table__table-th\"\n            :class=\"getClass(column.thClass)\"\n            :style=\"[getHeaderCSSVariables(column), getStyle(column.thStyle)]\"\n            @click.exact=\"column.sortable && toggleSorting(column)\"\n            @keydown.enter.stop=\"column.sortable && toggleSorting(column)\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\" :tabindex=\"column.sortable ? 0 : -1\">\n              <span v-if=\"`header(${column.name})` in $slots\">\n                <slot :name=\"`header(${column.name})`\" v-bind=\"{ label: column.label, key: column.key }\" />\n              </span>\n\n              <slot v-else name=\"header\" v-bind=\"{ label: column.label, key: column.key }\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                aria-hidden=\"true\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.name && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"headerAppend\" />\n      </thead>\n\n      <tbody\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyPrepend\" />\n\n        <transition-group\n          :name=\"animationName\"\n          appear\n        >\n\n          <tr\n            v-if=\"showNoDataHtml\"\n            key=\"showNoDataHtml\"\n          >\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n\n          <tr\n            v-else-if=\"showNoDataFilteredHtml\"\n            key=\"showNoDataFilteredHtml\"\n          >\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataFilteredHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n\n          <tr\n            v-for=\"row in rows\"\n            :key=\"`table-row_${row.initialIndex}`\"\n            class=\"va-data-table__table-tr\"\n            :class=\"[{ selected: isRowSelected(row) }]\"\n            v-bind=\"getRowBind(row)\"\n            @click=\"onRowClickHandler('row:click', $event, row)\"\n            @dblclick=\"onRowClickHandler('row:dblclick', $event, row)\"\n            @contextmenu=\"onRowClickHandler('row:contextmenu', $event, row)\"\n          >\n            <td\n              v-if=\"selectable\"\n              class=\"va-data-table__table-td va-data-table__table-cell-select\"\n              :key=\"`selectable_${row.initialIndex}`\"\n              @selectstart.prevent\n            >\n              <va-checkbox\n                :model-value=\"isRowSelected(row)\"\n                :color=\"selectedColor\"\n                :aria-label=\"`select row ${row.initialIndex}`\"\n                @click.shift.exact.stop=\"shiftSelectRows(row)\"\n                @click.ctrl.exact.stop=\"ctrlSelectRow(row)\"\n                @click.exact.stop=\"ctrlSelectRow(row)\"\n              />\n            </td>\n\n            <td\n              v-for=\"cell in row.cells\"\n              :key=\"`table-cell_${cell.column.name + cell.rowIndex}`\"\n              class=\"va-data-table__table-td\"\n              :class=\"getClass(cell.column.tdClass)\"\n              :style=\"[getCellCSSVariables(cell), getStyle(cell.column.tdStyle)]\"\n              v-bind=\"getCellBind(cell, row)\"\n            >\n              <slot\n                v-if=\"`cell(${cell.column.name})` in $slots\"\n                :name=\"`cell(${cell.column.name})`\"\n                v-bind=\"cell\"\n              />\n\n              <slot v-else name=\"cell\" v-bind=\"cell\">\n                {{ cell.value }}\n              </slot>\n            </td>\n          </tr>\n        </transition-group>\n\n        <slot name=\"bodyAppend\" />\n      </tbody>\n\n      <tfoot\n        v-if=\"footerClone\"\n        class=\"va-data-table__table-tfoot\"\n        :class=\"{ 'va-data-table__table-tfoot--sticky': $props.stickyFooter }\"\n      >\n        <slot name=\"footerPrepend\" />\n\n        <tr v-if=\"!hideDefaultHeader\" class=\"va-data-table__table-tr\">\n          <th v-if=\"selectable\" class=\"va-data-table__table-th\">\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              aria-label=\"select all rows\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              :color=\"selectedColor\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.name\"\n            :title=\"column.thTitle\"\n            :aria-label=\"allowFooterSorting && column.sortable ? `sort column by ${column.label}` : undefined\"\n            class=\"va-data-table__table-th\"\n            :class=\"getClass(column.thClass)\"\n            :style=\"[getFooterCSSVariables(column), getStyle(column.thStyle)]\"\n            @click.exact=\"allowFooterSorting && column.sortable && toggleSorting(column)\"\n            @keydown.enter.stop=\"allowFooterSorting && column.sortable && toggleSorting(column)\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\" :tabindex=\"allowFooterSorting && column.sortable ? 0 : -1\">\n              <span v-if=\"`footer(${column.name})` in $slots\">\n                <slot :name=\"`footer(${column.name})`\" v-bind=\"{ label: column.label, key: column.key }\" />\n              </span>\n\n              <slot v-else name=\"footer\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"allowFooterSorting && column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.name && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"footerAppend\" />\n      </tfoot>\n    </table>\n  </va-inner-loading>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, HTMLAttributes, PropType, TableHTMLAttributes } from 'vue'\nimport omit from 'lodash/omit.js'\nimport pick from 'lodash/pick.js'\n\nimport useColumns from './hooks/useColumns'\nimport useRows from './hooks/useRows'\nimport useFilterable from './hooks/useFilterable'\nimport useSortable from './hooks/useSortable'\nimport usePaginatedRows from './hooks/usePaginatedRows'\nimport useSelectableRow from './hooks/useSelectableRow'\nimport useStylable from './hooks/useStylable'\nimport useBinding from './hooks/useBinding'\nimport useAnimationName from './hooks/useAnimationName'\n\nimport {\n  DataTableColumnSource,\n  DataTableItem,\n  DataTableRow,\n  DataTableFilterMethod,\n  DataTableSortingOrder,\n  DataTableSelectMode,\n  DataTableRowBind,\n  DataTableCellBind,\n  DataTableItemKey,\n} from './types'\n\nimport { VaInnerLoading } from '../va-inner-loading'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaIcon } from '../va-icon'\n\ntype emitNames = 'update:modelValue' |\n  'update:sortBy' |\n  'update:sortingOrder' |\n  'filtered' |\n  'sorted' |\n  'selectionChange' |\n  'row:click' |\n  'row:dblclick' |\n  'row:contextmenu'\n\n/*\n  TODO: consider a possibility to lazy-load the hooks with dynamic imports based on respective props' values. E.G.\n\n  if (selectable.value) {\n    const { default: useSelectableRow } = await import(\"./hooks/useSelectableRow\");\n  }\n\n  // Would be a cool feature (if possible at all).\n*/\n\nexport default defineComponent({\n  name: 'VaDataTable',\n\n  components: {\n    VaInnerLoading,\n    VaCheckbox,\n    VaIcon,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    columns: { type: Array as PropType<DataTableColumnSource[]>, default: () => [] as DataTableColumnSource[] },\n    items: { type: Array as PropType<DataTableItem[]>, default: () => [] as DataTableItem[] },\n    itemsTrackBy: { type: [String, Function] as PropType<string | ((item: DataTableItem) => any)>, default: '' },\n    modelValue: { type: Array as PropType<(DataTableItem | DataTableItemKey)[]> }, // selectedItems\n    sortingOrder: { type: String as PropType<DataTableSortingOrder> }, // model-able\n    sortBy: { type: String }, // model-able\n    filter: { type: String, default: '' },\n    filterMethod: { type: Function as PropType<DataTableFilterMethod> },\n    hoverable: { type: Boolean, default: false },\n    clickable: { type: Boolean, default: false },\n    animated: { type: Boolean, default: true },\n    selectable: { type: Boolean, default: false },\n    selectMode: { type: String as PropType<DataTableSelectMode>, default: 'multiple' },\n    selectedColor: { type: String, default: 'primary' },\n    perPage: { type: Number },\n    currentPage: { type: Number },\n    loading: { type: Boolean, default: false },\n    loadingColor: { type: String, default: 'primary' },\n    noDataHtml: { type: String, default: 'No items' },\n    noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },\n    hideDefaultHeader: { type: Boolean, default: false },\n    footerClone: { type: Boolean, default: false },\n    allowFooterSorting: { type: Boolean, default: false },\n    striped: { type: Boolean, default: false },\n    stickyHeader: { type: Boolean, default: false },\n    stickyFooter: { type: Boolean, default: false },\n    height: { type: [String, Number] },\n    rowBind: { type: null as unknown as PropType<DataTableRowBind> },\n    cellBind: { type: null as unknown as PropType<DataTableCellBind> },\n  },\n\n  emits: [\n    'update:modelValue', // `modelValue` is selectedItems\n    'update:sortBy',\n    'update:sortingOrder',\n    'filtered',\n    'sorted',\n    'selectionChange',\n    'row:click',\n    'row:dblclick',\n    'row:contextmenu',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { columnsComputed } = useColumns(props)\n\n    const { rowsComputed } = useRows(columnsComputed, props)\n\n    const { filteredRows } = useFilterable(rowsComputed, props, emit)\n\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n    } = useSortable(columnsComputed, filteredRows, props, emit)\n\n    const { paginatedRows } = usePaginatedRows(sortedRows, props)\n\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n    } = useSelectableRow(paginatedRows, props, emit)\n\n    const {\n      rowCSSVariables,\n      stickyCSSVariables,\n      getHeaderCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getClass,\n      getStyle,\n    } = useStylable(props)\n\n    const { getRowBind, getCellBind } = useBinding(props)\n\n    const animationName = useAnimationName(props, paginatedRows)\n\n    const showNoDataHtml = computed(() => props.items.length === 0)\n\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0)\n\n    const onRowClickHandler = (name: emitNames, event: Event, row: DataTableRow) => {\n      if (props.clickable) {\n        emit(name, {\n          event,\n          item: row.source,\n          itemIndex: row.initialIndex,\n        })\n      }\n    }\n\n    const computedAttributes = computed(() => ({\n      class: [\n        { 'va-data-table--sticky': props.stickyHeader || props.stickyFooter },\n        { 'va-data-table--scroll': !!props.height },\n        attrs.class,\n      ],\n      style: [stickyCSSVariables.value, attrs.style],\n    }) as HTMLAttributes)\n\n    const computedTableAttributes = computed(() => ({\n      ...omit(attrs, ['class', 'style']),\n      class: pick(props, ['striped', 'selectable', 'hoverable', 'clickable']),\n    }) as TableHTMLAttributes)\n\n    const getColumnAriaSortOrder = (columnName: string) => sortingOrderSync.value && sortBySync.value === columnName\n      ? sortingOrderSync.value === 'asc' ? 'ascending' : 'descending'\n      : 'none'\n\n    return {\n      columnsComputed,\n      rows: paginatedRows,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      rowCSSVariables,\n      getHeaderCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getClass,\n      getStyle,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      computedAttributes,\n      computedTableAttributes,\n      animationName,\n      getColumnAriaSortOrder,\n      getRowBind,\n      getCellBind,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/index.scss\";\n@import \"variables\";\n// The calculated variables are taken from a respective element's `style` attribute. See the `useStylable` hook\n\n.va-data-table {\n  overflow-x: auto;\n  overflow-y: hidden;\n  min-width: unset;\n  font-family: var(--va-font-family);\n\n  &--sticky,\n  &--scroll {\n    overflow-y: auto;\n    height: var(--va-data-table-scroll-table-height);\n\n    // 1) doesn't work in Firefox\n    // 2) doesn't disappear on mac (the standard one does)\n    // @include va-scroll(var(--scroll-table-color));\n  }\n\n  .va-data-table__table {\n    width: 100%;\n    cursor: default;\n    white-space: nowrap;\n\n    .va-data-table__table-thead {\n      border-bottom: var(--va-data-table-thead-border);\n      color: var(--va-data-table-thead-color);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-bottom-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n        background-color: var(--va-data-table-scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-tbody {\n      .no-data {\n        text-align: var(--va-data-table-no-data-text-align);\n        vertical-align: var(--va-data-table-no-data-vertical-align);\n      }\n    }\n\n    .va-data-table__table-tfoot {\n      border-top: var(--va-data-table-thead-border);\n      color: var(--va-data-table-thead-color);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-top-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        bottom: 0;\n        z-index: 1;\n        background-color: var(--va-data-table-scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-th {\n      padding: var(--va-data-table-cell-padding);\n      width: var(--va-data-table-width);\n      min-width: var(--va-data-table-width);\n      text-align: var(--va-data-table-align);\n      vertical-align: var(--va-data-table-vertical-align);\n      font-size: var(--va-data-table-thead-font-size);\n      line-height: var(--va-data-table-thead-line-height);\n      font-weight: var(--va-data-table-thead-font-weight);\n      text-transform: var(--va-data-table-thead-text-transform);\n      letter-spacing: var(--va-data-table-thead-letter-spacing);\n      cursor: var(--va-data-table-cursor);\n\n      .va-data-table__table-th-wrapper {\n        display: flex;\n        align-items: center;\n\n        &:focus {\n          @include focus-outline;\n        }\n      }\n\n      .va-data-table__table-th-sorting {\n        justify-self: end;\n        line-height: 1;\n      }\n\n      .va-data-table__table-th-sorting-icon {\n        opacity: 0;\n        user-select: none;\n        pointer-events: none;\n\n        &.active {\n          opacity: 1;\n          pointer-events: initial;\n        }\n      }\n\n      span {\n        flex-grow: 1;\n      }\n\n      &:hover {\n        .va-data-table__table-th-sorting-icon:not(.active) {\n          opacity: var(--va-data-table-hover-th-opacity);\n        }\n      }\n    }\n\n    .va-data-table__table-td {\n      padding: var(--va-data-table-cell-padding);\n      text-align: var(--va-data-table-align);\n      vertical-align: var(--va-data-table-vertical-align);\n    }\n\n    .va-data-table__table-th,\n    .va-data-table__table-td {\n      &.va-data-table__table-cell-select {\n        width: var(--va-data-table-selectable-cell-width);\n        min-width: var(--va-data-table-selectable-cell-width);\n        text-align: var(--va-data-table-selectable-cell-text-align);\n        vertical-align: var(--va-data-table-selectable-cell-vertical-align);\n        cursor: var(--va-data-table-selectable-tr-cursor);\n      }\n    }\n\n    .va-data-table__table-tr {\n      &.selected {\n        background-color: var(--va-data-table-selected-color);\n      }\n    }\n\n    &.clickable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    &.striped {\n      .va-data-table__table-tr {\n        position: relative;\n        z-index: 0;\n\n        &:nth-child(2n) {\n          &:not(.selected) {\n            @include va-background(var(--va-data-table-striped-tr-background-color), var(--va-data-table-striped--tr-opacity), -1);\n          }\n        }\n      }\n    }\n\n    &.selectable,\n    &.hoverable {\n      .va-data-table__table-tr {\n        &:hover {\n          background-color: var(--va-data-table-hover-color);\n        }\n      }\n\n      .va-data-table__table-tr:nth-child(2n) {\n        &:hover {\n          background-color: var(--va-data-table-hover-color);\n\n          @include va-background-opacity(transparent);\n        }\n      }\n    }\n\n    .table-transition-fade-leave-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n\n    .table-transition-fade-enter-active {\n      transition: opacity var(--va-data-table-transition) 0.2s;\n    }\n\n    .table-transition-fade-enter-from,\n    .table-transition-shuffle-enter-from,\n    .table-transition-fade-leave-to,\n    .table-transition-shuffle-leave-to {\n      opacity: 0;\n    }\n\n    .table-transition-shuffle-move {\n      transition: transform var(--va-data-table-transition);\n    }\n\n    .table-transition-shuffle-leave-active {\n      transition: none;\n    }\n\n    .table-transition-shuffle-enter-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n  }\n}\n</style>\n","import { Ref, watch, computed } from 'vue'\n\nimport { DataTableRow, DataTableFilterMethod, DataTableItem } from '../types'\n\ninterface useFilterableProps {\n  filter: string\n  filterMethod: DataTableFilterMethod | undefined\n  [prop: string]: unknown\n}\n\nexport type TFilteredArgs = { items: DataTableItem[], itemsIndexes: number[] }\nexport type TFilterableEmits = (event: 'filtered', arg: TFilteredArgs) => void\n\nexport default function useFilterable (\n  rawRows: Ref<DataTableRow[]>,\n  props: useFilterableProps,\n  emit: TFilterableEmits,\n) {\n  const filteredRows = computed<DataTableRow[]>(() => {\n    if (!rawRows.value.length) {\n      return rawRows.value\n    }\n\n    if (props.filter === '' && !props.filterMethod) {\n      return rawRows.value\n    }\n\n    return rawRows.value.filter(row => row.cells.some(cell => {\n      return typeof props.filterMethod === 'function'\n        ? props.filterMethod(cell.source)\n        : cell.value.toLowerCase().includes(props.filter.toLowerCase())\n    }))\n  })\n\n  watch(filteredRows, () => {\n    emit('filtered', {\n      items: filteredRows.value.map(row => row.source),\n      itemsIndexes: filteredRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  return {\n    filteredRows,\n  }\n}\n","import { computed, ref, Ref, watch } from 'vue'\n\nimport { DataTableColumnInternal, DataTableRow, DataTableItem, DataTableSortingOrder } from '../types'\n\ninterface useSortableProps {\n  sortBy: string | undefined\n  sortingOrder: DataTableSortingOrder | undefined\n}\nexport type TSortedArgs = { sortBy: string, sortingOrder: DataTableSortingOrder, items: DataTableItem[], itemsIndexes: number[] }\nexport type TSortableEmits = (\n  event: 'update:sortBy' | 'update:sortingOrder' | 'sorted',\n  args: string | DataTableSortingOrder | TSortedArgs,\n) => void\n\nexport default function useSortable (\n  columns: Ref<DataTableColumnInternal[]>,\n  filteredRows: Ref<DataTableRow[]>,\n  props: useSortableProps,\n  emit: TSortableEmits,\n) {\n  const sortByFallback = ref('')\n  const sortBySync = computed<string>({\n    get () {\n      if (props.sortBy === undefined) {\n        return sortByFallback.value\n      } else {\n        return props.sortBy\n      }\n    },\n\n    set (value) {\n      if (props.sortBy === undefined) {\n        sortByFallback.value = value\n      }\n\n      emit('update:sortBy', value)\n    },\n  })\n\n  const sortingOrderFallback = ref(null as DataTableSortingOrder)\n  const sortingOrderSync = computed<DataTableSortingOrder>({\n    get () {\n      if (props.sortingOrder === undefined) {\n        return sortingOrderFallback.value\n      } else {\n        return props.sortingOrder\n      }\n    },\n\n    set (value) {\n      if (props.sortingOrder === undefined) {\n        sortingOrderFallback.value = value\n      }\n\n      emit('update:sortingOrder', value)\n    },\n  })\n\n  // sorts by string-value of a given row's cell (depending on by which column the table is sorted) if no sortingFn is\n  // provided. Otherwise uses that very sortingFn. If sortingOrder is `null` then restores the initial sorting order of\n  // the rows.\n  const sortedRows = computed(() => {\n    if (filteredRows.value.length <= 1) {\n      return filteredRows.value\n    }\n\n    const column = columns.value.find(column => column.name === sortBySync.value)\n\n    if (!column || !column.sortable) {\n      return filteredRows.value\n    }\n\n    const columnIndex = columns.value.indexOf(column)\n\n    return [...filteredRows.value].sort((a, b) => {\n      const firstValue = a.cells[columnIndex].value\n      const secondValue = b.cells[columnIndex].value\n      const firstSource = a.cells[columnIndex].source\n      const secondSource = b.cells[columnIndex].source\n\n      if (sortingOrderSync.value === null) {\n        return a.initialIndex - b.initialIndex\n      } else {\n        const sortingOrderRatio = sortingOrderSync.value === 'desc' ? -1 : 1\n\n        return sortingOrderRatio * (\n          typeof column.sortingFn === 'function'\n            ? column.sortingFn(firstSource, secondSource)\n            : firstValue.localeCompare(secondValue)\n        )\n      }\n    })\n  })\n\n  // sort each time the sortBy or sortingOrder is changed (and also initially). Also if columns definitions are changed\n  // (because that potentially means that the user runtime-introduced a custom sorting function for a specific column)\n  watch(sortedRows, () => {\n    emit('sorted', {\n      sortBy: sortBySync.value,\n      sortingOrder: sortingOrderSync.value,\n      items: sortedRows.value.map(row => row.source),\n      itemsIndexes: sortedRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  // a function to invoke when a heading of the table is clicked.\n  // Sets the clicked heading's column as a one to sort by and toggles the sorting order from \"asc\" to \"desc\" to `null`\n  // (un-sorted) if the same column is clicked again or sets sorting order to \"asc\" if some other column is chosen.\n  function toggleSorting (column: DataTableColumnInternal) {\n    if (column.name === sortBySync.value) {\n      if (sortingOrderSync.value === null) {\n        sortingOrderSync.value = 'asc'\n      } else if (sortingOrderSync.value === 'asc') {\n        sortingOrderSync.value = 'desc'\n      } else {\n        sortingOrderSync.value = null\n      }\n    } else {\n      sortBySync.value = column.name\n      sortingOrderSync.value = 'asc'\n    }\n  }\n\n  return {\n    sortBySync,\n    sortingOrderSync,\n    toggleSorting,\n    sortedRows,\n  }\n}\n","import { Ref, computed } from 'vue'\n\nimport { DataTableRow } from '../types'\n\ninterface useSelectableProps {\n  perPage: number | undefined\n  currentPage: number | undefined\n  [prop: string]: unknown\n}\n\nexport default function usePaginatedRows (\n  sortedRows: Ref<DataTableRow[]>,\n  props: useSelectableProps,\n) {\n  const paginatedRows = computed(() => {\n    if (!props.perPage || props.perPage < 0) {\n      return sortedRows.value\n    }\n\n    if (!props.currentPage || props.currentPage < 0) {\n      return sortedRows.value.slice(0, props.perPage)\n    }\n\n    const pageStartIndex = props.perPage * (props.currentPage - 1)\n    return sortedRows.value.slice(pageStartIndex, pageStartIndex + props.perPage)\n  })\n\n  return {\n    paginatedRows,\n  }\n}\n","\nimport { computed, Ref, ref, watch } from 'vue'\nimport { DataTableRow } from '../types'\n\ninterface useSelectableProps {\n  currentPage: number | undefined\n  animated: boolean\n}\n\nexport default function usePaginatedRows (\n  props: useSelectableProps,\n  rows: Ref<DataTableRow[]>,\n) {\n  const animationName = ref('table-transition-shuffle')\n  const oldRowsLength = ref(rows.value.length)\n  const isDifferentRowLength = computed(() => rows.value.length !== oldRowsLength.value)\n\n  watch(rows, (newRows) => {\n    const animationType = isDifferentRowLength.value || newRows.length > 50 ? 'fade' : 'shuffle'\n\n    animationName.value = props.animated ? `table-transition-${animationType}` : ''\n\n    oldRowsLength.value = newRows.length\n  })\n\n  watch(() => props.currentPage, () => {\n    if (!isDifferentRowLength.value) {\n      animationName.value = props.animated ? 'table-transition-shuffle' : ''\n    }\n  })\n\n  return animationName\n}\n","<template>\n  <va-inner-loading\n    class=\"va-data-table\"\n    aria-live=\"polite\"\n    v-bind=\"computedAttributes\"\n    :loading=\"loading\"\n    :color=\"loadingColor\"\n  >\n    <table\n      class=\"va-data-table__table\"\n      v-bind=\"computedTableAttributes\"\n    >\n      <colgroup v-if=\"'colgroup' in $slots\">\n        <slot name=\"colgroup\" v-bind=\"columnsComputed\" />\n      </colgroup>\n\n      <thead\n        class=\"va-data-table__table-thead\"\n        :class=\"{ 'va-data-table__table-thead--sticky': $props.stickyHeader }\"\n      >\n        <slot name=\"headerPrepend\" />\n\n        <tr\n          v-if=\"!hideDefaultHeader\"\n          class=\"va-data-table__table-tr\"\n        >\n          <th\n            v-if=\"selectable\"\n            scope=\"col\"\n            class=\"va-data-table__table-th va-data-table__table-cell-select\"\n          >\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              aria-label=\"select all rows\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              :color=\"selectedColor\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.name\"\n            scope=\"col\"\n            :aria-sort=\"getColumnAriaSortOrder(column.name)\"\n            :aria-label=\"column.sortable ? `sort column by ${column.label}` : undefined\"\n            :title=\"column.thTitle\"\n            class=\"va-data-table__table-th\"\n            :class=\"getClass(column.thClass)\"\n            :style=\"[getHeaderCSSVariables(column), getStyle(column.thStyle)]\"\n            @click.exact=\"column.sortable && toggleSorting(column)\"\n            @keydown.enter.stop=\"column.sortable && toggleSorting(column)\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\" :tabindex=\"column.sortable ? 0 : -1\">\n              <span v-if=\"`header(${column.name})` in $slots\">\n                <slot :name=\"`header(${column.name})`\" v-bind=\"{ label: column.label, key: column.key }\" />\n              </span>\n\n              <slot v-else name=\"header\" v-bind=\"{ label: column.label, key: column.key }\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                aria-hidden=\"true\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.name && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"headerAppend\" />\n      </thead>\n\n      <tbody\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyPrepend\" />\n\n        <transition-group\n          :name=\"animationName\"\n          appear\n        >\n\n          <tr\n            v-if=\"showNoDataHtml\"\n            key=\"showNoDataHtml\"\n          >\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n\n          <tr\n            v-else-if=\"showNoDataFilteredHtml\"\n            key=\"showNoDataFilteredHtml\"\n          >\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataFilteredHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n\n          <tr\n            v-for=\"row in rows\"\n            :key=\"`table-row_${row.initialIndex}`\"\n            class=\"va-data-table__table-tr\"\n            :class=\"[{ selected: isRowSelected(row) }]\"\n            v-bind=\"getRowBind(row)\"\n            @click=\"onRowClickHandler('row:click', $event, row)\"\n            @dblclick=\"onRowClickHandler('row:dblclick', $event, row)\"\n            @contextmenu=\"onRowClickHandler('row:contextmenu', $event, row)\"\n          >\n            <td\n              v-if=\"selectable\"\n              class=\"va-data-table__table-td va-data-table__table-cell-select\"\n              :key=\"`selectable_${row.initialIndex}`\"\n              @selectstart.prevent\n            >\n              <va-checkbox\n                :model-value=\"isRowSelected(row)\"\n                :color=\"selectedColor\"\n                :aria-label=\"`select row ${row.initialIndex}`\"\n                @click.shift.exact.stop=\"shiftSelectRows(row)\"\n                @click.ctrl.exact.stop=\"ctrlSelectRow(row)\"\n                @click.exact.stop=\"ctrlSelectRow(row)\"\n              />\n            </td>\n\n            <td\n              v-for=\"cell in row.cells\"\n              :key=\"`table-cell_${cell.column.name + cell.rowIndex}`\"\n              class=\"va-data-table__table-td\"\n              :class=\"getClass(cell.column.tdClass)\"\n              :style=\"[getCellCSSVariables(cell), getStyle(cell.column.tdStyle)]\"\n              v-bind=\"getCellBind(cell, row)\"\n            >\n              <slot\n                v-if=\"`cell(${cell.column.name})` in $slots\"\n                :name=\"`cell(${cell.column.name})`\"\n                v-bind=\"cell\"\n              />\n\n              <slot v-else name=\"cell\" v-bind=\"cell\">\n                {{ cell.value }}\n              </slot>\n            </td>\n          </tr>\n        </transition-group>\n\n        <slot name=\"bodyAppend\" />\n      </tbody>\n\n      <tfoot\n        v-if=\"footerClone\"\n        class=\"va-data-table__table-tfoot\"\n        :class=\"{ 'va-data-table__table-tfoot--sticky': $props.stickyFooter }\"\n      >\n        <slot name=\"footerPrepend\" />\n\n        <tr v-if=\"!hideDefaultHeader\" class=\"va-data-table__table-tr\">\n          <th v-if=\"selectable\" class=\"va-data-table__table-th\">\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              aria-label=\"select all rows\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              :color=\"selectedColor\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.name\"\n            :title=\"column.thTitle\"\n            :aria-label=\"allowFooterSorting && column.sortable ? `sort column by ${column.label}` : undefined\"\n            class=\"va-data-table__table-th\"\n            :class=\"getClass(column.thClass)\"\n            :style=\"[getFooterCSSVariables(column), getStyle(column.thStyle)]\"\n            @click.exact=\"allowFooterSorting && column.sortable && toggleSorting(column)\"\n            @keydown.enter.stop=\"allowFooterSorting && column.sortable && toggleSorting(column)\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\" :tabindex=\"allowFooterSorting && column.sortable ? 0 : -1\">\n              <span v-if=\"`footer(${column.name})` in $slots\">\n                <slot :name=\"`footer(${column.name})`\" v-bind=\"{ label: column.label, key: column.key }\" />\n              </span>\n\n              <slot v-else name=\"footer\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"allowFooterSorting && column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.name && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"footerAppend\" />\n      </tfoot>\n    </table>\n  </va-inner-loading>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, HTMLAttributes, PropType, TableHTMLAttributes } from 'vue'\nimport omit from 'lodash/omit.js'\nimport pick from 'lodash/pick.js'\n\nimport useColumns from './hooks/useColumns'\nimport useRows from './hooks/useRows'\nimport useFilterable from './hooks/useFilterable'\nimport useSortable from './hooks/useSortable'\nimport usePaginatedRows from './hooks/usePaginatedRows'\nimport useSelectableRow from './hooks/useSelectableRow'\nimport useStylable from './hooks/useStylable'\nimport useBinding from './hooks/useBinding'\nimport useAnimationName from './hooks/useAnimationName'\n\nimport {\n  DataTableColumnSource,\n  DataTableItem,\n  DataTableRow,\n  DataTableFilterMethod,\n  DataTableSortingOrder,\n  DataTableSelectMode,\n  DataTableRowBind,\n  DataTableCellBind,\n  DataTableItemKey,\n} from './types'\n\nimport { VaInnerLoading } from '../va-inner-loading'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaIcon } from '../va-icon'\n\ntype emitNames = 'update:modelValue' |\n  'update:sortBy' |\n  'update:sortingOrder' |\n  'filtered' |\n  'sorted' |\n  'selectionChange' |\n  'row:click' |\n  'row:dblclick' |\n  'row:contextmenu'\n\n/*\n  TODO: consider a possibility to lazy-load the hooks with dynamic imports based on respective props' values. E.G.\n\n  if (selectable.value) {\n    const { default: useSelectableRow } = await import(\"./hooks/useSelectableRow\");\n  }\n\n  // Would be a cool feature (if possible at all).\n*/\n\nexport default defineComponent({\n  name: 'VaDataTable',\n\n  components: {\n    VaInnerLoading,\n    VaCheckbox,\n    VaIcon,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    columns: { type: Array as PropType<DataTableColumnSource[]>, default: () => [] as DataTableColumnSource[] },\n    items: { type: Array as PropType<DataTableItem[]>, default: () => [] as DataTableItem[] },\n    itemsTrackBy: { type: [String, Function] as PropType<string | ((item: DataTableItem) => any)>, default: '' },\n    modelValue: { type: Array as PropType<(DataTableItem | DataTableItemKey)[]> }, // selectedItems\n    sortingOrder: { type: String as PropType<DataTableSortingOrder> }, // model-able\n    sortBy: { type: String }, // model-able\n    filter: { type: String, default: '' },\n    filterMethod: { type: Function as PropType<DataTableFilterMethod> },\n    hoverable: { type: Boolean, default: false },\n    clickable: { type: Boolean, default: false },\n    animated: { type: Boolean, default: true },\n    selectable: { type: Boolean, default: false },\n    selectMode: { type: String as PropType<DataTableSelectMode>, default: 'multiple' },\n    selectedColor: { type: String, default: 'primary' },\n    perPage: { type: Number },\n    currentPage: { type: Number },\n    loading: { type: Boolean, default: false },\n    loadingColor: { type: String, default: 'primary' },\n    noDataHtml: { type: String, default: 'No items' },\n    noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },\n    hideDefaultHeader: { type: Boolean, default: false },\n    footerClone: { type: Boolean, default: false },\n    allowFooterSorting: { type: Boolean, default: false },\n    striped: { type: Boolean, default: false },\n    stickyHeader: { type: Boolean, default: false },\n    stickyFooter: { type: Boolean, default: false },\n    height: { type: [String, Number] },\n    rowBind: { type: null as unknown as PropType<DataTableRowBind> },\n    cellBind: { type: null as unknown as PropType<DataTableCellBind> },\n  },\n\n  emits: [\n    'update:modelValue', // `modelValue` is selectedItems\n    'update:sortBy',\n    'update:sortingOrder',\n    'filtered',\n    'sorted',\n    'selectionChange',\n    'row:click',\n    'row:dblclick',\n    'row:contextmenu',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { columnsComputed } = useColumns(props)\n\n    const { rowsComputed } = useRows(columnsComputed, props)\n\n    const { filteredRows } = useFilterable(rowsComputed, props, emit)\n\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n    } = useSortable(columnsComputed, filteredRows, props, emit)\n\n    const { paginatedRows } = usePaginatedRows(sortedRows, props)\n\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n    } = useSelectableRow(paginatedRows, props, emit)\n\n    const {\n      rowCSSVariables,\n      stickyCSSVariables,\n      getHeaderCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getClass,\n      getStyle,\n    } = useStylable(props)\n\n    const { getRowBind, getCellBind } = useBinding(props)\n\n    const animationName = useAnimationName(props, paginatedRows)\n\n    const showNoDataHtml = computed(() => props.items.length === 0)\n\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0)\n\n    const onRowClickHandler = (name: emitNames, event: Event, row: DataTableRow) => {\n      if (props.clickable) {\n        emit(name, {\n          event,\n          item: row.source,\n          itemIndex: row.initialIndex,\n        })\n      }\n    }\n\n    const computedAttributes = computed(() => ({\n      class: [\n        { 'va-data-table--sticky': props.stickyHeader || props.stickyFooter },\n        { 'va-data-table--scroll': !!props.height },\n        attrs.class,\n      ],\n      style: [stickyCSSVariables.value, attrs.style],\n    }) as HTMLAttributes)\n\n    const computedTableAttributes = computed(() => ({\n      ...omit(attrs, ['class', 'style']),\n      class: pick(props, ['striped', 'selectable', 'hoverable', 'clickable']),\n    }) as TableHTMLAttributes)\n\n    const getColumnAriaSortOrder = (columnName: string) => sortingOrderSync.value && sortBySync.value === columnName\n      ? sortingOrderSync.value === 'asc' ? 'ascending' : 'descending'\n      : 'none'\n\n    return {\n      columnsComputed,\n      rows: paginatedRows,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      rowCSSVariables,\n      getHeaderCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getClass,\n      getStyle,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      computedAttributes,\n      computedTableAttributes,\n      animationName,\n      getColumnAriaSortOrder,\n      getRowBind,\n      getCellBind,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/index.scss\";\n@import \"variables\";\n// The calculated variables are taken from a respective element's `style` attribute. See the `useStylable` hook\n\n.va-data-table {\n  overflow-x: auto;\n  overflow-y: hidden;\n  min-width: unset;\n  font-family: var(--va-font-family);\n\n  &--sticky,\n  &--scroll {\n    overflow-y: auto;\n    height: var(--va-data-table-scroll-table-height);\n\n    // 1) doesn't work in Firefox\n    // 2) doesn't disappear on mac (the standard one does)\n    // @include va-scroll(var(--scroll-table-color));\n  }\n\n  .va-data-table__table {\n    width: 100%;\n    cursor: default;\n    white-space: nowrap;\n\n    .va-data-table__table-thead {\n      border-bottom: var(--va-data-table-thead-border);\n      color: var(--va-data-table-thead-color);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-bottom-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n        background-color: var(--va-data-table-scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-tbody {\n      .no-data {\n        text-align: var(--va-data-table-no-data-text-align);\n        vertical-align: var(--va-data-table-no-data-vertical-align);\n      }\n    }\n\n    .va-data-table__table-tfoot {\n      border-top: var(--va-data-table-thead-border);\n      color: var(--va-data-table-thead-color);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-top-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        bottom: 0;\n        z-index: 1;\n        background-color: var(--va-data-table-scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-th {\n      padding: var(--va-data-table-cell-padding);\n      width: var(--va-data-table-width);\n      min-width: var(--va-data-table-width);\n      text-align: var(--va-data-table-align);\n      vertical-align: var(--va-data-table-vertical-align);\n      font-size: var(--va-data-table-thead-font-size);\n      line-height: var(--va-data-table-thead-line-height);\n      font-weight: var(--va-data-table-thead-font-weight);\n      text-transform: var(--va-data-table-thead-text-transform);\n      letter-spacing: var(--va-data-table-thead-letter-spacing);\n      cursor: var(--va-data-table-cursor);\n\n      .va-data-table__table-th-wrapper {\n        display: flex;\n        align-items: center;\n\n        &:focus {\n          @include focus-outline;\n        }\n      }\n\n      .va-data-table__table-th-sorting {\n        justify-self: end;\n        line-height: 1;\n      }\n\n      .va-data-table__table-th-sorting-icon {\n        opacity: 0;\n        user-select: none;\n        pointer-events: none;\n\n        &.active {\n          opacity: 1;\n          pointer-events: initial;\n        }\n      }\n\n      span {\n        flex-grow: 1;\n      }\n\n      &:hover {\n        .va-data-table__table-th-sorting-icon:not(.active) {\n          opacity: var(--va-data-table-hover-th-opacity);\n        }\n      }\n    }\n\n    .va-data-table__table-td {\n      padding: var(--va-data-table-cell-padding);\n      text-align: var(--va-data-table-align);\n      vertical-align: var(--va-data-table-vertical-align);\n    }\n\n    .va-data-table__table-th,\n    .va-data-table__table-td {\n      &.va-data-table__table-cell-select {\n        width: var(--va-data-table-selectable-cell-width);\n        min-width: var(--va-data-table-selectable-cell-width);\n        text-align: var(--va-data-table-selectable-cell-text-align);\n        vertical-align: var(--va-data-table-selectable-cell-vertical-align);\n        cursor: var(--va-data-table-selectable-tr-cursor);\n      }\n    }\n\n    .va-data-table__table-tr {\n      &.selected {\n        background-color: var(--va-data-table-selected-color);\n      }\n    }\n\n    &.clickable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    &.striped {\n      .va-data-table__table-tr {\n        position: relative;\n        z-index: 0;\n\n        &:nth-child(2n) {\n          &:not(.selected) {\n            @include va-background(var(--va-data-table-striped-tr-background-color), var(--va-data-table-striped--tr-opacity), -1);\n          }\n        }\n      }\n    }\n\n    &.selectable,\n    &.hoverable {\n      .va-data-table__table-tr {\n        &:hover {\n          background-color: var(--va-data-table-hover-color);\n        }\n      }\n\n      .va-data-table__table-tr:nth-child(2n) {\n        &:hover {\n          background-color: var(--va-data-table-hover-color);\n\n          @include va-background-opacity(transparent);\n        }\n      }\n    }\n\n    .table-transition-fade-leave-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n\n    .table-transition-fade-enter-active {\n      transition: opacity var(--va-data-table-transition) 0.2s;\n    }\n\n    .table-transition-fade-enter-from,\n    .table-transition-shuffle-enter-from,\n    .table-transition-fade-leave-to,\n    .table-transition-shuffle-leave-to {\n      opacity: 0;\n    }\n\n    .table-transition-shuffle-move {\n      transition: transform var(--va-data-table-transition);\n    }\n\n    .table-transition-shuffle-leave-active {\n      transition: none;\n    }\n\n    .table-transition-shuffle-enter-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaDataTable from './VaDataTable.vue'\n\nexport const VaDataTable = withConfigTransport(_VaDataTable)\n\nexport * from './types'\n"],"names":["baseSlice","require$$0","_castSlice","castSlice","array","start","end","length","undefined","reHasUnicode","RegExp","_hasUnicode","hasUnicode","string","test","_asciiToArray","asciiToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","join","rsSymbol","reUnicode","require$$1","unicodeToArray","match","stringToArray","toString","require$$3","upperFirst","createCaseFirst","methodName","strSymbols","chr","charAt","trailing","slice","startCase_1","result","word","index","buildTableColumn","source","initialIndex","input","key","name","label","startCase","thTitle","headerTitle","sortable","sortingFn","thAlign","alignHead","thVerticalAlign","verticalAlignHead","tdAlign","align","tdVerticalAlign","verticalAlign","width","tdClass","classes","thClass","headerClasses","tdStyle","style","thStyle","headerStyle","useColumns","props","columnsComputed","computed","columns","items","Object","keys","merge","map","getItemKey","itemsTrackBy","getValueByPath","buildTableRow","itemKey","cells","column","rowIndex","rowKey","rowData","value","_a","call","buildTableCell","useSelectableRow","paginatedRows","emit","selectedItemsFallback","ref","selectedItemsSync","get","modelValue","set","prevSelectedRowIndex","watch","selectMode","newSelectMode","oldSelectMode","setPrevSelectedRowIndex","currentSelectedItems","previousSelectedItems","immediate","getKey","noRowsSelected","some","includes","allRowsSelected","every","severalRowsSelected","isRowSelected","row","rowInitialIndex","prevSelectedRow","find","indexOf","toggleRowSelection","selectable","unselectRow","findIndex","item","selectOnlyRow","selectRow","ctrlSelectRow","shiftSelectRows","mergeSelection","rowsToSelect","rowsToSelectedItems","filter","Set","getRowsToSelect","targetIndex","Math","min","max","toggleBulkSelection","unselectAllRows","paginatedRowsKeys","selectAllRows","prefix","isFunction","val","getClass","getStyle","styles","useStyleable","getColor","getFocusColor","getHoverColor","shiftHSLAColor","useColors","color","selectedColor","rowCSSVariables","stickyCSSVariables","height","stickyHeader","stickyFooter","l","safeCSSLength","getHeaderCSSVariables","getCellCSSVariables","cell","getFooterCSSVariables","allowFooterSorting","isObject","script","defineComponent","components","VaInnerLoading","VaCheckbox","VaIcon","inheritAttrs","type","Array","default","String","Function","sortingOrder","sortBy","filterMethod","hoverable","Boolean","clickable","animated","perPage","Number","currentPage","loading","loadingColor","noDataHtml","noDataFilteredHtml","hideDefaultHeader","footerClone","striped","rowBind","cellBind","emits","setup","attrs","rowsComputed","useRows","rawItem","filteredRows","useFilterable","rawRows","toLowerCase","itemsIndexes","sortBySync","sortingOrderSync","toggleSorting","sortedRows","useSortable","sortByFallback","sortingOrderFallback","columnIndex","sort","a","b","firstValue","secondValue","firstSource","secondSource","localeCompare","usePaginatedRows","pageStartIndex","useStylable","getRowBind","getCellBind","useBinding","animationName","rows","oldRowsLength","isDifferentRowLength","newRows","animationType","useAnimationName","showNoDataHtml","showNoDataFilteredHtml","computedAttributes","class","computedTableAttributes","omit","pick","onRowClickHandler","event","itemIndex","getColumnAriaSortOrder","columnName","scope","_hoisted_7","_hoisted_9","_openBlock","_createBlock","_component_va_inner_loading","_mergeProps","_ctx","_createElementVNode","$slots","_createElementBlock","_hoisted_1","_renderSlot","_normalizeClass","$props","_hoisted_2","_hoisted_3","_component_va_checkbox","indeterminate","_Fragment","_renderList","title","_normalizeStyle","onClick","onKeydown","tabindex","_hoisted_6","_normalizeProps","_guardReactiveProps","_toDisplayString","onSelectstart","_createVNode","_component_va_icon","size","active","_TransitionGroup","appear","colspan","innerHTML","selected","$event","onDblclick","onContextmenu","_withModifiers","_createTextVNode","_hoisted_12","_hoisted_13","_withKeys","_hoisted_16","VaDataTable","withConfigTransport","_VaDataTable"],"mappings":"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"}