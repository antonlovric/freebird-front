{"version":3,"file":"index38.mjs","sources":["../../src/components/va-option-list/VaOptionList.vue","../../src/components/va-option-list/VaOptionList.vue?vue&type=template&id=69ca68d9&lang.js","../../src/components/va-option-list/index.ts"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul class=\"va-option-list__list\">\n      <li\n        v-for=\"option in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot v-bind=\"{ option, selectedValue, isDisabled, getText, getValue }\">\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :option=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-switch\n            v-else\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, onMounted } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport {\n  useSelectableList, useSelectableListProps, SelectableOption,\n  useValidation, useValidationProps,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaRadio } from '../va-radio'\nimport { VaSwitch } from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...useStatefulProps,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean, default: false }),\n    readonly: ({ type: Boolean, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String, default: '' }),\n    color: ({ type: String, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit, props.defaultValue)\n\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const { itemRefs, setItemRef } = useArrayRefs()\n\n    const isRadio = computed(() => props.type === 'radio')\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: SelectableOption) => getTrackBy(option)\n\n    const isDisabled = (option: SelectableOption) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(itemRefs.value) && itemRefs.value.find(el => !(el as HTMLInputElement).disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    const computedProps = computed(() => pick(props, ['name', 'color', 'readonly', 'leftLabel']))\n\n    onMounted(() => {\n      if (__DEV__ && props.type !== 'radio' && !Array.isArray(props.modelValue)) {\n        console.warn(`Prop 'modelValue = ${props.modelValue}' has not a proper type!\\n For component property 'type = ${props.type}' it must be of type 'array'.`)\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n      setItemRef,\n      computedProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul class=\"va-option-list__list\">\n      <li\n        v-for=\"option in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot v-bind=\"{ option, selectedValue, isDisabled, getText, getValue }\">\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :option=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-switch\n            v-else\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, onMounted } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { __DEV__ } from '../../utils/global-utils'\nimport {\n  useSelectableList, useSelectableListProps, SelectableOption,\n  useValidation, useValidationProps,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n} from '../../composables'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaRadio } from '../va-radio'\nimport { VaSwitch } from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...useStatefulProps,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean, default: false }),\n    readonly: ({ type: Boolean, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String, default: '' }),\n    color: ({ type: String, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit, props.defaultValue)\n\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const { itemRefs, setItemRef } = useArrayRefs()\n\n    const isRadio = computed(() => props.type === 'radio')\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: SelectableOption) => getTrackBy(option)\n\n    const isDisabled = (option: SelectableOption) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(itemRefs.value) && itemRefs.value.find(el => !(el as HTMLInputElement).disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    const computedProps = computed(() => pick(props, ['name', 'color', 'readonly', 'leftLabel']))\n\n    onMounted(() => {\n      if (__DEV__ && props.type !== 'radio' && !Array.isArray(props.modelValue)) {\n        console.warn(`Prop 'modelValue = ${props.modelValue}' has not a proper type!\\n For component property 'type = ${props.type}' it must be of type 'array'.`)\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n      setItemRef,\n      computedProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaOptionList from './VaOptionList.vue'\n\nexport const VaOptionList = withConfigTransport(_VaOptionList)\n"],"names":["script","defineComponent","name","components","VaRadio","VaCheckbox","VaSwitch","VaMessageListWrapper","emits","useStatefulEmits","props","useSelectableListProps","useValidationProps","useStatefulProps","type","String","default","validator","includes","disabled","Boolean","readonly","defaultValue","Number","Object","Array","color","leftLabel","modelValue","setup","emit","valueComputed","useStateful","getValue","getText","getTrackBy","getDisabled","useSelectableList","itemRefs","setItemRef","useArrayRefs","isRadio","computed","selectedValue","get","value","set","isArray","map","reset","undefined","focus","firstActiveEl","find","el","computedError","computedErrorMessages","useValidation","computedProps","pick","onMounted","__DEV__","console","warn","getKey","option","isDisabled","_hoisted_1","class","_createBlock","_component_VaMessageListWrapper","error","_ctx","$props","errorCount","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_renderList","options","key","_renderSlot","$slots","_normalizeProps","_guardReactiveProps","_component_va_radio","_mergeProps","ref","$event","label","_component_va_checkbox","_component_va_switch","VaOptionList","withConfigTransport","_VaOptionList"],"mappings":"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"}